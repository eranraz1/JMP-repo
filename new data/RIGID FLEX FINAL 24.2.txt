from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v15.0.0 """

def getModelMetadata():
	return {"creator": u"Formula Editor", "modelName": u"", "predicted": u"", "table": u"Rigid flex final 24.2.21", "version": u"15.0.0", "timestamp": u"2021-02-24T14:09:12Z"}


def getInputMetadata():
    return {
        u"Assembly_scrap": "float",
        u"BOARD_TYPE": "str",
        u"CAM_LAYUP": "str",
        u"CAM_PNL_SIZE_X": "float",
        u"CAM_PNL_SIZE_Y": "float",
        u"Costing_Lot_Size_Panels": "float",
        u"DL_PNL_HOLE_QTY": "float",
        u"DR_PNL_HOLE_QTY": "float",
        u"ETCHBACK": "str",
        u"EXIST_LASER": "str",
        u"FAI_TYPE": "str",
        u"FINISH_CS": "str",
        u"FINISH_THK": "float",
        u"FLEX_CLADS_NUM": "float",
        u"HATS_COUPON_TYPE": "str",
        u"JOB_SUB_NUM": "float",
        u"NEED_MICROWAVE": "str",
        u"NUM_DESIGN_LAYERS": "float",
        u"NUM_PCBS_PNL": "float",
        u"PANEL_XY": "float",
        u"PASTE_APPLY": "str",
        u"PASTE_TYPE": "str",
        u"ROUTING_PHASE": "str",
        u"SEL_PLT": "str",
        u"SEL_PLT_CS": "str",
        u"SEL_PLT_PS": "str",
        u"STRAIN_RELIEF": "str",
        u"WRAP_REQUIRMENT": "str"
	}


def getOutputMetadata():
    return {
        u"Add": "float"
	}


def score(indata, outdata):
    # WRAP_REQUIRMENT_asCode
    # STRAIN_RELIEF_asCode
    # SEL_PLT_asCode
    # SEL_PLT_PS_asCode
    # SEL_PLT_CS_asCode
    # ROUTING_PHASE_asCode
    # PASTE_TYPE_asCode
    # PASTE_APPLY_asCode
    # NEED_MICROWAVE_asCode
    # HATS_COUPON_TYPE_asCode
    # FINISH_CS_asCode
    # FAI_TYPE_asCode
    # EXIST_LASER_asCode
    # ETCHBACK_asCode
    # CAM_LAYUP_asCode
    # BOARD_TYPE_asCode
    _temp_0 = np.nan
    _temp_1 = np.nan
    _temp_2 = np.nan
    _temp_3 = np.nan
    _temp_4 = np.nan
    _temp_5 = np.nan
    _temp_6 = np.nan
    _temp_7 = np.nan
    _temp_8 = np.nan
    _temp_9 = np.nan
    _temp_10 = np.nan
    _temp_11 = np.nan
    _temp_12 = np.nan
    _temp_13 = np.nan
    _temp_14 = np.nan
    _temp_15 = np.nan
    _temp_16 = np.nan
    _temp_17 = np.nan
    _temp_18 = np.nan
    _temp_19 = np.nan
    _temp_20 = np.nan
    _temp_21 = np.nan
    _temp_22 = np.nan
    _temp_23 = np.nan
    _temp_24 = np.nan
    _temp_25 = np.nan
    _temp_26 = np.nan
    _temp_27 = np.nan
    _temp_28 = np.nan
    _temp_29 = np.nan
    _temp_30 = np.nan
    _temp_31 = np.nan
    _temp_32 = np.nan
    _temp_33 = np.nan
    _temp_34 = np.nan
    _temp_35 = np.nan
    _temp_36 = np.nan
    _temp_37 = np.nan
    _temp_38 = np.nan
    _temp_39 = np.nan
    _temp_40 = np.nan
    _temp_41 = np.nan
    _temp_42 = np.nan
    _temp_43 = np.nan
    _temp_44 = np.nan
    _temp_45 = np.nan
    _temp_46 = np.nan
    _temp_47 = np.nan
    _temp_48 = np.nan
    _temp_49 = np.nan
    _temp_50 = np.nan
    _temp_51 = np.nan
    _temp_52 = np.nan
    _temp_53 = np.nan
    _temp_54 = np.nan
    _temp_55 = np.nan
    _temp_56 = np.nan
    _temp_57 = np.nan
    _temp_58 = np.nan
    _temp_59 = np.nan
    _temp_60 = np.nan
    _temp_61 = np.nan
    _temp_62 = np.nan
    _temp_63 = np.nan
    _temp_64 = np.nan
    _temp_65 = np.nan
    _temp_66 = np.nan
    _temp_67 = np.nan
    _temp_68 = np.nan
    _temp_69 = np.nan
    _temp_70 = np.nan
    _temp_71 = np.nan
    _temp_72 = np.nan
    _temp_73 = np.nan
    _temp_74 = np.nan
    _temp_75 = np.nan
    _temp_76 = np.nan
    _temp_77 = np.nan
    _temp_78 = np.nan
    _temp_79 = np.nan
    _temp_80 = np.nan
    _temp_81 = np.nan
    _temp_82 = np.nan
    _temp_83 = np.nan
    _temp_84 = np.nan
    _temp_85 = np.nan
    _temp_86 = np.nan
    _temp_87 = np.nan
    _temp_88 = np.nan
    _temp_89 = np.nan
    _temp_90 = np.nan
    _temp_91 = np.nan
    _temp_92 = np.nan
    _temp_93 = np.nan
    _temp_94 = np.nan
    _temp_95 = np.nan
    _temp_96 = np.nan
    _temp_97 = np.nan
    _temp_98 = np.nan
    _temp_99 = np.nan
    _temp_100 = np.nan
    _temp_101 = np.nan
    _temp_102 = np.nan
    _temp_103 = np.nan
    _temp_104 = np.nan
    _temp_105 = np.nan
    _temp_106 = np.nan
    _temp_107 = np.nan
    _temp_108 = np.nan
    _temp_109 = np.nan
    _temp_110 = np.nan
    _temp_111 = np.nan
    _temp_112 = np.nan
    _temp_113 = np.nan
    _temp_114 = np.nan
    _temp_115 = np.nan
    _temp_116 = np.nan
    _temp_117 = np.nan
    _temp_118 = np.nan
    _temp_119 = np.nan
    _temp_120 = np.nan
    _temp_121 = np.nan
    _temp_122 = np.nan
    _temp_123 = np.nan
    _temp_124 = np.nan
    _temp_125 = np.nan
    _temp_126 = np.nan
    _temp_127 = np.nan
    _temp_128 = np.nan
    _temp_129 = np.nan
    _temp_130 = np.nan
    _temp_131 = np.nan
    _temp_132 = np.nan
    _temp_133 = np.nan
    _temp_134 = np.nan
    _temp_135 = np.nan
    _temp_136 = np.nan
    _temp_137 = np.nan
    _temp_138 = np.nan
    _temp_139 = np.nan
    _temp_140 = np.nan
    _temp_141 = np.nan
    _temp_142 = np.nan
    _temp_143 = np.nan
    _temp_144 = np.nan
    _temp_145 = np.nan
    _temp_146 = np.nan
    _temp_147 = np.nan
    _temp_148 = np.nan
    _temp_149 = np.nan
    _temp_150 = np.nan
    _temp_151 = np.nan
    _temp_152 = np.nan
    _temp_153 = np.nan
    _temp_154 = np.nan
    _temp_155 = np.nan
    _temp_156 = np.nan
    _temp_157 = np.nan
    _temp_158 = np.nan
    _temp_159 = np.nan
    _temp_160 = np.nan
    _temp_161 = np.nan
    _temp_162 = np.nan
    _temp_163 = np.nan
    _temp_164 = np.nan
    _temp_165 = np.nan
    _temp_166 = np.nan
    _temp_167 = np.nan
    _temp_168 = np.nan
    _temp_169 = np.nan
    _temp_170 = np.nan
    _temp_171 = np.nan
    _temp_172 = np.nan
    _temp_173 = np.nan
    _temp_174 = np.nan
    _temp_175 = np.nan
    _temp_176 = np.nan
    _temp_177 = np.nan
    _temp_178 = np.nan
    _temp_179 = np.nan
    _temp_180 = np.nan
    _temp_181 = np.nan
    _temp_182 = np.nan
    _temp_183 = np.nan
    _temp_184 = np.nan
    _temp_185 = np.nan
    _temp_186 = np.nan
    _temp_187 = np.nan
    _temp_188 = np.nan
    _temp_189 = np.nan
    _temp_190 = np.nan
    _temp_191 = np.nan
    _temp_192 = np.nan
    _temp_193 = np.nan
    _temp_194 = np.nan
    _temp_195 = np.nan
    _temp_196 = np.nan
    _temp_197 = np.nan
    _temp_198 = np.nan
    _temp_199 = np.nan
    _temp_200 = np.nan
    _temp_201 = np.nan
    _temp_202 = np.nan
    _temp_203 = np.nan
    _temp_204 = np.nan
    _temp_205 = np.nan
    _temp_206 = np.nan
    _temp_207 = np.nan
    _temp_208 = np.nan
    _temp_209 = np.nan
    _temp_210 = np.nan
    _temp_211 = np.nan
    _temp_212 = np.nan
    _temp_213 = np.nan
    _temp_214 = np.nan
    _temp_215 = np.nan
    _temp_216 = np.nan
    _temp_217 = np.nan
    _temp_218 = np.nan
    _temp_219 = np.nan
    _temp_220 = np.nan
    _temp_221 = np.nan
    _temp_222 = np.nan
    _temp_223 = np.nan
    _temp_224 = np.nan
    _temp_225 = np.nan
    _temp_226 = np.nan
    _temp_227 = np.nan
    _temp_228 = np.nan
    _temp_229 = np.nan
    _temp_230 = np.nan
    _temp_231 = np.nan
    _temp_232 = np.nan
    _temp_233 = np.nan
    _temp_234 = np.nan
    _temp_235 = np.nan
    _temp_236 = np.nan
    _temp_237 = np.nan
    _temp_238 = np.nan
    _temp_239 = np.nan
    _temp_240 = np.nan
    _temp_241 = np.nan
    _temp_242 = np.nan
    _temp_243 = np.nan
    _temp_244 = np.nan
    _temp_245 = np.nan
    _temp_246 = np.nan
    _temp_247 = np.nan
    _temp_248 = np.nan
    _temp_249 = np.nan
    _temp_250 = np.nan
    _temp_251 = np.nan
    _temp_252 = np.nan
    _temp_253 = np.nan
    _temp_254 = np.nan
    _temp_255 = np.nan
    _temp_256 = np.nan
    _temp_257 = np.nan
    _temp_258 = np.nan
    _temp_259 = np.nan
    _temp_260 = np.nan
    _temp_261 = np.nan
    _temp_262 = np.nan
    _temp_263 = np.nan
    _temp_264 = np.nan
    _temp_265 = np.nan
    _temp_266 = np.nan
    _temp_267 = np.nan
    _temp_268 = np.nan
    _temp_269 = np.nan
    _temp_270 = np.nan
    _temp_271 = np.nan
    _temp_272 = np.nan
    _temp_273 = np.nan
    _temp_274 = np.nan
    _temp_275 = np.nan
    _temp_276 = np.nan
    _temp_277 = np.nan
    _temp_278 = np.nan
    _temp_279 = np.nan
    _temp_280 = np.nan
    _temp_281 = np.nan
    _temp_282 = np.nan
    _temp_283 = np.nan
    _temp_284 = np.nan
    _temp_285 = np.nan
    _temp_286 = np.nan
    _temp_287 = np.nan
    _temp_288 = np.nan
    _temp_289 = np.nan
    _temp_290 = np.nan
    _temp_291 = np.nan
    _temp_292 = np.nan
    _temp_293 = np.nan
    _temp_294 = np.nan
    _temp_295 = np.nan
    _temp_296 = np.nan
    _temp_297 = np.nan
    _temp_298 = np.nan
    _temp_299 = np.nan
    _temp_300 = np.nan
    _temp_301 = np.nan
    _temp_302 = np.nan
    _temp_303 = np.nan
    _temp_304 = np.nan
    _temp_305 = np.nan
    _temp_306 = np.nan
    _temp_307 = np.nan
    _temp_308 = np.nan
    _temp_309 = np.nan
    _temp_310 = np.nan
    _temp_311 = np.nan
    _temp_312 = np.nan
    _temp_313 = np.nan
    _temp_314 = np.nan
    _temp_315 = np.nan
    _temp_316 = np.nan
    _temp_317 = np.nan
    _temp_318 = np.nan
    _temp_319 = np.nan
    _temp_320 = np.nan
    _temp_321 = np.nan
    _temp_322 = np.nan
    _temp_323 = np.nan
    _temp_324 = np.nan
    _temp_325 = np.nan
    _temp_326 = np.nan
    _temp_327 = np.nan
    _temp_328 = np.nan
    _temp_329 = np.nan
    _temp_330 = np.nan
    _temp_331 = np.nan
    _temp_332 = np.nan
    _temp_333 = np.nan
    _temp_334 = np.nan
    _temp_335 = np.nan
    _temp_336 = np.nan
    _temp_337 = np.nan
    _temp_338 = np.nan
    _temp_339 = np.nan
    _temp_340 = np.nan
    _temp_341 = np.nan
    _temp_342 = np.nan
    _temp_343 = np.nan
    _temp_344 = np.nan
    _temp_345 = np.nan
    _temp_346 = np.nan
    _temp_347 = np.nan
    _temp_348 = np.nan
    _temp_349 = np.nan
    _temp_350 = np.nan
    _temp_351 = np.nan
    _temp_352 = np.nan
    _temp_353 = np.nan
    _temp_354 = np.nan
    _temp_355 = np.nan
    _temp_356 = np.nan
    _temp_357 = np.nan
    _temp_358 = np.nan
    _temp_359 = np.nan
    _temp_360 = np.nan
    _temp_361 = np.nan
    _temp_362 = np.nan
    _temp_363 = np.nan
    _temp_364 = np.nan
    _temp_365 = np.nan
    _temp_366 = np.nan
    _temp_367 = np.nan
    _temp_368 = np.nan
    _temp_369 = np.nan
    _temp_370 = np.nan
    _temp_371 = np.nan
    _temp_372 = np.nan
    _temp_373 = np.nan
    _temp_374 = np.nan
    _temp_375 = np.nan
    _temp_376 = np.nan
    _temp_377 = np.nan
    _temp_378 = np.nan
    _temp_379 = np.nan
    _temp_380 = np.nan
    _temp_381 = np.nan
    _temp_382 = np.nan
    _temp_383 = np.nan
    _temp_384 = np.nan
    _temp_385 = np.nan
    _temp_386 = np.nan
    _temp_387 = np.nan
    _temp_388 = np.nan
    _temp_389 = np.nan
    _temp_390 = np.nan
    _temp_391 = np.nan
    _temp_392 = np.nan
    _temp_393 = np.nan
    _temp_394 = np.nan
    _temp_395 = np.nan
    _temp_396 = np.nan
    _temp_397 = np.nan
    _temp_398 = np.nan
    _temp_399 = np.nan
    _temp_400 = np.nan
    _temp_401 = np.nan
    _temp_402 = np.nan
    _temp_403 = np.nan
    _temp_404 = np.nan
    _temp_405 = np.nan
    _temp_406 = np.nan
    _temp_407 = np.nan
    _temp_408 = np.nan
    _temp_409 = np.nan
    _temp_410 = np.nan
    _temp_411 = np.nan
    _temp_412 = np.nan
    _temp_413 = np.nan
    _temp_414 = np.nan
    _temp_415 = np.nan
    _temp_416 = np.nan
    _temp_417 = np.nan
    _temp_418 = np.nan
    _temp_419 = np.nan
    _temp_420 = np.nan
    _temp_421 = np.nan
    _temp_422 = np.nan
    _temp_423 = np.nan
    _temp_424 = np.nan
    _temp_425 = np.nan
    _temp_426 = np.nan
    _temp_427 = np.nan
    _temp_428 = np.nan
    _temp_429 = np.nan
    _temp_430 = np.nan
    _temp_431 = np.nan
    _temp_432 = np.nan
    _temp_433 = np.nan
    _temp_434 = np.nan
    _temp_435 = np.nan
    _temp_436 = np.nan
    _temp_437 = np.nan
    _temp_438 = np.nan
    _temp_439 = np.nan
    _temp_440 = np.nan
    _temp_441 = np.nan
    _temp_442 = np.nan
    _temp_443 = np.nan
    _temp_444 = np.nan
    _temp_445 = np.nan
    _temp_446 = np.nan
    _temp_447 = np.nan
    _temp_448 = np.nan
    _temp_449 = np.nan
    _temp_450 = np.nan
    _temp_451 = np.nan
    _temp_452 = np.nan
    _temp_453 = np.nan
    _temp_454 = np.nan
    _temp_455 = np.nan
    _temp_456 = np.nan
    _temp_457 = np.nan
    _temp_458 = np.nan
    _temp_459 = np.nan
    _temp_460 = np.nan
    _temp_461 = np.nan
    _temp_462 = np.nan
    _temp_463 = np.nan
    _temp_464 = np.nan
    _temp_465 = np.nan
    _temp_466 = np.nan
    _temp_467 = np.nan
    _temp_468 = np.nan
    _temp_469 = np.nan
    _temp_470 = np.nan
    _temp_471 = np.nan
    _temp_472 = np.nan
    _temp_473 = np.nan
    _temp_474 = np.nan
    _temp_475 = np.nan
    _temp_476 = np.nan
    _temp_477 = np.nan
    _temp_478 = np.nan
    _temp_479 = np.nan
    _temp_480 = np.nan
    _temp_481 = np.nan
    _temp_482 = np.nan
    _temp_483 = np.nan
    _temp_484 = np.nan
    _temp_485 = np.nan
    _temp_486 = np.nan
    _temp_487 = np.nan
    _temp_488 = np.nan
    _temp_489 = np.nan
    _temp_490 = np.nan
    _temp_491 = np.nan
    _temp_492 = np.nan
    _temp_493 = np.nan
    _temp_494 = np.nan
    _temp_495 = np.nan
    _temp_496 = np.nan
    _temp_497 = np.nan
    _temp_498 = np.nan
    _temp_499 = np.nan
    _temp_500 = np.nan
    _temp_501 = np.nan
    _temp_502 = np.nan
    _temp_503 = np.nan
    _temp_504 = np.nan
    _temp_505 = np.nan
    _temp_506 = np.nan
    _temp_507 = np.nan
    _temp_508 = np.nan
    _temp_509 = np.nan
    _temp_510 = np.nan
    _temp_511 = np.nan
    _temp_512 = np.nan
    _temp_513 = np.nan
    _temp_514 = np.nan
    _temp_515 = np.nan
    _temp_516 = np.nan
    _temp_517 = np.nan
    _temp_518 = np.nan
    _temp_519 = np.nan
    _temp_520 = np.nan
    _temp_521 = np.nan
    _temp_522 = np.nan
    _temp_523 = np.nan
    _temp_524 = np.nan
    _temp_525 = np.nan
    _temp_526 = np.nan
    _temp_527 = np.nan
    _temp_528 = np.nan
    _temp_529 = np.nan
    _temp_530 = np.nan
    _temp_531 = np.nan
    _temp_532 = np.nan
    _temp_533 = np.nan
    _temp_534 = np.nan
    _temp_535 = np.nan
    _temp_536 = np.nan
    _temp_537 = np.nan
    _temp_538 = np.nan
    _temp_539 = np.nan
    _temp_540 = np.nan
    _temp_541 = np.nan
    _temp_542 = np.nan
    _temp_543 = np.nan
    _temp_544 = np.nan
    _temp_545 = np.nan
    _temp_546 = np.nan
    _temp_547 = np.nan
    _temp_548 = np.nan
    _temp_549 = np.nan
    _temp_550 = np.nan
    _temp_551 = np.nan
    _temp_552 = np.nan
    _temp_553 = np.nan
    _temp_554 = np.nan
    _temp_555 = np.nan
    _temp_556 = np.nan
    _temp_557 = np.nan
    _temp_558 = np.nan
    _temp_559 = np.nan
    _temp_560 = np.nan
    _temp_561 = np.nan
    _temp_562 = np.nan
    _temp_563 = np.nan
    _temp_564 = np.nan
    _temp_565 = np.nan
    _temp_566 = np.nan
    _temp_567 = np.nan
    _temp_568 = np.nan
    _temp_569 = np.nan
    _temp_570 = np.nan
    _temp_571 = np.nan
    _temp_572 = np.nan
    _temp_573 = np.nan
    _temp_574 = np.nan
    _temp_575 = np.nan
    _temp_576 = np.nan
    _temp_577 = np.nan
    _temp_578 = np.nan
    _temp_579 = np.nan
    _temp_580 = np.nan
    _temp_581 = np.nan
    _temp_582 = np.nan
    _temp_583 = np.nan
    _temp_584 = np.nan
    _temp_585 = np.nan
    _temp_586 = np.nan
    _temp_587 = np.nan
    _temp_588 = np.nan
    _temp_589 = np.nan
    _temp_590 = np.nan
    _temp_591 = np.nan
    _temp_592 = np.nan
    _temp_593 = np.nan
    _temp_594 = np.nan
    _temp_595 = np.nan
    _temp_596 = np.nan

    if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
        _temp_0 = 0
    elif (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
        _temp_0 = 1
    elif (indata[u"WRAP_REQUIRMENT"] == u"MIL P 50884E"):
        _temp_0 = 2
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6013 CLASS3"):
        _temp_0 = 3
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6013 CLASS2"):
        _temp_0 = 4
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
        _temp_0 = 5
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
        _temp_0 = 6
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
        _temp_0 = 7
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS3"):
        _temp_0 = 8
    WRAP_REQUIRMENT_asCode = _temp_0

    if (indata[u"STRAIN_RELIEF"] == u"NO"):
        _temp_1 = 0
    elif (indata[u"STRAIN_RELIEF"] == u"YES"):
        _temp_1 = 1
    STRAIN_RELIEF_asCode = _temp_1

    if (indata[u"SEL_PLT"] == u"NO"):
        _temp_2 = 0
    elif (indata[u"SEL_PLT"] == u"YES"):
        _temp_2 = 1
    SEL_PLT_asCode = _temp_2

    if (indata[u"SEL_PLT_PS"] == u"NONE"):
        _temp_3 = 0
    elif (indata[u"SEL_PLT_PS"] == u"SA_HG"):
        _temp_3 = 1
    elif (indata[u"SEL_PLT_PS"] == u"SA_HG_NI"):
        _temp_3 = 2
    elif (indata[u"SEL_PLT_PS"] == u"CNTR_HG"):
        _temp_3 = 3
    elif (indata[u"SEL_PLT_PS"] == u"SA_NI"):
        _temp_3 = 4
    SEL_PLT_PS_asCode = _temp_3

    if (indata[u"SEL_PLT_CS"] == u"CNTR_HG"):
        _temp_4 = 0
    elif (indata[u"SEL_PLT_CS"] == u"SA_NI"):
        _temp_4 = 1
    elif (indata[u"SEL_PLT_CS"] == u"SA_HG"):
        _temp_4 = 2
    elif (indata[u"SEL_PLT_CS"] == u"NONE"):
        _temp_4 = 3
    elif (indata[u"SEL_PLT_CS"] == u"SA_HG_NI"):
        _temp_4 = 4
    SEL_PLT_CS_asCode = _temp_4

    if (indata[u"ROUTING_PHASE"] == u"EDGE"):
        _temp_5 = 0
    elif (indata[u"ROUTING_PHASE"] == u"NONE"):
        _temp_5 = 1
    elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
        _temp_5 = 2
    elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
        _temp_5 = 3
    ROUTING_PHASE_asCode = _temp_5

    if (indata[u"PASTE_TYPE"] == u"LASER"):
        _temp_6 = 0
    elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
        _temp_6 = 1
    elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
        _temp_6 = 2
    elif (indata[u"PASTE_TYPE"] == u"NONE"):
        _temp_6 = 3
    elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
        _temp_6 = 4
    PASTE_TYPE_asCode = _temp_6

    if (indata[u"PASTE_APPLY"] == u"NONE"):
        _temp_7 = 0
    elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
        _temp_7 = 1
    elif (indata[u"PASTE_APPLY"] == u"PRINT SCREEN"):
        _temp_7 = 2
    PASTE_APPLY_asCode = _temp_7

    if (indata[u"NEED_MICROWAVE"] == u"NO"):
        _temp_8 = 0
    elif (indata[u"NEED_MICROWAVE"] == u"YES"):
        _temp_8 = 1
    NEED_MICROWAVE_asCode = _temp_8

    if (indata[u"HATS_COUPON_TYPE"] == u"INTERNAL"):
        _temp_9 = 0
    elif (indata[u"HATS_COUPON_TYPE"] == u"EXTERNAL"):
        _temp_9 = 1
    elif (indata[u"HATS_COUPON_TYPE"] == u"NONE"):
        _temp_9 = 2
    HATS_COUPON_TYPE_asCode = _temp_9

    if (indata[u"FINISH_CS"] == u"CHM_GOLD"):
        _temp_10 = 0
    elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
        _temp_10 = 1
    elif (indata[u"FINISH_CS"] == u"ENEPIG"):
        _temp_10 = 2
    elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
        _temp_10 = 3
    elif (indata[u"FINISH_CS"] == u"HAL"):
        _temp_10 = 4
    elif (indata[u"FINISH_CS"] == u"NONE"):
        _temp_10 = 5
    FINISH_CS_asCode = _temp_10

    if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
        _temp_11 = 0
    elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
        _temp_11 = 1
    elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
        _temp_11 = 2
    elif (indata[u"FAI_TYPE"] == u"RC-06"):
        _temp_11 = 3
    elif (indata[u"FAI_TYPE"] == u"RC-28"):
        _temp_11 = 4
    elif (indata[u"FAI_TYPE"] == u"NONE"):
        _temp_11 = 5
    FAI_TYPE_asCode = _temp_11

    if (indata[u"EXIST_LASER"] == u"NO"):
        _temp_12 = 0
    elif (indata[u"EXIST_LASER"] == u"YES"):
        _temp_12 = 1
    EXIST_LASER_asCode = _temp_12

    if (indata[u"ETCHBACK"] == u"NO"):
        _temp_13 = 0
    elif (indata[u"ETCHBACK"] == u"YES"):
        _temp_13 = 1
    ETCHBACK_asCode = _temp_13

    if (indata[u"CAM_LAYUP"] == u"CORE"):
        _temp_14 = 0
    elif (indata[u"CAM_LAYUP"] == u"FOIL"):
        _temp_14 = 1
    CAM_LAYUP_asCode = _temp_14

    if (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
        _temp_15 = 0
    elif (indata[u"BOARD_TYPE"] == u"GENERAL"):
        _temp_15 = 1
    elif (indata[u"BOARD_TYPE"] == u"MILITARY"):
        _temp_15 = 2
    elif (indata[u"BOARD_TYPE"] == u"SPACE"):
        _temp_15 = 3
    BOARD_TYPE_asCode = _temp_15

    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_16 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_16 = -1
    else:
        _temp_16 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_17 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_17 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_17 = -1
    else:
        _temp_17 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_18 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_18 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_18 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_18 = -1
    else:
        _temp_18 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_19 = -7134.90176256902
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_19 = 7134.90176256902
    else:
        _temp_19 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_20 = -2552.17453578078
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_20 = 2552.17453578078
    else:
        _temp_20 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_21 = -2077.69606198465
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_21 = 2077.69606198465
    else:
        _temp_21 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_22 = -1041.55454802093
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_22 = 1041.55454802093
    else:
        _temp_22 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_23 = -919.860336828895
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_23 = 919.860336828895
    else:
        _temp_23 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_24 = -622.623396044727
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_24 = 622.623396044727
    else:
        _temp_24 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_25 = -521.21155990543
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_25 = 521.21155990543
    else:
        _temp_25 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_26 = -368.652195424046
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_26 = 368.652195424046
    else:
        _temp_26 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_27 = -126.502028757775
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_27 = 126.502028757775
    else:
        _temp_27 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_28 = -105.823596171496
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_28 = 105.823596171496
    else:
        _temp_28 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_29 = -89.2582270678491
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_29 = 89.2582270678491
    else:
        _temp_29 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_30 = -73.4339635458998
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_30 = 73.4339635458998
    else:
        _temp_30 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_31 = -66.5239273374138
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_31 = 66.5239273374138
    else:
        _temp_31 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_32 = 3.65066133141842
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_32 = -3.65066133141842
    else:
        _temp_32 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_33 = 5.82244937316501
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_33 = -5.82244937316501
    else:
        _temp_33 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_34 = 16.1591625855152
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_34 = -16.1591625855152
    else:
        _temp_34 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_35 = 29.2804252234827
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_35 = -29.2804252234827
    else:
        _temp_35 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_36 = 139.232264605349
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_36 = -139.232264605349
    else:
        _temp_36 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_37 = 168.264612944226
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_37 = -168.264612944226
    else:
        _temp_37 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_38 = 185.759932215954
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_38 = -185.759932215954
    else:
        _temp_38 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_39 = 548.483558137331
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_39 = -548.483558137331
    else:
        _temp_39 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_40 = 3544.84798821507
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_40 = -3544.84798821507
    else:
        _temp_40 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_41 = -744.429825581056
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_41 = 744.429825581056
    else:
        _temp_41 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_42 = -0.629726902356718
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_42 = 0.629726902356718
    else:
        _temp_42 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_43 = 3154.10296514272
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_43 = -3154.10296514272
    else:
        _temp_43 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_44 = 4055.86451670092
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_44 = -4055.86451670092
    else:
        _temp_44 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_45 = 6217.07878199516
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_45 = -6217.07878199516
    else:
        _temp_45 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_46 = 8120.29246148267
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_46 = -8120.29246148267
    else:
        _temp_46 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_47 = -37613.0382905395
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_47 = 37613.0382905395
    else:
        _temp_47 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_48 = -17215.6533395238
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_48 = 17215.6533395238
    else:
        _temp_48 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_49 = -3667.31158337953
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_49 = 3667.31158337953
    else:
        _temp_49 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_50 = -3337.57272102149
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_50 = 3337.57272102149
    else:
        _temp_50 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_51 = -1669.49944874941
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_51 = 1669.49944874941
    else:
        _temp_51 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_52 = -1627.39312072633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_52 = 1627.39312072633
    else:
        _temp_52 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_53 = -1375.14112786871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_53 = 1375.14112786871
    else:
        _temp_53 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_54 = -716.200056433369
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_54 = 716.200056433369
    else:
        _temp_54 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_55 = -581.808843166472
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_55 = 581.808843166472
    else:
        _temp_55 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_56 = 281.62359872976
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_56 = -281.62359872976
    else:
        _temp_56 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_57 = 1441.70394817022
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_57 = -1441.70394817022
    else:
        _temp_57 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_58 = 1504.30015830851
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_58 = -1504.30015830851
    else:
        _temp_58 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_59 = 1562.51218924633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_59 = -1562.51218924633
    else:
        _temp_59 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_60 = 3315.37843304868
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_60 = -3315.37843304868
    else:
        _temp_60 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_61 = 3326.24896351734
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_61 = -3326.24896351734
    else:
        _temp_61 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_62 = 4028.17409647987
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_62 = -4028.17409647987
    else:
        _temp_62 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_63 = 4807.44974921474
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_63 = -4807.44974921474
    else:
        _temp_63 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_64 = 6229.37482241403
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_64 = -6229.37482241403
    else:
        _temp_64 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_65 = 11449.3907112828
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_65 = -11449.3907112828
    else:
        _temp_65 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_66 = 12238.8422851949
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_66 = -12238.8422851949
    else:
        _temp_66 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_67 = 18891.5863843614
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_67 = -18891.5863843614
    else:
        _temp_67 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_69 = -116.939765777082
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_69 = 116.939765777082
        else:
            _temp_69 = np.nan
        _temp_68 = _temp_69
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_70 = 116.939765777082
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_70 = -116.939765777082
        else:
            _temp_70 = np.nan
        _temp_68 = _temp_70
    else:
        _temp_68 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_72 = 2480.96688457454
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_72 = -2480.96688457454
        else:
            _temp_72 = np.nan
        _temp_71 = _temp_72
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_73 = -2480.96688457454
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_73 = 2480.96688457454
        else:
            _temp_73 = np.nan
        _temp_71 = _temp_73
    else:
        _temp_71 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_74 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_74 = -1
    else:
        _temp_74 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_75 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_75 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_75 = -1
    else:
        _temp_75 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_76 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_76 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_76 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_76 = -1
    else:
        _temp_76 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_77 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_77 = -1
    else:
        _temp_77 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_78 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_78 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_78 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_78 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_78 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_78 = -1
    else:
        _temp_78 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_79 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_79 = -1
    else:
        _temp_79 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_80 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_80 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_80 = -1
    else:
        _temp_80 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_81 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_81 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_81 = -1
    else:
        _temp_81 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_82 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_82 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_82 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_82 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_82 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_82 = -1
    else:
        _temp_82 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_83 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_83 = -1
    else:
        _temp_83 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_84 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_84 = -1
    else:
        _temp_84 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_85 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_85 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_85 = -1
    else:
        _temp_85 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_86 = -26831.5247240633
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_86 = 26831.5247240633
    else:
        _temp_86 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_87 = -9569.59776899964
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_87 = 9569.59776899964
    else:
        _temp_87 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_88 = -6515.73092862668
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_88 = 6515.73092862668
    else:
        _temp_88 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_89 = -1525.05685823562
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_89 = 1525.05685823562
    else:
        _temp_89 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_90 = -96.5745664945962
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_90 = 96.5745664945962
    else:
        _temp_90 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_91 = 1504.10806722898
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_91 = -1504.10806722898
    else:
        _temp_91 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_92 = 1771.39205493029
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_92 = -1771.39205493029
    else:
        _temp_92 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_93 = 4831.49833810807
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_93 = -4831.49833810807
    else:
        _temp_93 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_94 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_94 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_94 = -1
    else:
        _temp_94 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_95 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_95 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_95 = -1
    else:
        _temp_95 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_96 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_96 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_96 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_96 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_96 = -1
    else:
        _temp_96 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_97 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_97 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_97 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_97 = -1
    else:
        _temp_97 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_98 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_98 = -1
    else:
        _temp_98 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_99 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_99 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_99 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_99 = -1
    else:
        _temp_99 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_100 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_100 = -1
    else:
        _temp_100 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_101 = -2641.03344220345
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_101 = 2641.03344220345
    else:
        _temp_101 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_102 = -193.322449583559
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_102 = 193.322449583559
    else:
        _temp_102 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_103 = 6992.22081425757
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_103 = -6992.22081425757
    else:
        _temp_103 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_104 = 99624.7598572578
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_104 = -99624.7598572578
    else:
        _temp_104 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_105 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_105 = -1
    else:
        _temp_105 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_106 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_106 = -1
    else:
        _temp_106 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_107 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_107 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_107 = -1
    else:
        _temp_107 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_108 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_108 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_108 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_108 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_108 = -1
    else:
        _temp_108 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_109 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_109 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_109 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_109 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_109 = -1
    else:
        _temp_109 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_110 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_110 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_110 = -1
    else:
        _temp_110 = 0
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_111 = -1179.85818593986
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_111 = 1179.85818593986
    else:
        _temp_111 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_112 = -861.47183867959
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_112 = 861.47183867959
    else:
        _temp_112 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_113 = -647.880099954179
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_113 = 647.880099954179
    else:
        _temp_113 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_114 = 0.522552737582026
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_114 = -0.522552737582026
    else:
        _temp_114 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_115 = 14.1725623232547
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_115 = -14.1725623232547
    else:
        _temp_115 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_116 = 133.770063806454
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_116 = -133.770063806454
    else:
        _temp_116 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_117 = 213.530695101539
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_117 = -213.530695101539
    else:
        _temp_117 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_118 = 429.674820553647
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_118 = -429.674820553647
    else:
        _temp_118 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_119 = 779.161341018857
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_119 = -779.161341018857
    else:
        _temp_119 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_120 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_120 = -1
    else:
        _temp_120 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_121 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_121 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_121 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_121 = -1
    else:
        _temp_121 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_122 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_122 = -1
    else:
        _temp_122 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_123 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_123 = -1
    else:
        _temp_123 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_124 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_124 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_124 = -1
    else:
        _temp_124 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_125 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_125 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_125 = -1
    else:
        _temp_125 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_126 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_126 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_126 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_126 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_126 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_126 = -1
    else:
        _temp_126 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_127 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_127 = -1
    else:
        _temp_127 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_128 = -581.808843166472
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_128 = 581.808843166472
    else:
        _temp_128 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_129 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_129 = -1
    else:
        _temp_129 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_130 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_130 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_130 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_130 = -1
    else:
        _temp_130 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_131 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_131 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_131 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_131 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_131 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_131 = -1
    else:
        _temp_131 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_132 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_132 = -1
    else:
        _temp_132 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_133 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_133 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_133 = -1
    else:
        _temp_133 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_134 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_134 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_134 = -1
    else:
        _temp_134 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_135 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_135 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_135 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_135 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_135 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_135 = -1
    else:
        _temp_135 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_136 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_136 = -1
    else:
        _temp_136 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_137 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_137 = -1
    else:
        _temp_137 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_138 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_138 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_138 = -1
    else:
        _temp_138 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_139 = -96.5745664945962
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_139 = 96.5745664945962
    else:
        _temp_139 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_140 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_140 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_140 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_140 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_140 = -1
    else:
        _temp_140 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_141 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_141 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_141 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_141 = -1
    else:
        _temp_141 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_142 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_142 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_142 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_142 = -1
    else:
        _temp_142 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_143 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_143 = -1
    else:
        _temp_143 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_144 = -193.322449583559
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_144 = 193.322449583559
    else:
        _temp_144 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_145 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_145 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_145 = -1
    else:
        _temp_145 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_146 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_146 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_146 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_146 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_146 = -1
    else:
        _temp_146 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_147 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_147 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_147 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_147 = -1
    else:
        _temp_147 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_148 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_148 = -1
    else:
        _temp_148 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_149 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_149 = -1
    else:
        _temp_149 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_150 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_150 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_150 = -1
    else:
        _temp_150 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_151 = -126.502028757775
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_151 = 126.502028757775
    else:
        _temp_151 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_152 = -17215.6533395238
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_152 = 17215.6533395238
    else:
        _temp_152 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_153 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_153 = -1
    else:
        _temp_153 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_154 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_154 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_154 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_154 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_154 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_154 = -1
    else:
        _temp_154 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_155 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_155 = -1
    else:
        _temp_155 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_156 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_156 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_156 = -1
    else:
        _temp_156 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_157 = 1504.10806722898
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_157 = -1504.10806722898
    else:
        _temp_157 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_158 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_158 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_158 = -1
    else:
        _temp_158 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_159 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_159 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_159 = -1
    else:
        _temp_159 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_160 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_160 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_160 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_160 = -1
    else:
        _temp_160 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_161 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_161 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_161 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_161 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_161 = -1
    else:
        _temp_161 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_162 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_162 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_162 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_162 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_162 = -1
    else:
        _temp_162 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_163 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_163 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_163 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_163 = -1
    else:
        _temp_163 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_164 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_164 = -1
    else:
        _temp_164 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_165 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_165 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_165 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_165 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_165 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_165 = -1
    else:
        _temp_165 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_166 = -37613.0382905395
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_166 = 37613.0382905395
    else:
        _temp_166 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_167 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_167 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_167 = -1
    else:
        _temp_167 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_168 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_168 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_168 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_168 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_168 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_168 = -1
    else:
        _temp_168 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_169 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_169 = -1
    else:
        _temp_169 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_170 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_170 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_170 = -1
    else:
        _temp_170 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_171 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_171 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_171 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_171 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_171 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_171 = -1
    else:
        _temp_171 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_172 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_172 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_172 = -1
    else:
        _temp_172 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_173 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_173 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_173 = -1
    else:
        _temp_173 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_174 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_174 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_174 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_174 = -1
    else:
        _temp_174 = 0
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_175 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_175 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_175 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_175 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_175 = -1
    else:
        _temp_175 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_176 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_176 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_176 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_176 = -1
    else:
        _temp_176 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_177 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_177 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_177 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_177 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_177 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_177 = -1
    else:
        _temp_177 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_178 = 5.82244937316501
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_178 = -5.82244937316501
    else:
        _temp_178 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_179 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_179 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_179 = -1
    else:
        _temp_179 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_180 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_180 = -1
    else:
        _temp_180 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_181 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_181 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_181 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_181 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_181 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_181 = -1
    else:
        _temp_181 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_182 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_182 = -1
    else:
        _temp_182 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_183 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_183 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_183 = -1
    else:
        _temp_183 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_184 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_184 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_184 = -1
    else:
        _temp_184 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_185 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_185 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_185 = -1
    else:
        _temp_185 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_186 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_186 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_186 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_186 = -1
    else:
        _temp_186 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_187 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_187 = -1
    else:
        _temp_187 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_188 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_188 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_188 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_188 = -1
    else:
        _temp_188 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_189 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_189 = -1
    else:
        _temp_189 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_190 = 6992.22081425757
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_190 = -6992.22081425757
    else:
        _temp_190 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_191 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_191 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_191 = -1
    else:
        _temp_191 = 0
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_192 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_192 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_192 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_192 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_192 = -1
    else:
        _temp_192 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_193 = 14.1725623232547
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_193 = -14.1725623232547
    else:
        _temp_193 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_194 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_194 = -1
    else:
        _temp_194 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_195 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_195 = -1
    else:
        _temp_195 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_196 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_196 = -1
    else:
        _temp_196 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_197 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_197 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_197 = -1
    else:
        _temp_197 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_198 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_198 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_198 = -1
    else:
        _temp_198 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_199 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_199 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_199 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_199 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_199 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_199 = -1
    else:
        _temp_199 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_200 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_200 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_200 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_200 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_200 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_200 = -1
    else:
        _temp_200 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_201 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_201 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_201 = -1
    else:
        _temp_201 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_202 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_202 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_202 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_202 = -1
    else:
        _temp_202 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_203 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_203 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_203 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_203 = -1
    else:
        _temp_203 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_204 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_204 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_204 = -1
    else:
        _temp_204 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_205 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_205 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_205 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_205 = -1
    else:
        _temp_205 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_206 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_206 = -1
    else:
        _temp_206 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_207 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_207 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_207 = -1
    else:
        _temp_207 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_208 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_208 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_208 = -1
    else:
        _temp_208 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_209 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_209 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_209 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_209 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_209 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_209 = -1
    else:
        _temp_209 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_210 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_210 = -1
    else:
        _temp_210 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_211 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_211 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_211 = -1
    else:
        _temp_211 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_212 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_212 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_212 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_212 = -1
    else:
        _temp_212 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_213 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_213 = -1
    else:
        _temp_213 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_214 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_214 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_214 = -1
    else:
        _temp_214 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_215 = -2552.17453578078
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_215 = 2552.17453578078
    else:
        _temp_215 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_216 = -919.860336828895
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_216 = 919.860336828895
    else:
        _temp_216 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_217 = -622.623396044727
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_217 = 622.623396044727
    else:
        _temp_217 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_218 = -89.2582270678491
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_218 = 89.2582270678491
    else:
        _temp_218 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_219 = -1669.49944874941
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_219 = 1669.49944874941
    else:
        _temp_219 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_220 = 3315.37843304868
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_220 = -3315.37843304868
    else:
        _temp_220 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_221 = 4807.44974921474
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_221 = -4807.44974921474
    else:
        _temp_221 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_222 = 12238.8422851949
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_222 = -12238.8422851949
    else:
        _temp_222 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_224 = 2480.96688457454
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_224 = -2480.96688457454
        else:
            _temp_224 = np.nan
        _temp_223 = _temp_224
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_225 = -2480.96688457454
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_225 = 2480.96688457454
        else:
            _temp_225 = np.nan
        _temp_223 = _temp_225
    else:
        _temp_223 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_226 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_226 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_226 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_226 = -1
    else:
        _temp_226 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_227 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_227 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_227 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_227 = -1
    else:
        _temp_227 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_228 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_228 = -1
    else:
        _temp_228 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_229 = -1
    else:
        _temp_229 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_230 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_230 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_230 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_230 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_230 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_230 = -1
    else:
        _temp_230 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_231 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_231 = -1
    else:
        _temp_231 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_232 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_232 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_232 = -1
    else:
        _temp_232 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_233 = -26831.5247240633
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_233 = 26831.5247240633
    else:
        _temp_233 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_234 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_234 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_234 = -1
    else:
        _temp_234 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_235 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_235 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_235 = -1
    else:
        _temp_235 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_236 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_236 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_236 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_236 = -1
    else:
        _temp_236 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_237 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_237 = -1
    else:
        _temp_237 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_238 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_238 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_238 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_238 = -1
    else:
        _temp_238 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_239 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_239 = -1
    else:
        _temp_239 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_240 = 99624.7598572578
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_240 = -99624.7598572578
    else:
        _temp_240 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_241 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_241 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_241 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_241 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_241 = -1
    else:
        _temp_241 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_242 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_242 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_242 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_242 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_242 = -1
    else:
        _temp_242 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_243 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_243 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_243 = -1
    else:
        _temp_243 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_244 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_244 = -1
    else:
        _temp_244 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_245 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_245 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_245 = -1
    else:
        _temp_245 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_246 = -521.21155990543
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_246 = 521.21155990543
    else:
        _temp_246 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_247 = -89.2582270678491
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_247 = 89.2582270678491
    else:
        _temp_247 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_248 = 16.1591625855152
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_248 = -16.1591625855152
    else:
        _temp_248 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_249 = -3337.57272102149
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_249 = 3337.57272102149
    else:
        _temp_249 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_250 = -1669.49944874941
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_250 = 1669.49944874941
    else:
        _temp_250 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_251 = -1627.39312072633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_251 = 1627.39312072633
    else:
        _temp_251 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_252 = 281.62359872976
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_252 = -281.62359872976
    else:
        _temp_252 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_253 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_253 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_253 = -1
    else:
        _temp_253 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_254 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_254 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_254 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_254 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_254 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_254 = -1
    else:
        _temp_254 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_255 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_255 = -1
    else:
        _temp_255 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_256 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_256 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_256 = -1
    else:
        _temp_256 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_257 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_257 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_257 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_257 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_257 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_257 = -1
    else:
        _temp_257 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_258 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_258 = -1
    else:
        _temp_258 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_259 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_259 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_259 = -1
    else:
        _temp_259 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_260 = -6515.73092862668
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_260 = 6515.73092862668
    else:
        _temp_260 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_261 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_261 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_261 = -1
    else:
        _temp_261 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_262 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_262 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_262 = -1
    else:
        _temp_262 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_263 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_263 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_263 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_263 = -1
    else:
        _temp_263 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_264 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_264 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_264 = -1
    else:
        _temp_264 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_265 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_265 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_265 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_265 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_265 = -1
    else:
        _temp_265 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_266 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_266 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_266 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_266 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_266 = -1
    else:
        _temp_266 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_267 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_267 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_267 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_267 = -1
    else:
        _temp_267 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_268 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_268 = -1
    else:
        _temp_268 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_269 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_269 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_269 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_269 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_269 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_269 = -1
    else:
        _temp_269 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_270 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_270 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_270 = -1
    else:
        _temp_270 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_271 = -521.21155990543
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_271 = 521.21155990543
    else:
        _temp_271 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_272 = -368.652195424046
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_272 = 368.652195424046
    else:
        _temp_272 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_273 = 168.264612944226
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_273 = -168.264612944226
    else:
        _temp_273 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_274 = 548.483558137331
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_274 = -548.483558137331
    else:
        _temp_274 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_275 = -1627.39312072633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_275 = 1627.39312072633
    else:
        _temp_275 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_276 = -1375.14112786871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_276 = 1375.14112786871
    else:
        _temp_276 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_277 = 1562.51218924633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_277 = -1562.51218924633
    else:
        _temp_277 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_278 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_278 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_278 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_278 = -1
    else:
        _temp_278 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_279 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_279 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_279 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_279 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_279 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_279 = -1
    else:
        _temp_279 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_280 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_280 = -1
    else:
        _temp_280 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_281 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_281 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_281 = -1
    else:
        _temp_281 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_282 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_282 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_282 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_282 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_282 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_282 = -1
    else:
        _temp_282 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_283 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_283 = -1
    else:
        _temp_283 = 0
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_284 = -9569.59776899964
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_284 = 9569.59776899964
    else:
        _temp_284 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_285 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_285 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_285 = -1
    else:
        _temp_285 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_286 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_286 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_286 = -1
    else:
        _temp_286 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_287 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_287 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_287 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_287 = -1
    else:
        _temp_287 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_288 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_288 = -1
    else:
        _temp_288 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_289 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_289 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_289 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_289 = -1
    else:
        _temp_289 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_290 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_290 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_290 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_290 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_290 = -1
    else:
        _temp_290 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_291 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_291 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_291 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_291 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_291 = -1
    else:
        _temp_291 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_292 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_292 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_292 = -1
    else:
        _temp_292 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_293 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_293 = -1
    else:
        _temp_293 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_294 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_294 = -1
    else:
        _temp_294 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_295 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_295 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_295 = -1
    else:
        _temp_295 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_296 = 29.2804252234827
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_296 = -29.2804252234827
    else:
        _temp_296 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_297 = 139.232264605349
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_297 = -139.232264605349
    else:
        _temp_297 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_298 = 168.264612944226
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_298 = -168.264612944226
    else:
        _temp_298 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_299 = -1375.14112786871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_299 = 1375.14112786871
    else:
        _temp_299 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_300 = -716.200056433369
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_300 = 716.200056433369
    else:
        _temp_300 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_301 = 281.62359872976
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_301 = -281.62359872976
    else:
        _temp_301 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_302 = 3326.24896351734
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_302 = -3326.24896351734
    else:
        _temp_302 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_304 = -116.939765777082
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_304 = 116.939765777082
        else:
            _temp_304 = np.nan
        _temp_303 = _temp_304
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_305 = 116.939765777082
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_305 = -116.939765777082
        else:
            _temp_305 = np.nan
        _temp_303 = _temp_305
    else:
        _temp_303 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_306 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_306 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_306 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_306 = -1
    else:
        _temp_306 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_307 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_307 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_307 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_307 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_307 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_307 = -1
    else:
        _temp_307 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_308 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_308 = -1
    else:
        _temp_308 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_309 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_309 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_309 = -1
    else:
        _temp_309 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_310 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_310 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_310 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_310 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_310 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_310 = -1
    else:
        _temp_310 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_311 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_311 = -1
    else:
        _temp_311 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_312 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_312 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_312 = -1
    else:
        _temp_312 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_313 = 1771.39205493029
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_313 = -1771.39205493029
    else:
        _temp_313 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_314 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_314 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_314 = -1
    else:
        _temp_314 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_315 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_315 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_315 = -1
    else:
        _temp_315 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_316 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_316 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_316 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_316 = -1
    else:
        _temp_316 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_317 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_317 = -1
    else:
        _temp_317 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_318 = -2641.03344220345
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_318 = 2641.03344220345
    else:
        _temp_318 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_319 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_319 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 4)):
        _temp_319 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_319 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_319 = -1
    else:
        _temp_319 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_320 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_320 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_320 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_320 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_320 = -1
    else:
        _temp_320 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_321 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_321 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_321 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_321 = -1
    else:
        _temp_321 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_322 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_322 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_322 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_322 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_322 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_322 = -1
    else:
        _temp_322 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_323 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_323 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_323 = -1
    else:
        _temp_323 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_324 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_324 = -1
    else:
        _temp_324 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_325 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_325 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_325 = -1
    else:
        _temp_325 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_326 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_326 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_326 = -1
    else:
        _temp_326 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_327 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_327 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_327 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_327 = -1
    else:
        _temp_327 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_328 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_328 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_328 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_328 = -1
    else:
        _temp_328 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_329 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_329 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_329 = -1
    else:
        _temp_329 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_330 = 3.65066133141842
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_330 = -3.65066133141842
    else:
        _temp_330 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_331 = -0.629726902356718
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_331 = 0.629726902356718
    else:
        _temp_331 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_332 = 1504.30015830851
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_332 = -1504.30015830851
    else:
        _temp_332 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_333 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_333 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_333 = -1
    else:
        _temp_333 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_334 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_334 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_334 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_334 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_334 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_334 = -1
    else:
        _temp_334 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_335 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_335 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_335 = -1
    else:
        _temp_335 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_336 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_336 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_336 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_336 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_336 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_336 = -1
    else:
        _temp_336 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_337 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_337 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_337 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_337 = -1
    else:
        _temp_337 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_338 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_338 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_338 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_338 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_338 = -1
    else:
        _temp_338 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_339 = 0.522552737582026
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_339 = -0.522552737582026
    else:
        _temp_339 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_340 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_340 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_340 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_340 = -1
    else:
        _temp_340 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_341 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_341 = -1
    else:
        _temp_341 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_342 = -919.860336828895
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_342 = 919.860336828895
    else:
        _temp_342 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_343 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_343 = -1
    else:
        _temp_343 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_344 = -73.4339635458998
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_344 = 73.4339635458998
    else:
        _temp_344 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_345 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_345 = -1
    else:
        _temp_345 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_346 = 6229.37482241403
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_346 = -6229.37482241403
    else:
        _temp_346 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_347 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_347 = -1
    else:
        _temp_347 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_348 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_348 = -1
    else:
        _temp_348 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_349 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_349 = -1
    else:
        _temp_349 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_350 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_350 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_350 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_350 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_350 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_350 = -1
    else:
        _temp_350 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_351 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_351 = -1
    else:
        _temp_351 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_352 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_352 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_352 = -1
    else:
        _temp_352 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_353 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_353 = -1
    else:
        _temp_353 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_354 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_354 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_354 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_354 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_354 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_354 = -1
    else:
        _temp_354 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_355 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_355 = -1
    else:
        _temp_355 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_356 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_356 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_356 = -1
    else:
        _temp_356 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_357 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_357 = -1
    else:
        _temp_357 = 0
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_358 = 213.530695101539
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_358 = -213.530695101539
    else:
        _temp_358 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_359 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_359 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_359 = -1
    else:
        _temp_359 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_360 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_360 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_360 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_360 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_360 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_360 = -1
    else:
        _temp_360 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_361 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_361 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_361 = -1
    else:
        _temp_361 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_362 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_362 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_362 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_362 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_362 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_362 = -1
    else:
        _temp_362 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_363 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_363 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_363 = -1
    else:
        _temp_363 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_364 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_364 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_364 = -1
    else:
        _temp_364 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_365 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_365 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_365 = -1
    else:
        _temp_365 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_366 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_366 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_366 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_366 = -1
    else:
        _temp_366 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_367 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_367 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_367 = -1
    else:
        _temp_367 = 0
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_368 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_368 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_368 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_368 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_368 = -1
    else:
        _temp_368 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_369 = -7134.90176256902
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_369 = 7134.90176256902
    else:
        _temp_369 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_370 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_370 = -1
    else:
        _temp_370 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_371 = -2077.69606198465
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_371 = 2077.69606198465
    else:
        _temp_371 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_372 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_372 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_372 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_372 = -1
    else:
        _temp_372 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_373 = -1041.55454802093
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_373 = 1041.55454802093
    else:
        _temp_373 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_374 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_374 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_374 = -1
    else:
        _temp_374 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_375 = -622.623396044727
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_375 = 622.623396044727
    else:
        _temp_375 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_376 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_376 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_376 = -1
    else:
        _temp_376 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_377 = -105.823596171496
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_377 = 105.823596171496
    else:
        _temp_377 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_378 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_378 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_378 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_378 = -1
    else:
        _temp_378 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_379 = -66.5239273374138
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_379 = 66.5239273374138
    else:
        _temp_379 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_380 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_380 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_380 = -1
    else:
        _temp_380 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_381 = 29.2804252234827
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_381 = -29.2804252234827
    else:
        _temp_381 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_382 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_382 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_382 = -1
    else:
        _temp_382 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_383 = 185.759932215954
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_383 = -185.759932215954
    else:
        _temp_383 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_384 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_384 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_384 = -1
    else:
        _temp_384 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_385 = 185.759932215954
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_385 = -185.759932215954
    else:
        _temp_385 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_386 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_386 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_386 = -1
    else:
        _temp_386 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_387 = 548.483558137331
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_387 = -548.483558137331
    else:
        _temp_387 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_388 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_388 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_388 = -1
    else:
        _temp_388 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_389 = 3544.84798821507
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_389 = -3544.84798821507
    else:
        _temp_389 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_390 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_390 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_390 = -1
    else:
        _temp_390 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_391 = -744.429825581056
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_391 = 744.429825581056
    else:
        _temp_391 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_392 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_392 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_392 = -1
    else:
        _temp_392 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_393 = 3154.10296514272
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_393 = -3154.10296514272
    else:
        _temp_393 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_394 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_394 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_394 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_394 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_394 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_394 = -1
    else:
        _temp_394 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_395 = 4055.86451670092
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_395 = -4055.86451670092
    else:
        _temp_395 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_396 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_396 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_396 = -1
    else:
        _temp_396 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_397 = 6217.07878199516
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_397 = -6217.07878199516
    else:
        _temp_397 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_398 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_398 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_398 = -1
    else:
        _temp_398 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_399 = 8120.29246148267
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_399 = -8120.29246148267
    else:
        _temp_399 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_400 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_400 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_400 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_400 = -1
    else:
        _temp_400 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_401 = -3667.31158337953
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_401 = 3667.31158337953
    else:
        _temp_401 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_402 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_402 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_402 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_402 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_402 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_402 = -1
    else:
        _temp_402 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_403 = -716.200056433369
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_403 = 716.200056433369
    else:
        _temp_403 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_404 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_404 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_404 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_404 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_404 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_404 = -1
    else:
        _temp_404 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_405 = 1441.70394817022
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_405 = -1441.70394817022
    else:
        _temp_405 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_406 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_406 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_406 = -1
    else:
        _temp_406 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_407 = 3315.37843304868
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_407 = -3315.37843304868
    else:
        _temp_407 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_408 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_408 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_408 = -1
    else:
        _temp_408 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_409 = 4028.17409647987
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_409 = -4028.17409647987
    else:
        _temp_409 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_410 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_410 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_410 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_410 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_410 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_410 = -1
    else:
        _temp_410 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_411 = 4807.44974921474
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_411 = -4807.44974921474
    else:
        _temp_411 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_412 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_412 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_412 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_412 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_412 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_412 = -1
    else:
        _temp_412 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_413 = 11449.3907112828
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_413 = -11449.3907112828
    else:
        _temp_413 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_414 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_414 = -1
    else:
        _temp_414 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_415 = 18891.5863843614
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_415 = -18891.5863843614
    else:
        _temp_415 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_416 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_416 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_416 = -1
    else:
        _temp_416 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_417 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_417 = -1
    else:
        _temp_417 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_418 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_418 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_418 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_418 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_418 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_418 = -1
    else:
        _temp_418 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_419 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_419 = -1
    else:
        _temp_419 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_420 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_420 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_420 = -1
    else:
        _temp_420 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_421 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_421 = -1
    else:
        _temp_421 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_422 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_422 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_422 = -1
    else:
        _temp_422 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_423 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_423 = -1
    else:
        _temp_423 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_424 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_424 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_424 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_424 = -1
    else:
        _temp_424 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_425 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_425 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_425 = -1
    else:
        _temp_425 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_426 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_426 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_426 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_426 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_426 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_426 = -1
    else:
        _temp_426 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_427 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_427 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_427 = -1
    else:
        _temp_427 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_428 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_428 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_428 = -1
    else:
        _temp_428 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_429 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_429 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_429 = -1
    else:
        _temp_429 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_430 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_430 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_430 = -1
    else:
        _temp_430 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_431 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_431 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_431 = -1
    else:
        _temp_431 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_432 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_432 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_432 = -1
    else:
        _temp_432 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_433 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_433 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_433 = -1
    else:
        _temp_433 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_434 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_434 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_434 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_434 = -1
    else:
        _temp_434 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_435 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_435 = -1
    else:
        _temp_435 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_436 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_436 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_436 = -1
    else:
        _temp_436 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_437 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_437 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_437 = -1
    else:
        _temp_437 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_438 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_438 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_438 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_438 = -1
    else:
        _temp_438 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_439 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_439 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_439 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_439 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_439 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_439 = -1
    else:
        _temp_439 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_440 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_440 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_440 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_440 = -1
    else:
        _temp_440 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_441 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_441 = -1
    else:
        _temp_441 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_442 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_442 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_442 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_442 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_442 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_442 = -1
    else:
        _temp_442 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_443 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_443 = -1
    else:
        _temp_443 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_444 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_444 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_444 = -1
    else:
        _temp_444 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_445 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_445 = -1
    else:
        _temp_445 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_446 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_446 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_446 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_446 = -1
    else:
        _temp_446 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_447 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_447 = -1
    else:
        _temp_447 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_448 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_448 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_448 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_448 = -1
    else:
        _temp_448 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_449 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_449 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_449 = -1
    else:
        _temp_449 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_450 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_450 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_450 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_450 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_450 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_450 = -1
    else:
        _temp_450 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_451 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_451 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_451 = -1
    else:
        _temp_451 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_452 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_452 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_452 = -1
    else:
        _temp_452 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_453 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_453 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_453 = -1
    else:
        _temp_453 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_454 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_454 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_454 = -1
    else:
        _temp_454 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_455 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_455 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_455 = -1
    else:
        _temp_455 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_456 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_456 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_456 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 3)):
        _temp_456 = -1
    else:
        _temp_456 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_457 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_457 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_457 = -1
    else:
        _temp_457 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_458 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_458 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_458 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_458 = -1
    else:
        _temp_458 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_459 = -1525.05685823562
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_459 = 1525.05685823562
    else:
        _temp_459 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_460 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_460 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_460 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_460 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_460 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_460 = -1
    else:
        _temp_460 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_461 = 4831.49833810807
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_461 = -4831.49833810807
    else:
        _temp_461 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_462 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_462 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_462 = -1
    else:
        _temp_462 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_463 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_463 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_463 = -1
    else:
        _temp_463 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_464 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_464 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_464 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_464 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_464 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_464 = -1
    else:
        _temp_464 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_465 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_465 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_465 = -1
    else:
        _temp_465 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_466 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_466 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_466 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_466 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_466 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_466 = -1
    else:
        _temp_466 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_467 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_467 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_467 = -1
    else:
        _temp_467 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_468 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_468 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_468 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 3)):
        _temp_468 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 4)):
        _temp_468 = -1
    else:
        _temp_468 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_469 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_469 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_469 = -1
    else:
        _temp_469 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_470 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_470 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_470 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_470 = -1
    else:
        _temp_470 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_471 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_471 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_471 = -1
    else:
        _temp_471 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_472 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_472 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_472 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_472 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_472 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_472 = -1
    else:
        _temp_472 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_473 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_473 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_473 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_473 = -1
    else:
        _temp_473 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_474 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_474 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_474 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_474 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_474 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_474 = -1
    else:
        _temp_474 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_475 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_475 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_475 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_475 = -1
    else:
        _temp_475 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_476 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_476 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_476 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_476 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_476 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_476 = -1
    else:
        _temp_476 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_477 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_477 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_477 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_477 = -1
    else:
        _temp_477 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_478 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_478 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 5)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 6)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 7)):
        _temp_478 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 8)):
        _temp_478 = -1
    else:
        _temp_478 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_479 = -1179.85818593986
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_479 = 1179.85818593986
    else:
        _temp_479 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_480 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_480 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_480 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_480 = -1
    else:
        _temp_480 = 0
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_481 = -861.47183867959
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_481 = 861.47183867959
    else:
        _temp_481 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_482 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_482 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_482 = -1
    else:
        _temp_482 = 0
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_483 = -647.880099954179
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_483 = 647.880099954179
    else:
        _temp_483 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_484 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_484 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_484 = -1
    else:
        _temp_484 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_485 = 133.770063806454
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_485 = -133.770063806454
    else:
        _temp_485 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_486 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_486 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_486 = -1
    else:
        _temp_486 = 0
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_487 = 429.674820553647
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_487 = -429.674820553647
    else:
        _temp_487 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_488 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_488 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_488 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_488 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_488 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_488 = -1
    else:
        _temp_488 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_489 = 779.161341018857
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_489 = -779.161341018857
    else:
        _temp_489 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_490 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_490 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_490 = -1
    else:
        _temp_490 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_491 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_491 = -1
    else:
        _temp_491 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_492 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_492 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_492 = -1
    else:
        _temp_492 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_493 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_493 = -1
    else:
        _temp_493 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_494 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_494 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_494 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_494 = -1
    else:
        _temp_494 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_495 = -89.2582270678491
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_495 = 89.2582270678491
    else:
        _temp_495 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_496 = -1669.49944874941
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_496 = 1669.49944874941
    else:
        _temp_496 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_497 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_497 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_497 = -1
    else:
        _temp_497 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_498 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_498 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_498 = -1
    else:
        _temp_498 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_499 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_499 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_499 = -1
    else:
        _temp_499 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_500 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_500 = -1
    else:
        _temp_500 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_501 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_501 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_501 = -1
    else:
        _temp_501 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_502 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_502 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_502 = -1
    else:
        _temp_502 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_503 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_503 = -1
    else:
        _temp_503 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_504 = -919.860336828895
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_504 = 919.860336828895
    else:
        _temp_504 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_505 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_505 = -1
    else:
        _temp_505 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_506 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_506 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_506 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_506 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_506 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_506 = -1
    else:
        _temp_506 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_507 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_507 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_507 = -1
    else:
        _temp_507 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_508 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_508 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_508 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_508 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_508 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_508 = -1
    else:
        _temp_508 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_509 = -622.623396044727
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_509 = 622.623396044727
    else:
        _temp_509 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_510 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_510 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_510 = -1
    else:
        _temp_510 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_511 = 3315.37843304868
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_511 = -3315.37843304868
    else:
        _temp_511 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_512 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_512 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_512 = -1
    else:
        _temp_512 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_513 = 4807.44974921474
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_513 = -4807.44974921474
    else:
        _temp_513 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_514 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_514 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_514 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_514 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_514 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_514 = -1
    else:
        _temp_514 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_515 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_515 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_515 = -1
    else:
        _temp_515 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_516 = -521.21155990543
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_516 = 521.21155990543
    else:
        _temp_516 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_517 = -1627.39312072633
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_517 = 1627.39312072633
    else:
        _temp_517 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_518 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_518 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_518 = -1
    else:
        _temp_518 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_519 = 281.62359872976
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_519 = -281.62359872976
    else:
        _temp_519 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_520 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_520 = -1
    else:
        _temp_520 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_521 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_521 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_521 = -1
    else:
        _temp_521 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_522 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_522 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_522 = -1
    else:
        _temp_522 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_523 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_523 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_523 = -1
    else:
        _temp_523 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_524 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_524 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_524 = -1
    else:
        _temp_524 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_525 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_525 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_525 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_525 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_525 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_525 = -1
    else:
        _temp_525 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_526 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_526 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_526 = -1
    else:
        _temp_526 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_527 = 168.264612944226
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_527 = -168.264612944226
    else:
        _temp_527 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_528 = -1375.14112786871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_528 = 1375.14112786871
    else:
        _temp_528 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_529 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_529 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_529 = -1
    else:
        _temp_529 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_530 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_530 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_530 = -1
    else:
        _temp_530 = 0
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_531 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_531 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_531 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_531 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_531 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_531 = -1
    else:
        _temp_531 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_532 = 548.483558137331
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_532 = -548.483558137331
    else:
        _temp_532 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_533 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_533 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_533 = -1
    else:
        _temp_533 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_534 = 29.2804252234827
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_534 = -29.2804252234827
    else:
        _temp_534 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_535 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_535 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_535 = -1
    else:
        _temp_535 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_536 = -716.200056433369
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_536 = 716.200056433369
    else:
        _temp_536 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_537 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_537 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_537 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_537 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_537 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_537 = -1
    else:
        _temp_537 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_538 = 185.759932215954
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_538 = -185.759932215954
    else:
        _temp_538 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_539 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_539 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_539 = -1
    else:
        _temp_539 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_540 = 1
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_540 = -1
    elif (jmp.numeq(PASTE_APPLY_asCode, 2)):
        _temp_540 = -1
    else:
        _temp_540 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_541 = -1811.73732150578
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_541 = 1811.73732150578
    else:
        _temp_541 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_542 = 87.9280066645392 + -0.126717064674492 * indata[u"DL_PNL_HOLE_QTY"]
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_542 = -87.9280066645392 + 0.126717064674492 * indata[u"DL_PNL_HOLE_QTY"]
    else:
        _temp_542 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_543 = 6884.07991112771
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_543 = -6884.07991112771
    else:
        _temp_543 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_544 = 38091.9102702915
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_544 = -38091.9102702915
    else:
        _temp_544 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_545 = -2634.52606318694 + 182.011030331875 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_545 = 2634.52606318694 + -182.011030331875 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_545 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_547 = 1
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_547 = -1
        elif (indata[u"PASTE_APPLY"] == u"PRINT SCREEN"):
            _temp_547 = -1
        else:
            _temp_547 = np.nan
        _temp_546 = 1673.11682274144 + -3134.00938773102 * _temp_547
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_548 = 1
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_548 = -1
        elif (indata[u"PASTE_APPLY"] == u"PRINT SCREEN"):
            _temp_548 = -1
        else:
            _temp_548 = np.nan
        _temp_546 = -1673.11682274144 + 3134.00938773102 * _temp_548
    else:
        _temp_546 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_550 = 1740.11929881818
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_550 = -1740.11929881818
        else:
            _temp_550 = np.nan
        _temp_549 = _temp_550
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_551 = -1740.11929881818
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_551 = 1740.11929881818
        else:
            _temp_551 = np.nan
        _temp_549 = _temp_551
    else:
        _temp_549 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_553 = -7976.97739986061
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_553 = 7976.97739986061
        else:
            _temp_553 = np.nan
        _temp_552 = _temp_553
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_554 = 7976.97739986061
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_554 = -7976.97739986061
        else:
            _temp_554 = np.nan
        _temp_552 = _temp_554
    else:
        _temp_552 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"STRAIN_RELIEF"] == u"NO"):
            _temp_556 = 726.180706845626
        elif (indata[u"STRAIN_RELIEF"] == u"YES"):
            _temp_556 = -726.180706845626
        else:
            _temp_556 = np.nan
        _temp_555 = _temp_556
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"STRAIN_RELIEF"] == u"NO"):
            _temp_557 = -726.180706845626
        elif (indata[u"STRAIN_RELIEF"] == u"YES"):
            _temp_557 = 726.180706845626
        else:
            _temp_557 = np.nan
        _temp_555 = _temp_557
    else:
        _temp_555 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_558 = -917.56197086376
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_558 = 917.56197086376
    else:
        _temp_558 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_559 = 34017.8313813495
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_559 = -34017.8313813495
    else:
        _temp_559 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_561 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_561 = 1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_561 = -1
        else:
            _temp_561 = 0
        _temp_560 = -21065.0377161279 + 32519.3653559348 * _temp_561
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_562 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_562 = 1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_562 = -1
        else:
            _temp_562 = 0
        _temp_560 = 21065.0377161279 + -32519.3653559348 * _temp_562
    else:
        _temp_560 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"FAI_TYPE"] == u"RC-28"):
            _temp_564 = 1
        elif (indata[u"FAI_TYPE"] == u"NONE"):
            _temp_564 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_564 = -1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_564 = -1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_564 = -1
        elif (indata[u"FAI_TYPE"] == u"RC-06"):
            _temp_564 = -1
        else:
            _temp_564 = np.nan
        _temp_563 = 13.5878540229305 + -386.341222592279 * _temp_564
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"FAI_TYPE"] == u"RC-28"):
            _temp_565 = 1
        elif (indata[u"FAI_TYPE"] == u"NONE"):
            _temp_565 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_565 = -1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_565 = -1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_565 = -1
        elif (indata[u"FAI_TYPE"] == u"RC-06"):
            _temp_565 = -1
        else:
            _temp_565 = np.nan
        _temp_563 = -13.5878540229305 + 386.341222592279 * _temp_565
    else:
        _temp_563 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_567 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_567 = -1
        else:
            _temp_567 = 0
        _temp_566 = 126.482256969355 + -851.408832249542 * _temp_567
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_568 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_568 = -1
        else:
            _temp_568 = 0
        _temp_566 = -126.482256969355 + 851.408832249542 * _temp_568
    else:
        _temp_566 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
            _temp_570 = 1
        elif (indata[u"BOARD_TYPE"] == u"GENERAL"):
            _temp_570 = -1
        else:
            _temp_570 = 0
        _temp_569 = 195.563410010409 + -1844.29849539519 * _temp_570
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
            _temp_571 = 1
        elif (indata[u"BOARD_TYPE"] == u"GENERAL"):
            _temp_571 = -1
        else:
            _temp_571 = 0
        _temp_569 = -195.563410010409 + 1844.29849539519 * _temp_571
    else:
        _temp_569 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_572 = 564.015088225416 + -38.9660093954238 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_572 = -564.015088225416 + 38.9660093954238 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_572 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"BOARD_TYPE"] == u"MILITARY"):
            _temp_574 = 1
        elif (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
            _temp_574 = -1
        elif (indata[u"BOARD_TYPE"] == u"GENERAL"):
            _temp_574 = -1
        else:
            _temp_574 = 0
        _temp_573 = 614.282500194485 + -941.438586380123 * _temp_574
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"BOARD_TYPE"] == u"MILITARY"):
            _temp_575 = 1
        elif (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
            _temp_575 = -1
        elif (indata[u"BOARD_TYPE"] == u"GENERAL"):
            _temp_575 = -1
        else:
            _temp_575 = 0
        _temp_573 = -614.282500194485 + 941.438586380123 * _temp_575
    else:
        _temp_573 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_577 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_577 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_577 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_577 = -1
        else:
            _temp_577 = 0
        _temp_576 = 1198.34425532514 + -10870.6943161638 * _temp_577
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_578 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_578 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_578 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_578 = -1
        else:
            _temp_578 = 0
        _temp_576 = -1198.34425532514 + 10870.6943161638 * _temp_578
    else:
        _temp_576 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_580 = 1
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_580 = -1
        elif (indata[u"PASTE_APPLY"] == u"PRINT SCREEN"):
            _temp_580 = -1
        else:
            _temp_580 = np.nan
        _temp_579 = 2980.13525304403 + -5582.25924980224 * _temp_580
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_581 = 1
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_581 = -1
        elif (indata[u"PASTE_APPLY"] == u"PRINT SCREEN"):
            _temp_581 = -1
        else:
            _temp_581 = np.nan
        _temp_579 = -2980.13525304403 + 5582.25924980224 * _temp_581
    else:
        _temp_579 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_583 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_583 = 1
        elif (indata[u"FINISH_CS"] == u"NONE"):
            _temp_583 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_583 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_583 = -1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_583 = -1
        else:
            _temp_583 = np.nan
        _temp_582 = 5182.78588428501 + 16265.5800816523 * _temp_583
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_584 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_584 = 1
        elif (indata[u"FINISH_CS"] == u"NONE"):
            _temp_584 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_584 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_584 = -1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_584 = -1
        else:
            _temp_584 = np.nan
        _temp_582 = -5182.78588428501 + -16265.5800816523 * _temp_584
    else:
        _temp_582 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_585 = 9897.40730246146 + -25.9889410534058 * indata[u"PANEL_XY"]
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_585 = -9897.40730246146 + 25.9889410534058 * indata[u"PANEL_XY"]
    else:
        _temp_585 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_586 = 67484.6172172361 + -33698.0853994325 * indata[u"FLEX_CLADS_NUM"]
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_586 = -67484.6172172361 + 33698.0853994325 * indata[u"FLEX_CLADS_NUM"]
    else:
        _temp_586 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_587 = 106169.590563309 + -6417.06548712178 * indata[u"CAM_PNL_SIZE_X"]
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_587 = -106169.590563309 + 6417.06548712178 * indata[u"CAM_PNL_SIZE_X"]
    else:
        _temp_587 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_589 = -38554.5185829649
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_589 = 38554.5185829649
        else:
            _temp_589 = np.nan
        _temp_588 = _temp_589
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_590 = 38554.5185829649
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_590 = -38554.5185829649
        else:
            _temp_590 = np.nan
        _temp_588 = _temp_590
    else:
        _temp_588 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"STRAIN_RELIEF"] == u"NO"):
            _temp_592 = -247.940024986611
        elif (indata[u"STRAIN_RELIEF"] == u"YES"):
            _temp_592 = 247.940024986611
        else:
            _temp_592 = np.nan
        _temp_591 = _temp_592
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"STRAIN_RELIEF"] == u"NO"):
            _temp_593 = 247.940024986611
        elif (indata[u"STRAIN_RELIEF"] == u"YES"):
            _temp_593 = -247.940024986611
        else:
            _temp_593 = np.nan
        _temp_591 = _temp_593
    else:
        _temp_591 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_594 = -518.69257182332
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_594 = 518.69257182332
    else:
        _temp_594 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_595 = 27.7940868532702 + -1.92020510101834 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_595 = -27.7940868532702 + 1.92020510101834 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_595 = np.nan
    if (jmp.numeq(STRAIN_RELIEF_asCode, 0)):
        _temp_596 = 151.067006347946 + -0.217709559669737 * indata[u"DL_PNL_HOLE_QTY"]
    elif (jmp.numeq(STRAIN_RELIEF_asCode, 1)):
        _temp_596 = -151.067006347946 + 0.217709559669737 * indata[u"DL_PNL_HOLE_QTY"]
    else:
        _temp_596 = np.nan
    outdata[u"Add"] = 7740767.43525139 + -210064.503446767 * indata[u"Assembly_scrap"] + 30827.274625685 * indata[u"CAM_PNL_SIZE_X"] + 18459.6600464758 * indata[u"CAM_PNL_SIZE_Y"] + 254702.437972216 * indata[u"Costing_Lot_Size_Panels"] + -0.23991860282825 * indata[u"DL_PNL_HOLE_QTY"] + 0.616889545182281 * indata[u"DR_PNL_HOLE_QTY"] + -2623693.32474192 * indata[u"FINISH_THK"] + -46901.8049876251 * indata[u"FLEX_CLADS_NUM"] + -218475.971794208 * indata[u"JOB_SUB_NUM"] + -2894.95091620009 * indata[u"NUM_DESIGN_LAYERS"] + -594.922461126889 * indata[u"NUM_PCBS_PNL"] + -1421.18277530578 * indata[u"PANEL_XY"] + -1862.94979321135 * _temp_16 + 4372.29973460826 * _temp_17 + -2154.74649257955 * _temp_18 + 0.0073490813648294 * _temp_19 + -1.72381154855644 * _temp_20 + -0.110236220472441 * _temp_21 + -0.533858267716535 * _temp_22 + 0.182787366303622 * _temp_23 + 1.12477572433367 * _temp_24 + 0.326937676097574 * _temp_25 + -0.163254593175853 * _temp_26 + -16.5448818897638 * _temp_27 + -0.865616797900263 * _temp_28 + 3.45214753687286 * _temp_29 + -0.106036745406824 * _temp_30 + -0.65249343832021 * _temp_31 + -380.831496062992 * _temp_32 + -6.22834645669291 * _temp_33 + -2.00262467191601 * _temp_34 + 5.4713544271533 * _temp_35 + -8.38530183727034 * _temp_36 + 1.3689390401003 * _temp_37 + 0.348339016678033 * _temp_38 + 0.0871548143096286 * _temp_39 + -0.941207349081365 * _temp_40 + -0.941207349081365 * _temp_41 + -380.831496062992 * _temp_42 + 0.318635170603675 * _temp_43 + -0.533858267716535 * _temp_44 + -0.647769028871391 * _temp_45 + -0.110236220472441 * _temp_46 + -22.5784776902887 * _temp_47 + -16.5448818897638 * _temp_48 + -0.0351706036745407 * _temp_49 + -2.00262467191601 * _temp_50 + 3.45214753687286 * _temp_51 + 0.326937676097574 * _temp_52 + 1.3689390401003 * _temp_53 + -2.67185208148194 * _temp_54 + -18.2031496062992 * _temp_55 + 16.7926123407802 * _temp_56 + -0.65249343832021 * _temp_57 + -380.831496062992 * _temp_58 + -0.163254593175853 * _temp_59 + 1.12477572433367 * _temp_60 + -8.38530183727034 * _temp_61 + 0.318635170603675 * _temp_62 + -0.549266986862864 * _temp_63 + -0.106036745406824 * _temp_64 + -0.148556430446194 * _temp_65 + -1.72381154855644 * _temp_66 + 0.245669291338583 * _temp_67 + -8.38530183727034 * _temp_68 + -1.72381154855644 * _temp_71 + -15317.8172845987 * _temp_74 + -20035.5179899589 * _temp_75 + -18656.7513411415 * _temp_76 + 1497.82869886073 * _temp_77 + -4738.38363942275 * _temp_78 + -90060.1190549919 * _temp_79 + -11729.8727615414 * _temp_80 + 3066.69036204932 * _temp_81 + -46153.2141528315 * _temp_82 + -6580.98835861105 * _temp_83 + 46821.8932276911 * _temp_84 + -30363.1679159267 * _temp_85 + -1.72381154855644 * _temp_86 + -0.163254593175853 * _temp_87 + -2.00262467191601 * _temp_88 + -0.0351706036745407 * _temp_89 + -18.2031496062992 * _temp_90 + -16.5448818897638 * _temp_91 + -8.38530183727034 * _temp_92 + -0.941207349081365 * _temp_93 + -18145.4340206395 * _temp_94 + -64777.6738919175 * _temp_95 + -20371.7639061124 * _temp_96 + -82895.2749496934 * _temp_97 + 4680842.70876079 * _temp_98 + 2342294.43433763 * _temp_99 + 12912.7513352756 * _temp_100 + -8.38530183727034 * _temp_101 + -18.2031496062992 * _temp_102 + -6.22834645669291 * _temp_103 + -1.72381154855644 * _temp_104 + -5436.5833013441 * _temp_105 + -34407.935061673 * _temp_106 + -8079379.64456682 * _temp_107 + 4025178.04922093 * _temp_108 + -1835132.33017565 * _temp_109 + 3553763.38882269 * _temp_110 + -0.110236220472441 * _temp_111 + 0.0036745406824147 * _temp_112 + -0.533858267716535 * _temp_113 + -380.831496062992 * _temp_114 + -6.22834645669291 * _temp_115 + -0.65249343832021 * _temp_116 + -0.106036745406824 * _temp_117 + 0.318635170603675 * _temp_118 + 0.318635170603675 * _temp_119 + -125.902023306702 * _temp_120 + -6781.12593841389 * _temp_121 + -40.7719731144477 * _temp_122 + 45690.9365564993 * _temp_123 + 15013.974973601 * _temp_124 + -250.397041783177 * _temp_125 + -22020.0427266527 * _temp_126 + 7778.81684469639 * _temp_127 + -1.72194246193643 * indata[u"Assembly_scrap"] * indata[u"Costing_Lot_Size_Panels"] + -0.0118355412198576 * indata[u"Assembly_scrap"] * indata[u"DL_PNL_HOLE_QTY"] + 9.83362406034667 * indata[u"Assembly_scrap"] * indata[u"FLEX_CLADS_NUM"] + -25.2713752108462 * indata[u"Assembly_scrap"] * indata[u"JOB_SUB_NUM"] + indata[u"Assembly_scrap"] * _temp_128 + 10.0644865985087 * indata[u"Assembly_scrap"] * _temp_129 + 1058.07375153316 * indata[u"Assembly_scrap"] * _temp_130 + 528.208195081175 * indata[u"Assembly_scrap"] * _temp_131 + 538.519861450611 * indata[u"Assembly_scrap"] * _temp_132 + 268.754083295035 * indata[u"Assembly_scrap"] * _temp_133 + 226.684780901714 * indata[u"Assembly_scrap"] * _temp_134 + 288.886539869496 * indata[u"Assembly_scrap"] * _temp_135 + 465.389840670371 * indata[u"Assembly_scrap"] * _temp_136 + 258.588213121475 * indata[u"Assembly_scrap"] * _temp_137 + -100.859489246666 * indata[u"Assembly_scrap"] * _temp_138 + indata[u"Assembly_scrap"] * _temp_139 + 279.917191226987 * indata[u"Assembly_scrap"] * _temp_140 + 541.575666155366 * indata[u"Assembly_scrap"] * _temp_141 + 9596.33398961896 * indata[u"Assembly_scrap"] * _temp_142 + 19185.4048559726 * indata[u"Assembly_scrap"] * _temp_143 + indata[u"Assembly_scrap"] * _temp_144 + 399331.624805208 * indata[u"Assembly_scrap"] * _temp_145 + -199476.005942242 * indata[u"Assembly_scrap"] * _temp_146 + 294.376499491453 * indata[u"Assembly_scrap"] * _temp_147 + 12.5295715212517 * indata[u"Assembly_scrap"] * _temp_148 + 610.481541714631 * indata[u"Assembly_scrap"] * _temp_149 + -0.0369557951105822 * indata[u"CAM_PNL_SIZE_X"] * indata[u"DR_PNL_HOLE_QTY"] + 705.530769758841 * indata[u"CAM_PNL_SIZE_X"] * indata[u"JOB_SUB_NUM"] + -194.06072691803 * indata[u"CAM_PNL_SIZE_X"] * _temp_150 + indata[u"CAM_PNL_SIZE_X"] * _temp_151 + indata[u"CAM_PNL_SIZE_X"] * _temp_152 + -19071.9014263746 * indata[u"CAM_PNL_SIZE_X"] * _temp_153 + -9629.24117002555 * indata[u"CAM_PNL_SIZE_X"] * _temp_154 + -535.352924685923 * indata[u"CAM_PNL_SIZE_X"] * _temp_155 + 169.636303414606 * indata[u"CAM_PNL_SIZE_X"] * _temp_156 + indata[u"CAM_PNL_SIZE_X"] * _temp_157 + -8478.93990685485 * indata[u"CAM_PNL_SIZE_X"] * _temp_158 + -12944.0950502934 * indata[u"CAM_PNL_SIZE_X"] * _temp_159 + -16703.0030578377 * indata[u"CAM_PNL_SIZE_X"] * _temp_160 + 7418.72550311941 * indata[u"CAM_PNL_SIZE_X"] * _temp_161 + 2264.33142575635 * indata[u"CAM_PNL_SIZE_X"] * _temp_162 + 1068.40638960248 * indata[u"CAM_PNL_SIZE_X"] * _temp_163 + 35.793834991589 * indata[u"CAM_PNL_SIZE_X"] * _temp_164 + 1701.84292061637 * indata[u"CAM_PNL_SIZE_X"] * _temp_165 + -3.278850882581 * indata[u"CAM_PNL_SIZE_Y"] * indata[u"Costing_Lot_Size_Panels"] + 1.35318604946136 * indata[u"CAM_PNL_SIZE_Y"] * indata[u"PANEL_XY"] + indata[u"CAM_PNL_SIZE_Y"] * _temp_166 + 304.890164611904 * indata[u"CAM_PNL_SIZE_Y"] * _temp_167 + -138.054878553528 * indata[u"CAM_PNL_SIZE_Y"] * _temp_168 + 16526.5669728346 * indata[u"CAM_PNL_SIZE_Y"] * _temp_169 + -432.390190153244 * indata[u"CAM_PNL_SIZE_Y"] * _temp_170 + 7944.80973595528 * indata[u"CAM_PNL_SIZE_Y"] * _temp_171 + 8729.67046746429 * indata[u"CAM_PNL_SIZE_Y"] * _temp_172 + 13127.365233809 * indata[u"CAM_PNL_SIZE_Y"] * _temp_173 + 17306.9167843235 * indata[u"CAM_PNL_SIZE_Y"] * _temp_174 + 2945.86156848485 * indata[u"CAM_PNL_SIZE_Y"] * _temp_175 + -382.138068397345 * indata[u"CAM_PNL_SIZE_Y"] * _temp_176 + -978.867804236918 * indata[u"CAM_PNL_SIZE_Y"] * _temp_177 + 0.00364175813360996 * indata[u"Costing_Lot_Size_Panels"] * indata[u"DR_PNL_HOLE_QTY"] + -15.777631048 * indata[u"Costing_Lot_Size_Panels"] * indata[u"FINISH_THK"] + 29.4551095262545 * indata[u"Costing_Lot_Size_Panels"] * indata[u"JOB_SUB_NUM"] + indata[u"Costing_Lot_Size_Panels"] * _temp_178 + -17.1653131798192 * indata[u"Costing_Lot_Size_Panels"] * _temp_179 + -223.418170318114 * indata[u"Costing_Lot_Size_Panels"] * _temp_180 + -100.986731167295 * indata[u"Costing_Lot_Size_Panels"] * _temp_181 + -559.342190431551 * indata[u"Costing_Lot_Size_Panels"] * _temp_182 + 267.224125470095 * indata[u"Costing_Lot_Size_Panels"] * _temp_183 + 85.0479338142382 * indata[u"Costing_Lot_Size_Panels"] * _temp_184 + -317.546977193764 * indata[u"Costing_Lot_Size_Panels"] * _temp_185 + 127.243740057281 * indata[u"Costing_Lot_Size_Panels"] * _temp_186 + -42006.3394310072 * indata[u"Costing_Lot_Size_Panels"] * _temp_187 + -290042.18719365 * indata[u"Costing_Lot_Size_Panels"] * _temp_188 + -538091.35951279 * indata[u"Costing_Lot_Size_Panels"] * _temp_189 + indata[u"Costing_Lot_Size_Panels"] * _temp_190 + -13983.1792510789 * indata[u"Costing_Lot_Size_Panels"] * _temp_191 + 166.568454206366 * indata[u"Costing_Lot_Size_Panels"] * _temp_192 + indata[u"Costing_Lot_Size_Panels"] * _temp_193 + 15.9740210928984 * indata[u"Costing_Lot_Size_Panels"] * _temp_194 + -20.130610230536 * indata[u"Costing_Lot_Size_Panels"] * _temp_195 + 0.0000051989227807711 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"DR_PNL_HOLE_QTY"] + -0.236051697418296 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"FLEX_CLADS_NUM"] + -0.228610843412929 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"JOB_SUB_NUM"] + 0.0601080771869078 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"NUM_DESIGN_LAYERS"] + -0.00599163588969072 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"NUM_PCBS_PNL"] + 0.791627339878052 * indata[u"DL_PNL_HOLE_QTY"] * _temp_196 + 0.164293797960185 * indata[u"DL_PNL_HOLE_QTY"] * _temp_197 + 1.24090087010372 * indata[u"DL_PNL_HOLE_QTY"] * _temp_198 + -0.619285523949159 * indata[u"DL_PNL_HOLE_QTY"] * _temp_199 + -1.4513032782179 * indata[u"DL_PNL_HOLE_QTY"] * _temp_200 + 0.280572822676062 * indata[u"DL_PNL_HOLE_QTY"] * _temp_201 + 0.804885065223257 * indata[u"DL_PNL_HOLE_QTY"] * _temp_202 + -0.22829318386799 * indata[u"DL_PNL_HOLE_QTY"] * _temp_203 + -229.137061426079 * indata[u"DL_PNL_HOLE_QTY"] * _temp_204 + -0.672086533262137 * indata[u"DL_PNL_HOLE_QTY"] * _temp_205 + -0.259119322146278 * indata[u"DL_PNL_HOLE_QTY"] * _temp_206 + 0.0459906161010246 * indata[u"DR_PNL_HOLE_QTY"] * indata[u"JOB_SUB_NUM"] + -0.00718503555940013 * indata[u"DR_PNL_HOLE_QTY"] * indata[u"NUM_DESIGN_LAYERS"] + -0.00125907563310793 * indata[u"DR_PNL_HOLE_QTY"] * indata[u"NUM_PCBS_PNL"] + 0.00105667441990145 * indata[u"DR_PNL_HOLE_QTY"] * indata[u"PANEL_XY"] + 0.0302311073696173 * indata[u"DR_PNL_HOLE_QTY"] * _temp_207 + -0.0293213741476933 * indata[u"DR_PNL_HOLE_QTY"] * _temp_208 + -0.017469394471882 * indata[u"DR_PNL_HOLE_QTY"] * _temp_209 + 0.739441066242958 * indata[u"DR_PNL_HOLE_QTY"] * _temp_210 + -0.408071505922831 * indata[u"DR_PNL_HOLE_QTY"] * _temp_211 + 0.0205087469257726 * indata[u"DR_PNL_HOLE_QTY"] * _temp_212 + 1740.86300104877 * indata[u"FINISH_THK"] * indata[u"FLEX_CLADS_NUM"] + -2060.67163772142 * indata[u"FINISH_THK"] * indata[u"JOB_SUB_NUM"] + -225.760836969165 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] + 0.65080664200448 * indata[u"FINISH_THK"] * indata[u"PANEL_XY"] + -3278.06393359086 * indata[u"FINISH_THK"] * _temp_213 + -5482.09590090742 * indata[u"FINISH_THK"] * _temp_214 + indata[u"FINISH_THK"] * _temp_215 + -0.106036745406824 * indata[u"FINISH_THK"] * _temp_216 + -0.65249343832021 * indata[u"FINISH_THK"] * _temp_217 + -2.00262467191601 * indata[u"FINISH_THK"] * _temp_218 + -2.00262467191601 * indata[u"FINISH_THK"] * _temp_219 + -0.65249343832021 * indata[u"FINISH_THK"] * _temp_220 + 0.318635170603675 * indata[u"FINISH_THK"] * _temp_221 + indata[u"FINISH_THK"] * _temp_222 + indata[u"FINISH_THK"] * _temp_223 + -9818.32786954926 * indata[u"FINISH_THK"] * _temp_226 + -4948.54820198964 * indata[u"FINISH_THK"] * _temp_227 + 11173.1743535686 * indata[u"FINISH_THK"] * _temp_228 + -9874.58132224861 * indata[u"FINISH_THK"] * _temp_229 + -4819.90286884722 * indata[u"FINISH_THK"] * _temp_230 + -20553.9140408084 * indata[u"FINISH_THK"] * _temp_231 + 9879.09364112719 * indata[u"FINISH_THK"] * _temp_232 + indata[u"FINISH_THK"] * _temp_233 + -6046.34267798266 * indata[u"FINISH_THK"] * _temp_234 + 7140.56798006006 * indata[u"FINISH_THK"] * _temp_235 + -11522.7107313917 * indata[u"FINISH_THK"] * _temp_236 + -2477501.50849306 * indata[u"FINISH_THK"] * _temp_237 + -689774.528347693 * indata[u"FINISH_THK"] * _temp_238 + 1098036.99173377 * indata[u"FINISH_THK"] * _temp_239 + indata[u"FINISH_THK"] * _temp_240 + -100213.38952366 * indata[u"FINISH_THK"] * _temp_241 + 850741.782579585 * indata[u"FINISH_THK"] * _temp_242 + -1701531.64565836 * indata[u"FINISH_THK"] * _temp_243 + -155.610463413142 * indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] + -300.126794044394 * indata[u"FLEX_CLADS_NUM"] * indata[u"NUM_DESIGN_LAYERS"] + 0.80762987919993 * indata[u"FLEX_CLADS_NUM"] * indata[u"PANEL_XY"] + 369.279877554327 * indata[u"FLEX_CLADS_NUM"] * _temp_244 + 321.93042211315 * indata[u"FLEX_CLADS_NUM"] * _temp_245 + -0.163254593175853 * indata[u"FLEX_CLADS_NUM"] * _temp_246 + -1.72381154855644 * indata[u"FLEX_CLADS_NUM"] * _temp_247 + indata[u"FLEX_CLADS_NUM"] * _temp_248 + indata[u"FLEX_CLADS_NUM"] * _temp_249 + -1.72381154855644 * indata[u"FLEX_CLADS_NUM"] * _temp_250 + -0.163254593175853 * indata[u"FLEX_CLADS_NUM"] * _temp_251 + -8.38530183727034 * indata[u"FLEX_CLADS_NUM"] * _temp_252 + 60.0245916888691 * indata[u"FLEX_CLADS_NUM"] * _temp_253 + -51.1059758808511 * indata[u"FLEX_CLADS_NUM"] * _temp_254 + 4500.75848505836 * indata[u"FLEX_CLADS_NUM"] * _temp_255 + 411.394155993109 * indata[u"FLEX_CLADS_NUM"] * _temp_256 + 2511.71303710377 * indata[u"FLEX_CLADS_NUM"] * _temp_257 + -6429.29663006087 * indata[u"FLEX_CLADS_NUM"] * _temp_258 + 3418.90837138624 * indata[u"FLEX_CLADS_NUM"] * _temp_259 + indata[u"FLEX_CLADS_NUM"] * _temp_260 + 1632.40853058591 * indata[u"FLEX_CLADS_NUM"] * _temp_261 + -7429.34160677481 * indata[u"FLEX_CLADS_NUM"] * _temp_262 + 2811.40545552981 * indata[u"FLEX_CLADS_NUM"] * _temp_263 + 92828.0467998778 * indata[u"FLEX_CLADS_NUM"] * _temp_264 + -12691.6945302558 * indata[u"FLEX_CLADS_NUM"] * _temp_265 + -1261.39101826576 * indata[u"FLEX_CLADS_NUM"] * _temp_266 + 3445.9249740642 * indata[u"FLEX_CLADS_NUM"] * _temp_267 + -179.871356230589 * indata[u"FLEX_CLADS_NUM"] * _temp_268 + 7040.70796159513 * indata[u"FLEX_CLADS_NUM"] * _temp_269 + 893.59069634736 * indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] + -17.6008826165726 * indata[u"JOB_SUB_NUM"] * indata[u"PANEL_XY"] + -2634.68271243618 * indata[u"JOB_SUB_NUM"] * _temp_270 + -2.00262467191601 * indata[u"JOB_SUB_NUM"] * _temp_271 + indata[u"JOB_SUB_NUM"] * _temp_272 + -8.38530183727034 * indata[u"JOB_SUB_NUM"] * _temp_273 + -0.533858267716535 * indata[u"JOB_SUB_NUM"] * _temp_274 + -2.00262467191601 * indata[u"JOB_SUB_NUM"] * _temp_275 + -8.38530183727034 * indata[u"JOB_SUB_NUM"] * _temp_276 + indata[u"JOB_SUB_NUM"] * _temp_277 + -18664.5245164606 * indata[u"JOB_SUB_NUM"] * _temp_278 + -9403.02687762324 * indata[u"JOB_SUB_NUM"] * _temp_279 + -15759.6920308147 * indata[u"JOB_SUB_NUM"] * _temp_280 + -10045.965415529 * indata[u"JOB_SUB_NUM"] * _temp_281 + -13483.1570358098 * indata[u"JOB_SUB_NUM"] * _temp_282 + -4846.47255191575 * indata[u"JOB_SUB_NUM"] * _temp_283 + indata[u"JOB_SUB_NUM"] * _temp_284 + -4438.27273016129 * indata[u"JOB_SUB_NUM"] * _temp_285 + -18096.8142783429 * indata[u"JOB_SUB_NUM"] * _temp_286 + -3409.85938662452 * indata[u"JOB_SUB_NUM"] * _temp_287 + 347004.684009908 * indata[u"JOB_SUB_NUM"] * _temp_288 + 173685.458815443 * indata[u"JOB_SUB_NUM"] * _temp_289 + -15764.168759702 * indata[u"JOB_SUB_NUM"] * _temp_290 + 428674.914960792 * indata[u"JOB_SUB_NUM"] * _temp_291 + -825135.795047305 * indata[u"JOB_SUB_NUM"] * _temp_292 + -475.898843271543 * indata[u"JOB_SUB_NUM"] * _temp_293 + 5.44645560189704 * indata[u"NUM_DESIGN_LAYERS"] * indata[u"NUM_PCBS_PNL"] + -731.599088895977 * indata[u"NUM_DESIGN_LAYERS"] * _temp_294 + -382.612923612255 * indata[u"NUM_DESIGN_LAYERS"] * _temp_295 + -0.65249343832021 * indata[u"NUM_DESIGN_LAYERS"] * _temp_296 + indata[u"NUM_DESIGN_LAYERS"] * _temp_297 + -0.163254593175853 * indata[u"NUM_DESIGN_LAYERS"] * _temp_298 + -0.163254593175853 * indata[u"NUM_DESIGN_LAYERS"] * _temp_299 + 0.318635170603675 * indata[u"NUM_DESIGN_LAYERS"] * _temp_300 + -2.00262467191601 * indata[u"NUM_DESIGN_LAYERS"] * _temp_301 + indata[u"NUM_DESIGN_LAYERS"] * _temp_302 + indata[u"NUM_DESIGN_LAYERS"] * _temp_303 + 2790.21644495203 * indata[u"NUM_DESIGN_LAYERS"] * _temp_306 + 1397.09560341581 * indata[u"NUM_DESIGN_LAYERS"] * _temp_307 + -601.825175523959 * indata[u"NUM_DESIGN_LAYERS"] * _temp_308 + -233.968981401271 * indata[u"NUM_DESIGN_LAYERS"] * _temp_309 + 302.471917880104 * indata[u"NUM_DESIGN_LAYERS"] * _temp_310 + 2534.19283793786 * indata[u"NUM_DESIGN_LAYERS"] * _temp_311 + -1222.00295523738 * indata[u"NUM_DESIGN_LAYERS"] * _temp_312 + indata[u"NUM_DESIGN_LAYERS"] * _temp_313 + -1189.37385443962 * indata[u"NUM_DESIGN_LAYERS"] * _temp_314 + -2202.64635143254 * indata[u"NUM_DESIGN_LAYERS"] * _temp_315 + -2437.12664534891 * indata[u"NUM_DESIGN_LAYERS"] * _temp_316 + 95.7561386757238 * indata[u"NUM_DESIGN_LAYERS"] * _temp_317 + indata[u"NUM_DESIGN_LAYERS"] * _temp_318 + 2640.09469561235 * indata[u"NUM_DESIGN_LAYERS"] * _temp_319 + 1218.16670716086 * indata[u"NUM_DESIGN_LAYERS"] * _temp_320 + -1015.03680148223 * indata[u"NUM_DESIGN_LAYERS"] * _temp_321 + -1989.71874689562 * indata[u"NUM_DESIGN_LAYERS"] * _temp_322 + -4.59632353744669 * indata[u"NUM_PCBS_PNL"] * _temp_323 + -1020.14869100981 * indata[u"NUM_PCBS_PNL"] * _temp_324 + 562.805793274309 * indata[u"NUM_PCBS_PNL"] * _temp_325 + -106.996501359169 * indata[u"NUM_PCBS_PNL"] * _temp_326 + -222.273077236408 * indata[u"NUM_PCBS_PNL"] * _temp_327 + -6.5630087002466 * indata[u"NUM_PCBS_PNL"] * _temp_328 + 5.21351818220904 * indata[u"PANEL_XY"] * _temp_329 + indata[u"PANEL_XY"] * _temp_330 + indata[u"PANEL_XY"] * _temp_331 + indata[u"PANEL_XY"] * _temp_332 + -7.90011535484878 * indata[u"PANEL_XY"] * _temp_333 + 3.64127612793553 * indata[u"PANEL_XY"] * _temp_334 + 13.7568677093549 * indata[u"PANEL_XY"] * _temp_335 + 12.6886595732059 * indata[u"PANEL_XY"] * _temp_336 + -1.57501934096377 * indata[u"PANEL_XY"] * _temp_337 + -141.053934643972 * indata[u"PANEL_XY"] * _temp_338 + indata[u"PANEL_XY"] * _temp_339 + -8.70864147436634 * indata[u"PANEL_XY"] * _temp_340 + -1.72381154855644 * _temp_341 * _temp_342 + _temp_343 * _temp_344 + _temp_345 * _temp_346 + -3308.06107883831 * _temp_347 * _temp_348 + -1656.46956513754 * _temp_349 * _temp_350 + -945.112826865901 * _temp_351 * _temp_352 + -3930.34500403021 * _temp_353 * _temp_354 + 409.236436281497 * _temp_355 * _temp_356 + _temp_357 * _temp_358 + -980.647272250245 * _temp_359 * _temp_360 + -866.487443987401 * _temp_361 * _temp_362 + 1824.06200733641 * _temp_363 * _temp_364 + 3208.92866703004 * _temp_365 * _temp_366 + 2934.4425193731 * _temp_367 * _temp_368 + _temp_369 * _temp_370 + _temp_371 * _temp_372 + _temp_373 * _temp_374 + -1.72381154855644 * _temp_375 * _temp_376 + _temp_377 * _temp_378 + _temp_379 * _temp_380 + -8.38530183727034 * _temp_381 * _temp_382 + -0.533858267716535 * _temp_383 * _temp_384 + -0.65249343832021 * _temp_385 * _temp_386 + -0.163254593175853 * _temp_387 * _temp_388 + _temp_389 * _temp_390 + _temp_391 * _temp_392 + _temp_393 * _temp_394 + _temp_395 * _temp_396 + _temp_397 * _temp_398 + _temp_399 * _temp_400 + _temp_401 * _temp_402 + -8.38530183727034 * _temp_403 * _temp_404 + _temp_405 * _temp_406 + -1.72381154855644 * _temp_407 * _temp_408 + _temp_409 * _temp_410 + -1.72381154855644 * _temp_411 * _temp_412 + _temp_413 * _temp_414 + _temp_415 * _temp_416 + -101.238549476903 * _temp_417 * _temp_418 + 10382.4495683054 * _temp_419 * _temp_420 + -5697.37851509462 * _temp_421 * _temp_422 + -11370.4037184992 * _temp_423 * _temp_424 + -84.2956937280397 * _temp_425 * _temp_426 + 5211.36198489071 * _temp_427 * _temp_428 + -8061.71539523259 * _temp_429 * _temp_430 + -3134.81283786538 * _temp_431 * _temp_432 + -16436.0445743805 * _temp_433 * _temp_434 + -1682.93864265 * _temp_435 * _temp_436 + -1734.95403713819 * _temp_437 * _temp_438 + -810.137554876297 * _temp_439 * _temp_440 + -2883.95579732654 * _temp_441 * _temp_442 + -3174.7909582183 * _temp_443 * _temp_444 + -12017.8573774729 * _temp_445 * _temp_446 + 2159.99607650216 * _temp_447 * _temp_448 + 2480.60505272738 * _temp_449 * _temp_450 + 1548.51801865483 * _temp_451 * _temp_452 + 1433.76503082618 * _temp_453 * _temp_454 + 5552.66753661919 * _temp_455 * _temp_456 + -553.932974629158 * _temp_457 * _temp_458 + _temp_459 * _temp_460 + _temp_461 * _temp_462 + 1231.14043897356 * _temp_463 * _temp_464 + -756.18683589798 * _temp_465 * _temp_466 + -1300.17583617943 * _temp_467 * _temp_468 + -1081.68550049738 * _temp_469 * _temp_470 + 972.061831792922 * _temp_471 * _temp_472 + 2460.78158187084 * _temp_473 * _temp_474 + -1837.708393336 * _temp_475 * _temp_476 + -1911.97154576355 * _temp_477 * _temp_478 + _temp_479 * _temp_480 + _temp_481 * _temp_482 + _temp_483 * _temp_484 + _temp_485 * _temp_486 + _temp_487 * _temp_488 + _temp_489 * _temp_490 + -354.4155230978 * _temp_491 * _temp_492 + -608.295111392074 * _temp_493 * _temp_494 + 388.717981972981 * indata[u"FINISH_THK"] * indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] + indata[u"FINISH_THK"] * indata[u"FLEX_CLADS_NUM"] * _temp_495 + indata[u"FINISH_THK"] * indata[u"FLEX_CLADS_NUM"] * _temp_496 + 1904.91413455293 * indata[u"FINISH_THK"] * indata[u"FLEX_CLADS_NUM"] * _temp_497 + 986.617733193217 * indata[u"FINISH_THK"] * indata[u"JOB_SUB_NUM"] * _temp_498 + -5554.61797455366 * indata[u"FINISH_THK"] * indata[u"JOB_SUB_NUM"] * _temp_499 + 472.558140635199 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_500 + 239.726213057929 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_501 + -488.323624574165 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_502 + indata[u"FINISH_THK"] * _temp_503 * _temp_504 + 2033.11689362674 * indata[u"FINISH_THK"] * _temp_505 * _temp_506 + 642.037503970666 * indata[u"FINISH_THK"] * _temp_507 * _temp_508 + indata[u"FINISH_THK"] * _temp_509 * _temp_510 + indata[u"FINISH_THK"] * _temp_511 * _temp_512 + indata[u"FINISH_THK"] * _temp_513 * _temp_514 + 104.233897935633 * indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] + 546.30395422318 * indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] * _temp_515 + indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] * _temp_516 + indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] * _temp_517 + 4188.22690651237 * indata[u"FLEX_CLADS_NUM"] * indata[u"JOB_SUB_NUM"] * _temp_518 + indata[u"FLEX_CLADS_NUM"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_519 + -381.608596071384 * indata[u"FLEX_CLADS_NUM"] * _temp_520 * _temp_521 + -257.509577084725 * indata[u"FLEX_CLADS_NUM"] * _temp_522 * _temp_523 + -63.9884307416186 * indata[u"FLEX_CLADS_NUM"] * _temp_524 * _temp_525 + 280.061928657536 * indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_526 + indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_527 + indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_528 + 2844.86995098963 * indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_529 + 513.072131212405 * indata[u"JOB_SUB_NUM"] * _temp_530 * _temp_531 + indata[u"JOB_SUB_NUM"] * _temp_532 * _temp_533 + indata[u"NUM_DESIGN_LAYERS"] * _temp_534 * _temp_535 + indata[u"NUM_DESIGN_LAYERS"] * _temp_536 * _temp_537 + _temp_538 * _temp_539 * _temp_540 + _temp_541 + _temp_542 + _temp_543 + _temp_544 + _temp_545 + _temp_546 + _temp_549 + _temp_552 + _temp_555 + _temp_558 + _temp_559 + _temp_560 + _temp_563 + _temp_566 + _temp_569 + _temp_572 + _temp_573 + _temp_576 + _temp_579 + _temp_582 + _temp_585 + _temp_586 + _temp_587 + _temp_588 + _temp_591 + _temp_594 + _temp_595 + _temp_596

    return outdata[u"Add"]


