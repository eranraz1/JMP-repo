from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v15.0.0 """

def getModelMetadata():
	return {"creator": u"Formula Editor", "modelName": u"", "predicted": u"", "table": u"דוגמה_CLASSIFICATION", "version": u"15.0.0", "timestamp": u"2020-11-22T10:47:15Z"}


def getInputMetadata():
    return {
        u"Assembly Scrap": "float",
        u"BOARD MATERIAL": "str",
        u"BOARD TYPE": "str",
        u"DESIGN LAYERS": "float",
        u"EXISTS IMPEDANCE": "str",
        u"EXISTS LASER DRILL": "str",
        u"EXISTS PASTE (PRINT OR VACUM)": "str",
        u"EXISTS SILVER PRINT": "str",
        u"FAI TYPE": "str",
        u"FINISH THICKNESS": "float",
        u"HATS COUPON TYPE": "str",
        u"Laser (Holes qty)": "float",
        u"Lot Size PANEL": "float",
        u"Mechanical (Holes qty)": "float",
        u"PASTE DRILL TYPE": "str",
        u"PASTE FILL": "str",
        u"SELECTIVE PLATING CS": "str",
        u"SELECTIVE PLATING PS": "str",
        u"SURFACE FINISH CS": "str"
	}


def getOutputMetadata():
    return {
        u"Add": "float"
	}


def score(indata, outdata):
    # Original name was: 'SURFACE FINISH CS_asCode'
    # SURFACE_FINISH_CS_asCode
    # Original name was: 'SELECTIVE PLATING PS_asCode'
    # SELECTIVE_PLATING_PS_asCode
    # Original name was: 'SELECTIVE PLATING CS_asCode'
    # SELECTIVE_PLATING_CS_asCode
    # Original name was: 'PASTE FILL_asCode'
    # PASTE_FILL_asCode
    # Original name was: 'PASTE DRILL TYPE_asCode'
    # PASTE_DRILL_TYPE_asCode
    # Original name was: 'FAI TYPE_asCode'
    # FAI_TYPE_asCode
    # Original name was: 'EXISTS PASTE (PRINT OR VACUM)_asCode'
    # EXISTS_PASTE_PRINT_OR_VACUM__asCode
    # Original name was: 'EXISTS LASER DRILL_asCode'
    # EXISTS_LASER_DRILL_asCode
    # Original name was: 'BOARD TYPE_asCode'
    # BOARD_TYPE_asCode
    # Original name was: 'BOARD MATERIAL_asCode'
    # BOARD_MATERIAL_asCode
    _temp_0 = np.nan
    _temp_1 = np.nan
    _temp_2 = np.nan
    _temp_3 = np.nan
    _temp_4 = np.nan
    _temp_5 = np.nan
    _temp_6 = np.nan
    _temp_7 = np.nan
    _temp_8 = np.nan
    _temp_9 = np.nan
    _temp_10 = np.nan
    _temp_11 = np.nan
    _temp_12 = np.nan
    _temp_13 = np.nan
    _temp_14 = np.nan
    _temp_15 = np.nan
    _temp_16 = np.nan
    _temp_17 = np.nan
    _temp_18 = np.nan
    _temp_19 = np.nan
    _temp_20 = np.nan
    _temp_21 = np.nan
    _temp_22 = np.nan
    _temp_23 = np.nan
    _temp_24 = np.nan
    _temp_25 = np.nan
    _temp_26 = np.nan
    _temp_27 = np.nan
    _temp_28 = np.nan
    _temp_29 = np.nan
    _temp_30 = np.nan
    _temp_31 = np.nan
    _temp_32 = np.nan
    _temp_33 = np.nan
    _temp_34 = np.nan
    _temp_35 = np.nan
    _temp_36 = np.nan
    _temp_37 = np.nan
    _temp_38 = np.nan
    _temp_39 = np.nan
    _temp_40 = np.nan
    _temp_41 = np.nan
    _temp_42 = np.nan
    _temp_43 = np.nan
    _temp_44 = np.nan
    _temp_45 = np.nan
    _temp_46 = np.nan
    _temp_47 = np.nan
    _temp_48 = np.nan
    _temp_49 = np.nan
    _temp_50 = np.nan
    _temp_51 = np.nan
    _temp_52 = np.nan
    _temp_53 = np.nan
    _temp_54 = np.nan
    _temp_55 = np.nan
    _temp_56 = np.nan
    _temp_57 = np.nan
    _temp_58 = np.nan
    _temp_59 = np.nan
    _temp_60 = np.nan
    _temp_61 = np.nan
    _temp_62 = np.nan
    _temp_63 = np.nan
    _temp_64 = np.nan
    _temp_65 = np.nan
    _temp_66 = np.nan
    _temp_67 = np.nan
    _temp_68 = np.nan
    _temp_69 = np.nan
    _temp_70 = np.nan
    _temp_71 = np.nan
    _temp_72 = np.nan
    _temp_73 = np.nan
    _temp_74 = np.nan
    _temp_75 = np.nan
    _temp_76 = np.nan
    _temp_77 = np.nan
    _temp_78 = np.nan
    _temp_79 = np.nan
    _temp_80 = np.nan
    _temp_81 = np.nan
    _temp_82 = np.nan
    _temp_83 = np.nan
    _temp_84 = np.nan
    _temp_85 = np.nan
    _temp_86 = np.nan
    _temp_87 = np.nan
    _temp_88 = np.nan
    _temp_89 = np.nan
    _temp_90 = np.nan
    _temp_91 = np.nan
    _temp_92 = np.nan
    _temp_93 = np.nan
    _temp_94 = np.nan
    _temp_95 = np.nan
    _temp_96 = np.nan
    _temp_97 = np.nan
    _temp_98 = np.nan
    _temp_99 = np.nan
    _temp_100 = np.nan
    _temp_101 = np.nan
    _temp_102 = np.nan
    _temp_103 = np.nan
    _temp_104 = np.nan
    _temp_105 = np.nan
    _temp_106 = np.nan
    _temp_107 = np.nan
    _temp_108 = np.nan
    _temp_109 = np.nan
    _temp_110 = np.nan
    _temp_111 = np.nan
    _temp_112 = np.nan
    _temp_113 = np.nan
    _temp_114 = np.nan
    _temp_115 = np.nan
    _temp_116 = np.nan
    _temp_117 = np.nan
    _temp_118 = np.nan
    _temp_119 = np.nan
    _temp_120 = np.nan
    _temp_121 = np.nan
    _temp_122 = np.nan
    _temp_123 = np.nan
    _temp_124 = np.nan
    _temp_125 = np.nan
    _temp_126 = np.nan
    _temp_127 = np.nan
    _temp_128 = np.nan
    _temp_129 = np.nan

    if (indata[u"SURFACE FINISH CS"] == u"ENTEK"):
         _temp_0 = 0
    elif (indata[u"SURFACE FINISH CS"] == u"FULL_HGLD"):
        _temp_0 = 1
    elif (indata[u"SURFACE FINISH CS"] == u"CHM_SILV"):
        _temp_0 = 2
    elif (indata[u"SURFACE FINISH CS"] == u"CHM_GOLD"):
        _temp_0 = 3
    elif (indata[u"SURFACE FINISH CS"] == u"HAL"):
        _temp_0 = 4
    elif (indata[u"SURFACE FINISH CS"] == u"CHM_TIN"):
        _temp_0 = 5
    elif (indata[u"SURFACE FINISH CS"] == u"NONE"):
        _temp_0 = 6
    elif (indata[u"SURFACE FINISH CS"] == u"ELEC_TIN"):
        _temp_0 = 7
    elif (indata[u"SURFACE FINISH CS"] == u"FULL_SGLD"):
        _temp_0 = 8
    SURFACE_FINISH_CS_asCode = _temp_0

    if (indata[u"SELECTIVE PLATING PS"] == u"SA_HG"):
        _temp_1 = 0
    elif (indata[u"SELECTIVE PLATING PS"] == u"NONE"):
        _temp_1 = 1
    elif (indata[u"SELECTIVE PLATING PS"] == u"SA_NI"):
        _temp_1 = 2
    elif (indata[u"SELECTIVE PLATING PS"] == u"CNTR_HG"):
        _temp_1 = 3
    elif (indata[u"SELECTIVE PLATING PS"] == u"SA_HG_NI"):
        _temp_1 = 4
    SELECTIVE_PLATING_PS_asCode = _temp_1

    if (indata[u"SELECTIVE PLATING CS"] == u"SA_NI"):
        _temp_2 = 0
    elif (indata[u"SELECTIVE PLATING CS"] == u"NONE"):
        _temp_2 = 1
    elif (indata[u"SELECTIVE PLATING CS"] == u"SA_SG_NI"):
        _temp_2 = 2
    elif (indata[u"SELECTIVE PLATING CS"] == u"SA_SG"):
        _temp_2 = 3
    elif (indata[u"SELECTIVE PLATING CS"] == u"CNTR_HG"):
        _temp_2 = 4
    elif (indata[u"SELECTIVE PLATING CS"] == u"SA_HG_NI"):
        _temp_2 = 5
    elif (indata[u"SELECTIVE PLATING CS"] == u"SA_HG"):
        _temp_2 = 6
    SELECTIVE_PLATING_CS_asCode = _temp_2

    if (indata[u"PASTE FILL"] == u"NONE"):
        _temp_3 = 0
    elif (indata[u"PASTE FILL"] == u"VACUUM"):
        _temp_3 = 1
    PASTE_FILL_asCode = _temp_3

    if (indata[u"PASTE DRILL TYPE"] == u"LASER"):
        _temp_4 = 0
    elif (indata[u"PASTE DRILL TYPE"] == u"THROUGH"):
        _temp_4 = 1
    elif (indata[u"PASTE DRILL TYPE"] == u"LASER-THROUGH"):
        _temp_4 = 2
    PASTE_DRILL_TYPE_asCode = _temp_4

    if (indata[u"FAI TYPE"] == u"RC-06"):
        _temp_5 = 0
    elif (indata[u"FAI TYPE"] == u"RC-28"):
        _temp_5 = 1
    elif (indata[u"FAI TYPE"] == u"NONE"):
        _temp_5 = 2
    elif (indata[u"FAI TYPE"] == u"PER AS9102 REPORT"):
        _temp_5 = 3
    elif (indata[u"FAI TYPE"] == u"PER AS9100 MICRO SECTION"):
        _temp_5 = 4
    elif (indata[u"FAI TYPE"] == u"PER AS9100"):
        _temp_5 = 5
    elif (indata[u"FAI TYPE"] == u"PER AS9100 REPORT"):
        _temp_5 = 6
    FAI_TYPE_asCode = _temp_5

    if (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"NO"):
        _temp_6 = 0
    elif (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"YES"):
        _temp_6 = 1
    EXISTS_PASTE_PRINT_OR_VACUM__asCode = _temp_6

    if (indata[u"EXISTS LASER DRILL"] == u"NO"):
        _temp_7 = 0
    elif (indata[u"EXISTS LASER DRILL"] == u"YES"):
        _temp_7 = 1
    EXISTS_LASER_DRILL_asCode = _temp_7

    if (indata[u"BOARD TYPE"] == u"COMMERCIAL"):
        _temp_8 = 0
    elif (indata[u"BOARD TYPE"] == u"GENERAL"):
        _temp_8 = 1
    elif (indata[u"BOARD TYPE"] == u"MILITARY"):
        _temp_8 = 2
    elif (indata[u"BOARD TYPE"] == u"SPACE"):
        _temp_8 = 3
    BOARD_TYPE_asCode = _temp_8

    if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
        _temp_9 = 0
    elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
        _temp_9 = 1
    BOARD_MATERIAL_asCode = _temp_9

    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_10 = -3.3268720802544
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_10 = 3.3268720802544
    else:
        _temp_10 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_11 = -0.115283636081283
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_11 = 0.115283636081283
    else:
        _temp_11 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_12 = 0.814688644260243
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_12 = -0.814688644260243
    else:
        _temp_12 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_13 = 7.18682622460593
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_13 = -7.18682622460593
    else:
        _temp_13 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_14 = 8.7677530322168
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_14 = -8.7677530322168
    else:
        _temp_14 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_15 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_15 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_15 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_15 = -1
    else:
        _temp_15 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_16 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_16 = -1
    else:
        _temp_16 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_17 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_17 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_17 = -1
    else:
        _temp_17 = 0
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_18 = -4.04549039705834
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_18 = 4.04549039705834
    else:
        _temp_18 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_19 = 1.27829757841456
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_19 = -1.27829757841456
    else:
        _temp_19 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_20 = 30.6667494085558
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_20 = -30.6667494085558
    else:
        _temp_20 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_21 = 131.390350199473
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_21 = -131.390350199473
    else:
        _temp_21 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_22 = -20.2807486173801
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_22 = 20.2807486173801
    else:
        _temp_22 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_23 = -12.9700853445201
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_23 = 12.9700853445201
    else:
        _temp_23 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_24 = -0.0157042029441024
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_24 = 0.0157042029441024
    else:
        _temp_24 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_25 = 7.91047787967608
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_25 = -7.91047787967608
    else:
        _temp_25 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_26 = 569.65989481625
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_26 = -569.65989481625
    else:
        _temp_26 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_28 = 3.21495088736041
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_28 = -3.21495088736041
        else:
            _temp_28 = np.nan
        _temp_27 = _temp_28
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_29 = -3.21495088736041
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_29 = 3.21495088736041
        else:
            _temp_29 = np.nan
        _temp_27 = _temp_29
    else:
        _temp_27 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_30 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_30 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_30 = -1
    else:
        _temp_30 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_31 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_31 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_31 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_31 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_31 = -1
    else:
        _temp_31 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_32 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_32 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_32 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_32 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_32 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_32 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 6)):
        _temp_32 = -1
    else:
        _temp_32 = np.nan
    if (indata[u"HATS COUPON TYPE"] == u"NONE"):
        _temp_33 = 1
    elif (indata[u"HATS COUPON TYPE"] == u"INTERNAL"):
        _temp_33 = -1
    elif (indata[u"HATS COUPON TYPE"] == u"EXTERNAL"):
        _temp_33 = -1
    else:
        _temp_33 = np.nan
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_34 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_34 = -1
    else:
        _temp_34 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_35 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_35 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_35 = -1
    else:
        _temp_35 = 0
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_36 = -643.273905019471
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_36 = 643.273905019471
    else:
        _temp_36 = np.nan
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_37 = -0.232117633683896
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_37 = 0.232117633683896
    else:
        _temp_37 = np.nan
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_38 = 19.0581446740275
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_38 = -19.0581446740275
    else:
        _temp_38 = np.nan
    if (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 0)):
        _temp_39 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 1)):
        _temp_39 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 2)):
        _temp_39 = -1
    else:
        _temp_39 = 0
    if (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 3)):
        _temp_40 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 0)):
        _temp_40 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 1)):
        _temp_40 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 2)):
        _temp_40 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 4)):
        _temp_40 = -1
    else:
        _temp_40 = 0
    if (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 3)):
        _temp_41 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 0)):
        _temp_41 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 1)):
        _temp_41 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 2)):
        _temp_41 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 4)):
        _temp_41 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 5)):
        _temp_41 = -1
    elif (jmp.numeq(SELECTIVE_PLATING_CS_asCode, 6)):
        _temp_41 = -1
    else:
        _temp_41 = np.nan
    if (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 0)):
        _temp_42 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 1)):
        _temp_42 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 2)):
        _temp_42 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 3)):
        _temp_42 = -1
    else:
        _temp_42 = 0
    if (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 0)):
        _temp_43 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 1)):
        _temp_43 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 2)):
        _temp_43 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 3)):
        _temp_43 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 4)):
        _temp_43 = -1
    else:
        _temp_43 = np.nan
    if (jmp.numeq(SURFACE_FINISH_CS_asCode, 0)):
        _temp_44 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 1)):
        _temp_44 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 2)):
        _temp_44 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 3)):
        _temp_44 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 4)):
        _temp_44 = -1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 5)):
        _temp_44 = -1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 6)):
        _temp_44 = -1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 7)):
        _temp_44 = -1
    else:
        _temp_44 = 0
    if (jmp.numeq(SURFACE_FINISH_CS_asCode, 0)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 1)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 2)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 3)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 4)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 5)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 6)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 7)):
        _temp_45 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 8)):
        _temp_45 = -1
    else:
        _temp_45 = np.nan
    if (jmp.numeq(SURFACE_FINISH_CS_asCode, 4)):
        _temp_46 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 5)):
        _temp_46 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 6)):
        _temp_46 = -1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 7)):
        _temp_46 = -1
    else:
        _temp_46 = 0
    if (jmp.numeq(SURFACE_FINISH_CS_asCode, 6)):
        _temp_47 = 1
    elif (jmp.numeq(SURFACE_FINISH_CS_asCode, 7)):
        _temp_47 = -1
    else:
        _temp_47 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_48 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_48 = -1
    else:
        _temp_48 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_49 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_49 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_49 = -1
    else:
        _temp_49 = 0
    if (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 0)):
        _temp_50 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 1)):
        _temp_50 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 2)):
        _temp_50 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 3)):
        _temp_50 = -1
    else:
        _temp_50 = 0
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_51 = -3.3268720802544
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_51 = 3.3268720802544
    else:
        _temp_51 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_52 = 30.6667494085558
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_52 = -30.6667494085558
    else:
        _temp_52 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_53 = -12.9700853445201
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_53 = 12.9700853445201
    else:
        _temp_53 = np.nan
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_54 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_54 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_54 = -1
    else:
        _temp_54 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_55 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_55 = -1
    else:
        _temp_55 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_56 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_56 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_56 = -1
    else:
        _temp_56 = 0
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_57 = 0.814688644260243
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_57 = -0.814688644260243
    else:
        _temp_57 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_58 = 8.7677530322168
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_58 = -8.7677530322168
    else:
        _temp_58 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_59 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_59 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_59 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_59 = -1
    else:
        _temp_59 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_60 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_60 = -1
    else:
        _temp_60 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_61 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_61 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_61 = -1
    else:
        _temp_61 = 0
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_62 = -4.04549039705834
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_62 = 4.04549039705834
    else:
        _temp_62 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_63 = -0.0157042029441024
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_63 = 0.0157042029441024
    else:
        _temp_63 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_64 = 7.91047787967608
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_64 = -7.91047787967608
    else:
        _temp_64 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_66 = 3.21495088736041
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_66 = -3.21495088736041
        else:
            _temp_66 = np.nan
        _temp_65 = _temp_66
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_67 = -3.21495088736041
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_67 = 3.21495088736041
        else:
            _temp_67 = np.nan
        _temp_65 = _temp_67
    else:
        _temp_65 = np.nan
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_68 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_68 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_68 = -1
    else:
        _temp_68 = 0
    if (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 0)):
        _temp_69 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 1)):
        _temp_69 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 2)):
        _temp_69 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 3)):
        _temp_69 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 4)):
        _temp_69 = -1
    else:
        _temp_69 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_70 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_70 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_70 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_70 = -1
    else:
        _temp_70 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_71 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_71 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_71 = -1
    else:
        _temp_71 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_72 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_72 = -1
    else:
        _temp_72 = 0
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_73 = -0.232117633683896
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_73 = 0.232117633683896
    else:
        _temp_73 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_74 = -0.115283636081283
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_74 = 0.115283636081283
    else:
        _temp_74 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_75 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_75 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_75 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_75 = -1
    else:
        _temp_75 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_76 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_76 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_76 = -1
    else:
        _temp_76 = 0
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_77 = 1.27829757841456
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_77 = -1.27829757841456
    else:
        _temp_77 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_78 = -20.2807486173801
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_78 = 20.2807486173801
    else:
        _temp_78 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_79 = -0.0157042029441024
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_79 = 0.0157042029441024
    else:
        _temp_79 = np.nan
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_80 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_80 = -1
    else:
        _temp_80 = 0
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_81 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_81 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_81 = -1
    else:
        _temp_81 = 0
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_82 = 19.0581446740275
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_82 = -19.0581446740275
    else:
        _temp_82 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_83 = 7.18682622460593
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_83 = -7.18682622460593
    else:
        _temp_83 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_84 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_84 = -1
    else:
        _temp_84 = 0
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_85 = 8.7677530322168
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_85 = -8.7677530322168
    else:
        _temp_85 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_86 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_86 = -1
    else:
        _temp_86 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_87 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_87 = -1
    else:
        _temp_87 = 0
    if (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 0)):
        _temp_88 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 1)):
        _temp_88 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 2)):
        _temp_88 = 1
    elif (jmp.numeq(SELECTIVE_PLATING_PS_asCode, 3)):
        _temp_88 = -1
    else:
        _temp_88 = 0
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_89 = 131.390350199473
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_89 = -131.390350199473
    else:
        _temp_89 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_90 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_90 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_90 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_90 = -1
    else:
        _temp_90 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_91 = 569.65989481625
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_91 = -569.65989481625
    else:
        _temp_91 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_92 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_92 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_92 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_92 = -1
    else:
        _temp_92 = np.nan
    if (jmp.numeq(PASTE_DRILL_TYPE_asCode, 0)):
        _temp_93 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 1)):
        _temp_93 = 1
    elif (jmp.numeq(PASTE_DRILL_TYPE_asCode, 2)):
        _temp_93 = -1
    else:
        _temp_93 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_94 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_94 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_94 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_94 = -1
    else:
        _temp_94 = np.nan
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_95 = -643.273905019471
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_95 = 643.273905019471
    else:
        _temp_95 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_96 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_96 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_96 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_96 = -1
    else:
        _temp_96 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_97 = -0.0157042029441024
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_97 = 0.0157042029441024
    else:
        _temp_97 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_98 = 8.7677530322168
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_98 = -8.7677530322168
    else:
        _temp_98 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_99 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_99 = -1
    else:
        _temp_99 = 0
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_100 = -747.514089617156
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_100 = 747.514089617156
    else:
        _temp_100 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_101 = -2.1199484416616 + 0.000187611354922742 * indata[u"Mechanical (Holes qty)"]
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_101 = 2.1199484416616 + -0.000187611354922742 * indata[u"Mechanical (Holes qty)"]
    else:
        _temp_101 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_102 = 22.447619602037 + -211.741976619908 * indata[u"Assembly Scrap"]
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_102 = -22.447619602037 + 211.741976619908 * indata[u"Assembly Scrap"]
    else:
        _temp_102 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        _temp_103 = 74.1409450263683 + -38.3884807586103 * indata[u"FINISH THICKNESS"]
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        _temp_103 = -74.1409450263683 + 38.3884807586103 * indata[u"FINISH THICKNESS"]
    else:
        _temp_103 = np.nan
    if (jmp.numeq(BOARD_MATERIAL_asCode, 0)):
        if (indata[u"PASTE DRILL TYPE"] == u"LASER"):
            _temp_105 = 1
        elif (indata[u"PASTE DRILL TYPE"] == u"THROUGH"):
            _temp_105 = -1
        else:
            _temp_105 = 0
        _temp_104 = 157.210933057999 + 884.828639678408 * _temp_105
    elif (jmp.numeq(BOARD_MATERIAL_asCode, 1)):
        if (indata[u"PASTE DRILL TYPE"] == u"LASER"):
            _temp_106 = 1
        elif (indata[u"PASTE DRILL TYPE"] == u"THROUGH"):
            _temp_106 = -1
        else:
            _temp_106 = 0
        _temp_104 = -157.210933057999 + -884.828639678408 * _temp_106
    else:
        _temp_104 = np.nan
    if (indata[u"EXISTS IMPEDANCE"] == u"NO"):
        _temp_107 = -6.93077190003806
    elif (indata[u"EXISTS IMPEDANCE"] == u"YES"):
        _temp_107 = 6.93077190003806
    else:
        _temp_107 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_108 = -317.644303307884
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_108 = 317.644303307884
    else:
        _temp_108 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_109 = -80.0920090163775 + 0.00708798857309458 * indata[u"Mechanical (Holes qty)"]
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_109 = 80.0920090163775 + -0.00708798857309458 * indata[u"Mechanical (Holes qty)"]
    else:
        _temp_109 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_110 = 697.057638923441 + -360.920456974725 * indata[u"FINISH THICKNESS"]
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_110 = -697.057638923441 + 360.920456974725 * indata[u"FINISH THICKNESS"]
    else:
        _temp_110 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        _temp_111 = 1361.25577401327 + -12840.3364537003 * indata[u"Assembly Scrap"]
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        _temp_111 = -1361.25577401327 + 12840.3364537003 * indata[u"Assembly Scrap"]
    else:
        _temp_111 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_113 = 933.275381093528
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_113 = -933.275381093528
        else:
            _temp_113 = np.nan
        _temp_112 = _temp_113
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_114 = -933.275381093528
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_114 = 933.275381093528
        else:
            _temp_114 = np.nan
        _temp_112 = _temp_114
    else:
        _temp_112 = np.nan
    if (jmp.numeq(EXISTS_LASER_DRILL_asCode, 0)):
        if (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"NO"):
            _temp_116 = -312.82509883085
        elif (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"YES"):
            _temp_116 = 312.82509883085
        else:
            _temp_116 = np.nan
        _temp_115 = _temp_116
    elif (jmp.numeq(EXISTS_LASER_DRILL_asCode, 1)):
        if (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"NO"):
            _temp_117 = 312.82509883085
        elif (indata[u"EXISTS PASTE (PRINT OR VACUM)"] == u"YES"):
            _temp_117 = -312.82509883085
        else:
            _temp_117 = np.nan
        _temp_115 = _temp_117
    else:
        _temp_115 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_118 = -3012.25992804105
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_118 = 3012.25992804105
    else:
        _temp_118 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_119 = -2532.52647074058 + 0.224123716037616 * indata[u"Mechanical (Holes qty)"]
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_119 = 2532.52647074058 + -0.224123716037616 * indata[u"Mechanical (Holes qty)"]
    else:
        _temp_119 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_120 = -983.525877505466 + 9277.31835499116 * indata[u"Assembly Scrap"]
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_120 = 983.525877505466 + -9277.31835499116 * indata[u"Assembly Scrap"]
    else:
        _temp_120 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        _temp_121 = -355.600056465574 + 184.1215528145 * indata[u"FINISH THICKNESS"]
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        _temp_121 = 355.600056465574 + -184.1215528145 * indata[u"FINISH THICKNESS"]
    else:
        _temp_121 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_123 = -445.835944992987
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_123 = 445.835944992987
        else:
            _temp_123 = np.nan
        _temp_122 = _temp_123
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        if (indata[u"BOARD MATERIAL"] == u"GLASS EPOXY"):
            _temp_124 = 445.835944992987
        elif (indata[u"BOARD MATERIAL"] == u"POLYAMID"):
            _temp_124 = -445.835944992987
        else:
            _temp_124 = np.nan
        _temp_122 = _temp_124
    else:
        _temp_122 = np.nan
    if (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 0)):
        if (indata[u"PASTE FILL"] == u"NONE"):
            _temp_126 = -1588.30455871743
        elif (indata[u"PASTE FILL"] == u"VACUUM"):
            _temp_126 = 1588.30455871743
        else:
            _temp_126 = np.nan
        _temp_125 = _temp_126
    elif (jmp.numeq(EXISTS_PASTE_PRINT_OR_VACUM__asCode, 1)):
        if (indata[u"PASTE FILL"] == u"NONE"):
            _temp_127 = 1588.30455871743
        elif (indata[u"PASTE FILL"] == u"VACUUM"):
            _temp_127 = -1588.30455871743
        else:
            _temp_127 = np.nan
        _temp_125 = _temp_127
    else:
        _temp_125 = np.nan
    if (indata[u"EXISTS SILVER PRINT"] == u"NO"):
        _temp_128 = 591.36489182836
    elif (indata[u"EXISTS SILVER PRINT"] == u"YES"):
        _temp_128 = -591.36489182836
    else:
        _temp_128 = np.nan
    if (jmp.numeq(PASTE_FILL_asCode, 0)):
        _temp_129 = 3001.23716608957
    elif (jmp.numeq(PASTE_FILL_asCode, 1)):
        _temp_129 = -3001.23716608957
    else:
        _temp_129 = np.nan
    outdata[u"Add"] = 2707.43439902338 + 3698.13724445385 * indata[u"Assembly Scrap"] + -7.00687982525583 * indata[u"DESIGN LAYERS"] + 161.345493506789 * indata[u"FINISH THICKNESS"] + 0.00185145761229052 * indata[u"Laser (Holes qty)"] + -16.0280987501073 * indata[u"Lot Size PANEL"] + 0.00444059390315916 * indata[u"Mechanical (Holes qty)"] + -1.86841846399689 * indata[u"X*Y PANEL"] + -9.51782583284629 * _temp_10 + -380.230274693162 * _temp_11 + -5.62419637638808 * _temp_12 + 0.803623611922852 * _temp_13 + -4.51973700615641 * _temp_14 + -920.70768271005 * _temp_15 + 8.92509215852873 * _temp_16 + -1749.27991714242 * _temp_17 + -5.62419637638808 * _temp_18 + -380.230274693162 * _temp_19 + -9.51782583284629 * _temp_20 + 0.729982466393922 * _temp_21 + -380.230274693162 * _temp_22 + -9.51782583284629 * _temp_23 + 2138.48973312233 * _temp_24 + -5.62419637638808 * _temp_25 + 0.729982466393922 * _temp_26 + -5.62419637638808 * _temp_27 + -15.7787800181954 * _temp_30 + -3.50690442882992 * _temp_31 + -18.3136387767403 * _temp_32 + -29.946720406678 * _temp_33 + 1003.45178386535 * _temp_34 + -1268.38743789077 * _temp_35 + 0.729982466393922 * _temp_36 + -11299.6808883694 * _temp_37 + -380.230274693162 * _temp_38 + -123.243971577809 * _temp_39 + 2.0426069951459 * _temp_40 + 7.71285859596856 * _temp_41 + -43.6109657705753 * _temp_42 + 54.7190310788432 * _temp_43 + -70.2577873357415 * _temp_44 + -224.613691198635 * _temp_45 + -159.796102940656 * _temp_46 + -251.134483319997 * _temp_47 + 87.942598195301 * indata[u"Assembly Scrap"] * indata[u"FINISH THICKNESS"] + -13.2799839948611 * indata[u"Assembly Scrap"] * indata[u"Lot Size PANEL"] + -12435.7478733299 * indata[u"Assembly Scrap"] * _temp_48 + 6502.06383965273 * indata[u"Assembly Scrap"] * _temp_49 + 192.364133936317 * indata[u"Assembly Scrap"] * _temp_50 + -0.409440328633918 * indata[u"DESIGN LAYERS"] * indata[u"Lot Size PANEL"] + -0.000767366188043099 * indata[u"DESIGN LAYERS"] * indata[u"X*Y PANEL"] + indata[u"DESIGN LAYERS"] * _temp_51 + indata[u"DESIGN LAYERS"] * _temp_52 + indata[u"DESIGN LAYERS"] * _temp_53 + -22.3787958292761 * indata[u"DESIGN LAYERS"] * _temp_54 + 3.84911418190584 * indata[u"FINISH THICKNESS"] * indata[u"Lot Size PANEL"] + 0.192632082867189 * indata[u"FINISH THICKNESS"] * indata[u"X*Y PANEL"] + -255.793582119758 * indata[u"FINISH THICKNESS"] * _temp_55 + 115.156798024768 * indata[u"FINISH THICKNESS"] * _temp_56 + 0.0179132174327658 * indata[u"Lot Size PANEL"] * indata[u"X*Y PANEL"] + indata[u"Lot Size PANEL"] * _temp_57 + 0.803623611922852 * indata[u"Lot Size PANEL"] * _temp_58 + 42.055226517083 * indata[u"Lot Size PANEL"] * _temp_59 + -8.69461994095591 * indata[u"Lot Size PANEL"] * _temp_60 + 82.6902059770958 * indata[u"Lot Size PANEL"] * _temp_61 + indata[u"Lot Size PANEL"] * _temp_62 + -380.230274693162 * indata[u"Lot Size PANEL"] * _temp_63 + indata[u"Lot Size PANEL"] * _temp_64 + indata[u"Lot Size PANEL"] * _temp_65 + 14.4374603113931 * indata[u"Lot Size PANEL"] * _temp_68 + -51.4863651434093 * indata[u"Lot Size PANEL"] * _temp_69 + -0.00189445955291215 * indata[u"Mechanical (Holes qty)"] * _temp_70 + -0.00431676130616844 * indata[u"Mechanical (Holes qty)"] * _temp_71 + 0.0150282996891931 * indata[u"Mechanical (Holes qty)"] * _temp_72 + indata[u"Mechanical (Holes qty)"] * _temp_73 + indata[u"X*Y PANEL"] * _temp_74 + 1.67884403470111 * indata[u"X*Y PANEL"] * _temp_75 + 3.44250464283561 * indata[u"X*Y PANEL"] * _temp_76 + indata[u"X*Y PANEL"] * _temp_77 + indata[u"X*Y PANEL"] * _temp_78 + -5.62419637638808 * indata[u"X*Y PANEL"] * _temp_79 + 1.68574598595711 * indata[u"X*Y PANEL"] * _temp_80 + -0.484664671858102 * indata[u"X*Y PANEL"] * _temp_81 + indata[u"X*Y PANEL"] * _temp_82 + _temp_83 * _temp_84 + -5.62419637638808 * _temp_85 * _temp_86 + 27.7847400697286 * _temp_87 * _temp_88 + _temp_89 * _temp_90 + _temp_91 * _temp_92 + -162.924899118511 * _temp_93 * _temp_94 + _temp_95 * _temp_96 + 0.00181079200840603 * indata[u"DESIGN LAYERS"] * indata[u"Lot Size PANEL"] * indata[u"X*Y PANEL"] + -0.012198569622329 * indata[u"FINISH THICKNESS"] * indata[u"Lot Size PANEL"] * indata[u"X*Y PANEL"] + indata[u"Lot Size PANEL"] * indata[u"X*Y PANEL"] * _temp_97 + indata[u"Lot Size PANEL"] * _temp_98 * _temp_99 + _temp_100 + _temp_101 + _temp_102 + _temp_103 + _temp_104 + _temp_107 + _temp_108 + _temp_109 + _temp_110 + _temp_111 + _temp_112 + _temp_115 + _temp_118 + _temp_119 + _temp_120 + _temp_121 + _temp_122 + _temp_125 + _temp_128 + _temp_129

    return outdata[u"Add"]


