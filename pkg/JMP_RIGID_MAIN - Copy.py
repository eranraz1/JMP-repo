from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v15.0.0 """

def getModelMetadata():
	return {"creator": u"Formula Editor", "modelName": u"", "predicted": u"", "table": u"FINAL RIGID 19.1.2021 REV02", "version": u"15.0.0", "timestamp": u"2021-02-24T12:56:23Z"}


def getInputMetadata():
    return {
        u"Assembly_scrap": "float",
        u"CAM_PNL_SIZE_X": "float",
        u"CAM_PNL_SIZE_Y": "float",
        u"Costing Lot Size PANEL": "float",
        u"DL_PNL_HOLE_QTY": "float",
        u"DR_PNL_HOLE_QTY": "float",
        u"EXIST_LASER": "str",
        u"FAI_TYPE": "str",
        u"FAMILY_GROUP": "str",
        u"FINISH_CS": "str",
        u"FINISH_THK": "float",
        u"HATS_COUPON_TYPE": "str",
        u"JOB_SUB_NUM": "float",
        u"NEED_MICROWAVE": "str",
        u"NUM_DESIGN_LAYERS": "float",
        u"NUM_PCBS_PNL": "float",
        u"PASTE_TYPE": "str",
        u"SAP_FAMILY_GROUP": "str",
        u"SEL_PLT_CS": "str",
        u"SEL_PLT_PS": "str",
        u"WRAP_REQUIRMENT": "str"
	}


def getOutputMetadata():
    return {
        u"Add": "float"
	}


def score(indata, outdata):
    # WRAP_REQUIRMENT_asCode
    # SEL_PLT_PS_asCode
    # SEL_PLT_CS_asCode
    # SAP_FAMILY_GROUP_asCode
    # PASTE_TYPE_asCode
    # NEED_MICROWAVE_asCode
    # HATS_COUPON_TYPE_asCode
    # FINISH_CS_asCode
    # FAMILY_GROUP_asCode
    # FAI_TYPE_asCode
    # EXIST_LASER_asCode
    _temp_0 = np.nan
    _temp_1 = np.nan
    _temp_2 = np.nan
    _temp_3 = np.nan
    _temp_4 = np.nan
    _temp_5 = np.nan
    _temp_6 = np.nan
    _temp_7 = np.nan
    _temp_8 = np.nan
    _temp_9 = np.nan
    _temp_10 = np.nan
    _temp_11 = np.nan
    _temp_12 = np.nan
    _temp_13 = np.nan
    _temp_14 = np.nan
    _temp_15 = np.nan
    _temp_16 = np.nan
    _temp_17 = np.nan
    _temp_18 = np.nan
    _temp_19 = np.nan
    _temp_20 = np.nan
    _temp_21 = np.nan
    _temp_22 = np.nan
    _temp_23 = np.nan
    _temp_24 = np.nan
    _temp_25 = np.nan
    _temp_26 = np.nan
    _temp_27 = np.nan
    _temp_28 = np.nan
    _temp_29 = np.nan
    _temp_30 = np.nan
    _temp_31 = np.nan
    _temp_32 = np.nan
    _temp_33 = np.nan
    _temp_34 = np.nan
    _temp_35 = np.nan
    _temp_36 = np.nan
    _temp_37 = np.nan
    _temp_38 = np.nan
    _temp_39 = np.nan
    _temp_40 = np.nan
    _temp_41 = np.nan
    _temp_42 = np.nan
    _temp_43 = np.nan
    _temp_44 = np.nan
    _temp_45 = np.nan
    _temp_46 = np.nan
    _temp_47 = np.nan
    _temp_48 = np.nan
    _temp_49 = np.nan
    _temp_50 = np.nan
    _temp_51 = np.nan
    _temp_52 = np.nan
    _temp_53 = np.nan
    _temp_54 = np.nan
    _temp_55 = np.nan
    _temp_56 = np.nan
    _temp_57 = np.nan
    _temp_58 = np.nan
    _temp_59 = np.nan
    _temp_60 = np.nan
    _temp_61 = np.nan
    _temp_62 = np.nan
    _temp_63 = np.nan
    _temp_64 = np.nan
    _temp_65 = np.nan
    _temp_66 = np.nan
    _temp_67 = np.nan
    _temp_68 = np.nan
    _temp_69 = np.nan
    _temp_70 = np.nan
    _temp_71 = np.nan
    _temp_72 = np.nan
    _temp_73 = np.nan
    _temp_74 = np.nan
    _temp_75 = np.nan
    _temp_76 = np.nan
    _temp_77 = np.nan
    _temp_78 = np.nan
    _temp_79 = np.nan
    _temp_80 = np.nan
    _temp_81 = np.nan
    _temp_82 = np.nan
    _temp_83 = np.nan
    _temp_84 = np.nan
    _temp_85 = np.nan
    _temp_86 = np.nan
    _temp_87 = np.nan
    _temp_88 = np.nan
    _temp_89 = np.nan
    _temp_90 = np.nan
    _temp_91 = np.nan
    _temp_92 = np.nan
    _temp_93 = np.nan
    _temp_94 = np.nan
    _temp_95 = np.nan
    _temp_96 = np.nan
    _temp_97 = np.nan
    _temp_98 = np.nan
    _temp_99 = np.nan
    _temp_100 = np.nan
    _temp_101 = np.nan
    _temp_102 = np.nan
    _temp_103 = np.nan
    _temp_104 = np.nan
    _temp_105 = np.nan
    _temp_106 = np.nan
    _temp_107 = np.nan
    _temp_108 = np.nan
    _temp_109 = np.nan
    _temp_110 = np.nan
    _temp_111 = np.nan
    _temp_112 = np.nan
    _temp_113 = np.nan
    _temp_114 = np.nan
    _temp_115 = np.nan
    _temp_116 = np.nan
    _temp_117 = np.nan
    _temp_118 = np.nan
    _temp_119 = np.nan
    _temp_120 = np.nan
    _temp_121 = np.nan
    _temp_122 = np.nan
    _temp_123 = np.nan
    _temp_124 = np.nan
    _temp_125 = np.nan
    _temp_126 = np.nan
    _temp_127 = np.nan
    _temp_128 = np.nan
    _temp_129 = np.nan
    _temp_130 = np.nan
    _temp_131 = np.nan
    _temp_132 = np.nan
    _temp_133 = np.nan
    _temp_134 = np.nan
    _temp_135 = np.nan
    _temp_136 = np.nan
    _temp_137 = np.nan
    _temp_138 = np.nan
    _temp_139 = np.nan
    _temp_140 = np.nan
    _temp_141 = np.nan
    _temp_142 = np.nan
    _temp_143 = np.nan
    _temp_144 = np.nan
    _temp_145 = np.nan
    _temp_146 = np.nan
    _temp_147 = np.nan
    _temp_148 = np.nan
    _temp_149 = np.nan
    _temp_150 = np.nan
    _temp_151 = np.nan
    _temp_152 = np.nan
    _temp_153 = np.nan
    _temp_154 = np.nan
    _temp_155 = np.nan
    _temp_156 = np.nan
    _temp_157 = np.nan
    _temp_158 = np.nan
    _temp_159 = np.nan
    _temp_160 = np.nan
    _temp_161 = np.nan
    _temp_162 = np.nan
    _temp_163 = np.nan
    _temp_164 = np.nan
    _temp_165 = np.nan
    _temp_166 = np.nan
    _temp_167 = np.nan
    _temp_168 = np.nan
    _temp_169 = np.nan
    _temp_170 = np.nan
    _temp_171 = np.nan
    _temp_172 = np.nan
    _temp_173 = np.nan
    _temp_174 = np.nan
    _temp_175 = np.nan
    _temp_176 = np.nan
    _temp_177 = np.nan
    _temp_178 = np.nan
    _temp_179 = np.nan
    _temp_180 = np.nan
    _temp_181 = np.nan
    _temp_182 = np.nan
    _temp_183 = np.nan
    _temp_184 = np.nan
    _temp_185 = np.nan
    _temp_186 = np.nan
    _temp_187 = np.nan
    _temp_188 = np.nan
    _temp_189 = np.nan
    _temp_190 = np.nan
    _temp_191 = np.nan
    _temp_192 = np.nan
    _temp_193 = np.nan
    _temp_194 = np.nan
    _temp_195 = np.nan
    _temp_196 = np.nan
    _temp_197 = np.nan
    _temp_198 = np.nan
    _temp_199 = np.nan
    _temp_200 = np.nan
    _temp_201 = np.nan
    _temp_202 = np.nan
    _temp_203 = np.nan
    _temp_204 = np.nan
    _temp_205 = np.nan
    _temp_206 = np.nan
    _temp_207 = np.nan
    _temp_208 = np.nan
    _temp_209 = np.nan
    _temp_210 = np.nan
    _temp_211 = np.nan
    _temp_212 = np.nan
    _temp_213 = np.nan
    _temp_214 = np.nan
    _temp_215 = np.nan
    _temp_216 = np.nan
    _temp_217 = np.nan
    _temp_218 = np.nan
    _temp_219 = np.nan
    _temp_220 = np.nan
    _temp_221 = np.nan
    _temp_222 = np.nan
    _temp_223 = np.nan
    _temp_224 = np.nan
    _temp_225 = np.nan
    _temp_226 = np.nan
    _temp_227 = np.nan
    _temp_228 = np.nan
    _temp_229 = np.nan
    _temp_230 = np.nan
    _temp_231 = np.nan
    _temp_232 = np.nan
    _temp_233 = np.nan
    _temp_234 = np.nan
    _temp_235 = np.nan
    _temp_236 = np.nan
    _temp_237 = np.nan
    _temp_238 = np.nan
    _temp_239 = np.nan
    _temp_240 = np.nan
    _temp_241 = np.nan
    _temp_242 = np.nan
    _temp_243 = np.nan
    _temp_244 = np.nan
    _temp_245 = np.nan
    _temp_246 = np.nan
    _temp_247 = np.nan
    _temp_248 = np.nan
    _temp_249 = np.nan
    _temp_250 = np.nan
    _temp_251 = np.nan
    _temp_252 = np.nan
    _temp_253 = np.nan
    _temp_254 = np.nan
    _temp_255 = np.nan
    _temp_256 = np.nan
    _temp_257 = np.nan
    _temp_258 = np.nan
    _temp_259 = np.nan
    _temp_260 = np.nan
    _temp_261 = np.nan
    _temp_262 = np.nan
    _temp_263 = np.nan
    _temp_264 = np.nan
    _temp_265 = np.nan
    _temp_266 = np.nan
    _temp_267 = np.nan
    _temp_268 = np.nan
    _temp_269 = np.nan
    _temp_270 = np.nan
    _temp_271 = np.nan
    _temp_272 = np.nan
    _temp_273 = np.nan
    _temp_274 = np.nan
    _temp_275 = np.nan
    _temp_276 = np.nan
    _temp_277 = np.nan
    _temp_278 = np.nan
    _temp_279 = np.nan
    _temp_280 = np.nan
    _temp_281 = np.nan
    _temp_282 = np.nan
    _temp_283 = np.nan
    _temp_284 = np.nan
    _temp_285 = np.nan
    _temp_286 = np.nan
    _temp_287 = np.nan
    _temp_288 = np.nan
    _temp_289 = np.nan
    _temp_290 = np.nan
    _temp_291 = np.nan
    _temp_292 = np.nan
    _temp_293 = np.nan
    _temp_294 = np.nan
    _temp_295 = np.nan
    _temp_296 = np.nan
    _temp_297 = np.nan
    _temp_298 = np.nan
    _temp_299 = np.nan
    _temp_300 = np.nan
    _temp_301 = np.nan
    _temp_302 = np.nan
    _temp_303 = np.nan
    _temp_304 = np.nan
    _temp_305 = np.nan
    _temp_306 = np.nan
    _temp_307 = np.nan
    _temp_308 = np.nan
    _temp_309 = np.nan
    _temp_310 = np.nan
    _temp_311 = np.nan
    _temp_312 = np.nan
    _temp_313 = np.nan
    _temp_314 = np.nan
    _temp_315 = np.nan
    _temp_316 = np.nan
    _temp_317 = np.nan
    _temp_318 = np.nan
    _temp_319 = np.nan
    _temp_320 = np.nan
    _temp_321 = np.nan
    _temp_322 = np.nan
    _temp_323 = np.nan
    _temp_324 = np.nan
    _temp_325 = np.nan
    _temp_326 = np.nan
    _temp_327 = np.nan
    _temp_328 = np.nan
    _temp_329 = np.nan
    _temp_330 = np.nan
    _temp_331 = np.nan
    _temp_332 = np.nan
    _temp_333 = np.nan
    _temp_334 = np.nan
    _temp_335 = np.nan
    _temp_336 = np.nan
    _temp_337 = np.nan
    _temp_338 = np.nan
    _temp_339 = np.nan
    _temp_340 = np.nan
    _temp_341 = np.nan
    _temp_342 = np.nan
    _temp_343 = np.nan
    _temp_344 = np.nan
    _temp_345 = np.nan
    _temp_346 = np.nan
    _temp_347 = np.nan
    _temp_348 = np.nan
    _temp_349 = np.nan
    _temp_350 = np.nan
    _temp_351 = np.nan
    _temp_352 = np.nan
    _temp_353 = np.nan
    _temp_354 = np.nan
    _temp_355 = np.nan
    _temp_356 = np.nan
    _temp_357 = np.nan
    _temp_358 = np.nan
    _temp_359 = np.nan
    _temp_360 = np.nan
    _temp_361 = np.nan
    _temp_362 = np.nan

    if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
        _temp_0 = 0
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
        _temp_0 = 1
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
        _temp_0 = 2
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
        _temp_0 = 3
    elif (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
        _temp_0 = 4
    WRAP_REQUIRMENT_asCode = _temp_0

    if (indata[u"SEL_PLT_PS"] == u"NONE"):
        _temp_1 = 0
    elif (indata[u"SEL_PLT_PS"] == u"CNTR_HG"):
        _temp_1 = 1
    elif (indata[u"SEL_PLT_PS"] == u"SA_HG_NI"):
        _temp_1 = 2
    SEL_PLT_PS_asCode = _temp_1

    if (indata[u"SEL_PLT_CS"] == u"CNTR_HG"):
        _temp_2 = 0
    elif (indata[u"SEL_PLT_CS"] == u"SA_HG_NI"):
        _temp_2 = 1
    elif (indata[u"SEL_PLT_CS"] == u"NONE"):
        _temp_2 = 2
    elif (indata[u"SEL_PLT_CS"] == u"SA_HG"):
        _temp_2 = 3
    SEL_PLT_CS_asCode = _temp_2

    if (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
        _temp_3 = 0
    elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
        _temp_3 = 1
    elif (indata[u"SAP_FAMILY_GROUP"] == u"GLASS EPOXY"):
        _temp_3 = 2
    SAP_FAMILY_GROUP_asCode = _temp_3

    if (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
        _temp_4 = 0
    elif (indata[u"PASTE_TYPE"] == u"LASER"):
        _temp_4 = 1
    elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
        _temp_4 = 2
    elif (indata[u"PASTE_TYPE"] == u"NONE"):
        _temp_4 = 3
    elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
        _temp_4 = 4
    PASTE_TYPE_asCode = _temp_4

    if (indata[u"NEED_MICROWAVE"] == u"NO"):
        _temp_5 = 0
    elif (indata[u"NEED_MICROWAVE"] == u"YES"):
        _temp_5 = 1
    NEED_MICROWAVE_asCode = _temp_5

    if (indata[u"HATS_COUPON_TYPE"] == u"EXTERNAL"):
        _temp_6 = 0
    elif (indata[u"HATS_COUPON_TYPE"] == u"INTERNAL"):
        _temp_6 = 1
    elif (indata[u"HATS_COUPON_TYPE"] == u"NONE"):
        _temp_6 = 2
    HATS_COUPON_TYPE_asCode = _temp_6

    if (indata[u"FINISH_CS"] == u"CHM_SILV"):
        _temp_7 = 0
    elif (indata[u"FINISH_CS"] == u"ENEPIG"):
        _temp_7 = 1
    elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
        _temp_7 = 2
    elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
        _temp_7 = 3
    elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
        _temp_7 = 4
    elif (indata[u"FINISH_CS"] == u"ELEC_SILV"):
        _temp_7 = 5
    elif (indata[u"FINISH_CS"] == u"HAL"):
        _temp_7 = 6
    elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
        _temp_7 = 7
    elif (indata[u"FINISH_CS"] == u"NONE"):
        _temp_7 = 8
    elif (indata[u"FINISH_CS"] == u"FULL_NI"):
        _temp_7 = 9
    FINISH_CS_asCode = _temp_7

    if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
        _temp_8 = 0
    elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
        _temp_8 = 1
    elif (indata[u"FAMILY_GROUP"] == u"MIX"):
        _temp_8 = 2
    elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
        _temp_8 = 3
    FAMILY_GROUP_asCode = _temp_8

    if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
        _temp_9 = 0
    elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
        _temp_9 = 1
    elif (indata[u"FAI_TYPE"] == u"RC-28"):
        _temp_9 = 2
    elif (indata[u"FAI_TYPE"] == u"RC-06"):
        _temp_9 = 3
    elif (indata[u"FAI_TYPE"] == u"NONE"):
        _temp_9 = 4
    elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
        _temp_9 = 5
    FAI_TYPE_asCode = _temp_9

    if (indata[u"EXIST_LASER"] == u"NO"):
        _temp_10 = 0
    elif (indata[u"EXIST_LASER"] == u"YES"):
        _temp_10 = 1
    EXIST_LASER_asCode = _temp_10

    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_11 = -4130.84776015716
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_11 = 4130.84776015716
    else:
        _temp_11 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_12 = -1351.83032344268
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_12 = 1351.83032344268
    else:
        _temp_12 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_13 = -1257.02364986304
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_13 = 1257.02364986304
    else:
        _temp_13 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_14 = -676.107801000727
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_14 = 676.107801000727
    else:
        _temp_14 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_15 = -397.010230405871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_15 = 397.010230405871
    else:
        _temp_15 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_16 = 370.501220201582
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_16 = -370.501220201582
    else:
        _temp_16 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_17 = 9258.59705082291
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_17 = -9258.59705082291
    else:
        _temp_17 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_18 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_18 = -1
    else:
        _temp_18 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_19 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_19 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_19 = -1
    else:
        _temp_19 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_20 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_20 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_20 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_20 = -1
    else:
        _temp_20 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_21 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_21 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_21 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_21 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_21 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_21 = -1
    else:
        _temp_21 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_22 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_22 = -1
    else:
        _temp_22 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_23 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_23 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_23 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_23 = -1
    else:
        _temp_23 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_24 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_24 = -1
    else:
        _temp_24 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_25 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_25 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_25 = -1
    else:
        _temp_25 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_26 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_26 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_26 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_26 = -1
    else:
        _temp_26 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_27 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_27 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_27 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_27 = -1
    else:
        _temp_27 = 0
    if (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_28 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_28 = -1
    else:
        _temp_28 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_29 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_29 = -1
    else:
        _temp_29 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_30 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_30 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_30 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_30 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_30 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_30 = -1
    else:
        _temp_30 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_31 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_31 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_31 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_31 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_31 = -1
    else:
        _temp_31 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_32 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_32 = -1
    else:
        _temp_32 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_33 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_33 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_33 = -1
    else:
        _temp_33 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_34 = -17645.1949276834
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_34 = 17645.1949276834
    else:
        _temp_34 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_35 = -7489.84242683172
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_35 = 7489.84242683172
    else:
        _temp_35 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_36 = 2487.55962753918
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_36 = -2487.55962753918
    else:
        _temp_36 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_37 = 5581.31788017006
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_37 = -5581.31788017006
    else:
        _temp_37 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_38 = 18549.3990196652
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_38 = -18549.3990196652
    else:
        _temp_38 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_39 = 57079.2120273258
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_39 = -57079.2120273258
    else:
        _temp_39 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_40 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_40 = -1
    else:
        _temp_40 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_41 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_41 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_41 = -1
    else:
        _temp_41 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_42 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_42 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_42 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_42 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_42 = -1
    else:
        _temp_42 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_43 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_43 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_43 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_43 = -1
    else:
        _temp_43 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_44 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_44 = -1
    else:
        _temp_44 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_45 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_45 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_45 = -1
    else:
        _temp_45 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_46 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_46 = -1
    else:
        _temp_46 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_47 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_47 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_47 = -1
    else:
        _temp_47 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_48 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_48 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_48 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 3)):
        _temp_48 = -1
    else:
        _temp_48 = np.nan
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_49 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_49 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_49 = -1
    else:
        _temp_49 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_50 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_50 = -1
    else:
        _temp_50 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_51 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_51 = -1
    else:
        _temp_51 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_52 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_52 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_52 = -1
    else:
        _temp_52 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_53 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_53 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_53 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_53 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_53 = -1
    else:
        _temp_53 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_54 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_54 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_54 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_54 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_54 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_54 = -1
    else:
        _temp_54 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_55 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_55 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_55 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_55 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_55 = -1
    else:
        _temp_55 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_56 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_56 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_56 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_56 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_56 = -1
    else:
        _temp_56 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_57 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_57 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_57 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_57 = -1
    else:
        _temp_57 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_58 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_58 = -1
    else:
        _temp_58 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_59 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_59 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_59 = -1
    else:
        _temp_59 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_60 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_60 = -1
    else:
        _temp_60 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_61 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_61 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_61 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_61 = -1
    else:
        _temp_61 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_62 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_62 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_62 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_62 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_62 = -1
    else:
        _temp_62 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_63 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_63 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_63 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_63 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_63 = -1
    else:
        _temp_63 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_64 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_64 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_64 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_64 = -1
    else:
        _temp_64 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_65 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_65 = -1
    else:
        _temp_65 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_66 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_66 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_66 = -1
    else:
        _temp_66 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_67 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_67 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_67 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_67 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_67 = -1
    else:
        _temp_67 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_68 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_68 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_68 = -1
    else:
        _temp_68 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_69 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_69 = -1
    else:
        _temp_69 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_70 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_70 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_70 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_70 = -1
    else:
        _temp_70 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_71 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_71 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_71 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_71 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_71 = -1
    else:
        _temp_71 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_72 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_72 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_72 = -1
    else:
        _temp_72 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_73 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_73 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_73 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_73 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_73 = -1
    else:
        _temp_73 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_74 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_74 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_74 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_74 = -1
    else:
        _temp_74 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_75 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_75 = -1
    else:
        _temp_75 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_76 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_76 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_76 = -1
    else:
        _temp_76 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_77 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_77 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_77 = -1
    else:
        _temp_77 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_78 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_78 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_78 = -1
    else:
        _temp_78 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_79 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_79 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_79 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_79 = -1
    else:
        _temp_79 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_80 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_80 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_80 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_80 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_80 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_80 = -1
    else:
        _temp_80 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_81 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_81 = -1
    else:
        _temp_81 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_82 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_82 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_82 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_82 = -1
    else:
        _temp_82 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_83 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_83 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_83 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_83 = -1
    else:
        _temp_83 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_84 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_84 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_84 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_84 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_84 = -1
    else:
        _temp_84 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_85 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_85 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_85 = -1
    else:
        _temp_85 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_86 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_86 = -1
    else:
        _temp_86 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_87 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_87 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_87 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_87 = -1
    else:
        _temp_87 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_88 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_88 = -1
    else:
        _temp_88 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_89 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_89 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_89 = -1
    else:
        _temp_89 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_90 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_90 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_90 = -1
    else:
        _temp_90 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_91 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_91 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_91 = -1
    else:
        _temp_91 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_92 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_92 = -1
    else:
        _temp_92 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_93 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_93 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_93 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_93 = -1
    else:
        _temp_93 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_94 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_94 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_94 = -1
    else:
        _temp_94 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_95 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_95 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_95 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_95 = -1
    else:
        _temp_95 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_96 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_96 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_96 = -1
    else:
        _temp_96 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_97 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_97 = -1
    else:
        _temp_97 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_98 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_98 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_98 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_98 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_98 = -1
    else:
        _temp_98 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_99 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_99 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_99 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_99 = -1
    else:
        _temp_99 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_100 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_100 = -1
    else:
        _temp_100 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_101 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_101 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_101 = -1
    else:
        _temp_101 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_102 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_102 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_102 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_102 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_102 = -1
    else:
        _temp_102 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_103 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_103 = -1
    else:
        _temp_103 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_104 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_104 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_104 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_104 = -1
    else:
        _temp_104 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_105 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_105 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_105 = -1
    else:
        _temp_105 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_106 = -1
    else:
        _temp_106 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_107 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_107 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_107 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_107 = -1
    else:
        _temp_107 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_108 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_108 = -1
    else:
        _temp_108 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_109 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_109 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_109 = -1
    else:
        _temp_109 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_110 = -4130.84776015716
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_110 = 4130.84776015716
    else:
        _temp_110 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_111 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_111 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_111 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_111 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_111 = -1
    else:
        _temp_111 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_112 = -1351.83032344268
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_112 = 1351.83032344268
    else:
        _temp_112 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_113 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_113 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_113 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_113 = -1
    else:
        _temp_113 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_114 = -1257.02364986304
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_114 = 1257.02364986304
    else:
        _temp_114 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_115 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_115 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_115 = -1
    else:
        _temp_115 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_116 = -676.107801000727
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_116 = 676.107801000727
    else:
        _temp_116 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_117 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_117 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_117 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_117 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_117 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_117 = -1
    else:
        _temp_117 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_118 = -397.010230405871
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_118 = 397.010230405871
    else:
        _temp_118 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_119 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_119 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_119 = -1
    else:
        _temp_119 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_120 = 370.501220201582
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_120 = -370.501220201582
    else:
        _temp_120 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_121 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_121 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_121 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_121 = -1
    else:
        _temp_121 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_122 = 9258.59705082291
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_122 = -9258.59705082291
    else:
        _temp_122 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_123 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_123 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_123 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_123 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_123 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_123 = -1
    else:
        _temp_123 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_124 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_124 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_124 = -1
    else:
        _temp_124 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_125 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_125 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_125 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_125 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_125 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_125 = -1
    else:
        _temp_125 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_126 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_126 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_126 = -1
    else:
        _temp_126 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_127 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_127 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_127 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_127 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_127 = -1
    else:
        _temp_127 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_128 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_128 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_128 = -1
    else:
        _temp_128 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_129 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_129 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_129 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_129 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_129 = -1
    else:
        _temp_129 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_130 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_130 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_130 = -1
    else:
        _temp_130 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_131 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_131 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_131 = -1
    else:
        _temp_131 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_132 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_132 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_132 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_132 = -1
    else:
        _temp_132 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_133 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_133 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_133 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_133 = -1
    else:
        _temp_133 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_134 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_134 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_134 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_134 = -1
    else:
        _temp_134 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_135 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_135 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_135 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_135 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_135 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_135 = -1
    else:
        _temp_135 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_136 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_136 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_136 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_136 = -1
    else:
        _temp_136 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_137 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_137 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_137 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_137 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_137 = -1
    else:
        _temp_137 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_138 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_138 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_138 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_138 = -1
    else:
        _temp_138 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_139 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_139 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_139 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_139 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_139 = -1
    else:
        _temp_139 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_140 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_140 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_140 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_140 = -1
    else:
        _temp_140 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_141 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_141 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_141 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_141 = -1
    else:
        _temp_141 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_142 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_142 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_142 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_142 = -1
    else:
        _temp_142 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_143 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_143 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_143 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_143 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_143 = -1
    else:
        _temp_143 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_144 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_144 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_144 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_144 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_144 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_144 = -1
    else:
        _temp_144 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_145 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_145 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_145 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_145 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_145 = -1
    else:
        _temp_145 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_146 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_146 = -1
    else:
        _temp_146 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_147 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_147 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_147 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_147 = -1
    else:
        _temp_147 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_148 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_148 = -1
    else:
        _temp_148 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_149 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_149 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_149 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_149 = -1
    else:
        _temp_149 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_150 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_150 = -1
    else:
        _temp_150 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_151 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_151 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_151 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_151 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_151 = -1
    else:
        _temp_151 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_152 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_152 = -1
    else:
        _temp_152 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_153 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_153 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_153 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_153 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_153 = -1
    else:
        _temp_153 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_154 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_154 = -1
    else:
        _temp_154 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_155 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_155 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_155 = -1
    else:
        _temp_155 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_156 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_156 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_156 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_156 = -1
    else:
        _temp_156 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_157 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_157 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_157 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_157 = -1
    else:
        _temp_157 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_158 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_158 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_158 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_158 = -1
    else:
        _temp_158 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_159 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_159 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_159 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_159 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_159 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_159 = -1
    else:
        _temp_159 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_160 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_160 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_160 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_160 = -1
    else:
        _temp_160 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_161 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_161 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_161 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_161 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_161 = -1
    else:
        _temp_161 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_162 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_162 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_162 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_162 = -1
    else:
        _temp_162 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_163 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_163 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_163 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_163 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_163 = -1
    else:
        _temp_163 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_164 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_164 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_164 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_164 = -1
    else:
        _temp_164 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_165 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_165 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_165 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_165 = -1
    else:
        _temp_165 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_166 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_166 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_166 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_166 = -1
    else:
        _temp_166 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_167 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_167 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_167 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_167 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_167 = -1
    else:
        _temp_167 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_168 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_168 = -1
    else:
        _temp_168 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_169 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_169 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_169 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_169 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_169 = -1
    else:
        _temp_169 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_170 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_170 = -1
    else:
        _temp_170 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_171 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_171 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_171 = -1
    else:
        _temp_171 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_172 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_172 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_172 = -1
    else:
        _temp_172 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_173 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_173 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_173 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_173 = -1
    else:
        _temp_173 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_174 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_174 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_174 = -1
    else:
        _temp_174 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_175 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_175 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_175 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_175 = -1
    else:
        _temp_175 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_176 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_176 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_176 = -1
    else:
        _temp_176 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_177 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_177 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_177 = -1
    else:
        _temp_177 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_178 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_178 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_178 = -1
    else:
        _temp_178 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_179 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_179 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_179 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_179 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_179 = -1
    else:
        _temp_179 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_180 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_180 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_180 = -1
    else:
        _temp_180 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_181 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_181 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_181 = -1
    else:
        _temp_181 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_182 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_182 = -1
    else:
        _temp_182 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_183 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_183 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_183 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_183 = -1
    else:
        _temp_183 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_184 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_184 = -1
    else:
        _temp_184 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_185 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_185 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_185 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_185 = -1
    else:
        _temp_185 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_186 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_186 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_186 = -1
    else:
        _temp_186 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_187 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_187 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_187 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_187 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_187 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_187 = -1
    else:
        _temp_187 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_188 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_188 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_188 = -1
    else:
        _temp_188 = np.nan
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_189 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_189 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_189 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_189 = -1
    else:
        _temp_189 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_190 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_190 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_190 = -1
    else:
        _temp_190 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_191 = -1
    else:
        _temp_191 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_192 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_192 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_192 = -1
    else:
        _temp_192 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_193 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_193 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_193 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_193 = -1
    else:
        _temp_193 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_194 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_194 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_194 = -1
    else:
        _temp_194 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_195 = -1
    else:
        _temp_195 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_196 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_196 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_196 = -1
    else:
        _temp_196 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_197 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_197 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_197 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_197 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_197 = -1
    else:
        _temp_197 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_198 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_198 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_198 = -1
    else:
        _temp_198 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_199 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_199 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_199 = -1
    else:
        _temp_199 = 0
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_200 = -17645.1949276834
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_200 = 17645.1949276834
    else:
        _temp_200 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_201 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_201 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_201 = -1
    else:
        _temp_201 = 0
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_202 = -7489.84242683172
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_202 = 7489.84242683172
    else:
        _temp_202 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_203 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_203 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_203 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_203 = -1
    else:
        _temp_203 = 0
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_204 = 2487.55962753918
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_204 = -2487.55962753918
    else:
        _temp_204 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_205 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_205 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_205 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_205 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_205 = -1
    else:
        _temp_205 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_206 = 5581.31788017006
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_206 = -5581.31788017006
    else:
        _temp_206 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_207 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_207 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_207 = -1
    else:
        _temp_207 = 0
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_208 = 18549.3990196652
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_208 = -18549.3990196652
    else:
        _temp_208 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_209 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_209 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_209 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_209 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_209 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_209 = -1
    else:
        _temp_209 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_210 = 57079.2120273258
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_210 = -57079.2120273258
    else:
        _temp_210 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_211 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_211 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_211 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_211 = -1
    else:
        _temp_211 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_212 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_212 = -1
    else:
        _temp_212 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_213 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_213 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_213 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_213 = -1
    else:
        _temp_213 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_214 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_214 = -1
    else:
        _temp_214 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_215 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_215 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_215 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_215 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_215 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_215 = -1
    else:
        _temp_215 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_216 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_216 = -1
    else:
        _temp_216 = 0
    if (jmp.numeq(FAMILY_GROUP_asCode, 0)):
        _temp_217 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 1)):
        _temp_217 = 1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 2)):
        _temp_217 = -1
    elif (jmp.numeq(FAMILY_GROUP_asCode, 3)):
        _temp_217 = -1
    else:
        _temp_217 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_218 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_218 = -1
    else:
        _temp_218 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_219 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_219 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_219 = -1
    else:
        _temp_219 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_220 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_220 = -1
    else:
        _temp_220 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_221 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_221 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_221 = -1
    else:
        _temp_221 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_222 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_222 = -1
    else:
        _temp_222 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_223 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_223 = -1
    else:
        _temp_223 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_224 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_224 = -1
    else:
        _temp_224 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_225 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_225 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_225 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_225 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_225 = -1
    else:
        _temp_225 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_226 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_226 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_226 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_226 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_226 = -1
    else:
        _temp_226 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_227 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_227 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_227 = -1
    else:
        _temp_227 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_228 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_228 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_228 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_228 = -1
    else:
        _temp_228 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_229 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_229 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_229 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_229 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_229 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_229 = -1
    else:
        _temp_229 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_230 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_230 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_230 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_230 = -1
    else:
        _temp_230 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_231 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_231 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_231 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_231 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_231 = -1
    else:
        _temp_231 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_232 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_232 = -1
    else:
        _temp_232 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_233 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_233 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_233 = -1
    else:
        _temp_233 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_234 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_234 = -1
    else:
        _temp_234 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_235 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_235 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_235 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_235 = -1
    else:
        _temp_235 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_236 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_236 = -1
    else:
        _temp_236 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_237 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_237 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_237 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_237 = -1
    else:
        _temp_237 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_238 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_238 = -1
    else:
        _temp_238 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_239 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_239 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_239 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_239 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_239 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_239 = -1
    else:
        _temp_239 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_240 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_240 = -1
    else:
        _temp_240 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_241 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_241 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_241 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_241 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_241 = -1
    else:
        _temp_241 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_242 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_242 = -1
    else:
        _temp_242 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_243 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_243 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_243 = -1
    else:
        _temp_243 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_244 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_244 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_244 = -1
    else:
        _temp_244 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_245 = -1
    else:
        _temp_245 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_246 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_246 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_246 = -1
    else:
        _temp_246 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_247 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_247 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_247 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_247 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_247 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_247 = -1
    else:
        _temp_247 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_248 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_248 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_248 = -1
    else:
        _temp_248 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_249 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_249 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_249 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_249 = -1
    else:
        _temp_249 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_250 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_250 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_250 = -1
    else:
        _temp_250 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_251 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_251 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_251 = -1
    else:
        _temp_251 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_252 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_252 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_252 = -1
    else:
        _temp_252 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_253 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_253 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_253 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_253 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_253 = -1
    else:
        _temp_253 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_254 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_254 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_254 = -1
    else:
        _temp_254 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_255 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_255 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_255 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_255 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_255 = -1
    else:
        _temp_255 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_256 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_256 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_256 = -1
    else:
        _temp_256 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_257 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_257 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_257 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_257 = -1
    else:
        _temp_257 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_258 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_258 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_258 = -1
    else:
        _temp_258 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_259 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_259 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_259 = -1
    else:
        _temp_259 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_260 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_260 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_260 = -1
    else:
        _temp_260 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_261 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_261 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_261 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_261 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_261 = -1
    else:
        _temp_261 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_262 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_262 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_262 = -1
    else:
        _temp_262 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_263 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_263 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_263 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_263 = -1
    else:
        _temp_263 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_264 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_264 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_264 = -1
    else:
        _temp_264 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_265 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_265 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_265 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_265 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_265 = -1
    else:
        _temp_265 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_266 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_266 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_266 = -1
    else:
        _temp_266 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_267 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_267 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_267 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_267 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_267 = -1
    else:
        _temp_267 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_268 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_268 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_268 = -1
    else:
        _temp_268 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_269 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_269 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_269 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_269 = -1
    else:
        _temp_269 = 0
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_270 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_270 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_270 = -1
    else:
        _temp_270 = 0
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_271 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_271 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_271 = -1
    else:
        _temp_271 = np.nan
    if (jmp.numeq(SEL_PLT_CS_asCode, 2)):
        _temp_272 = 1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 0)):
        _temp_272 = -1
    elif (jmp.numeq(SEL_PLT_CS_asCode, 1)):
        _temp_272 = -1
    else:
        _temp_272 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_273 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_273 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_273 = -1
    else:
        _temp_273 = 0
    if (jmp.numeq(SEL_PLT_PS_asCode, 0)):
        _temp_274 = 1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 1)):
        _temp_274 = -1
    elif (jmp.numeq(SEL_PLT_PS_asCode, 2)):
        _temp_274 = -1
    else:
        _temp_274 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_275 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_275 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_275 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_275 = -1
    else:
        _temp_275 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_276 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_276 = -1
    else:
        _temp_276 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_277 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_277 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_277 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_277 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_277 = -1
    else:
        _temp_277 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_278 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_278 = -1
    else:
        _temp_278 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 2)):
        _temp_279 = 1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_279 = -1
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_279 = -1
    else:
        _temp_279 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_280 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_280 = -1
    else:
        _temp_280 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_281 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_281 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_281 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_281 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_281 = -1
    else:
        _temp_281 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_282 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_282 = -1
    else:
        _temp_282 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_283 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_283 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_283 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_283 = -1
    else:
        _temp_283 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_284 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_284 = -1
    else:
        _temp_284 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_285 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_285 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_285 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_285 = -1
    else:
        _temp_285 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_286 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_286 = -1
    else:
        _temp_286 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_287 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_287 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_287 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_287 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_287 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_287 = -1
    else:
        _temp_287 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_288 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_288 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_288 = -1
    else:
        _temp_288 = 0
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_289 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_289 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_289 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_289 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_289 = -1
    else:
        _temp_289 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_290 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_290 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_290 = -1
    else:
        _temp_290 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_291 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 4)):
        _temp_291 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_291 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_291 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_291 = -1
    else:
        _temp_291 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_292 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_292 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_292 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_292 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_292 = -1
    else:
        _temp_292 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_293 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_293 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_293 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_293 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_293 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_293 = -1
    else:
        _temp_293 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_294 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_294 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_294 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_294 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_294 = -1
    else:
        _temp_294 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_295 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_295 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_295 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_295 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_295 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_295 = -1
    else:
        _temp_295 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_296 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_296 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_296 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_296 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_296 = -1
    else:
        _temp_296 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 8)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 9)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_297 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_297 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_297 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_297 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_297 = -1
    else:
        _temp_297 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_298 = 38274.7571883675
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_298 = -38274.7571883675
    else:
        _temp_298 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_299 = -32887.5392594784 + 1490.25690198226 * indata[u"CAM_PNL_SIZE_Y"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_299 = 32887.5392594784 + -1490.25690198226 * indata[u"CAM_PNL_SIZE_Y"]
    else:
        _temp_299 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_301 = 1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_301 = -1
        else:
            _temp_301 = 0
        _temp_300 = -6829.67344086504 + 9858.76760667081 * _temp_301
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_302 = 1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_302 = -1
        else:
            _temp_302 = 0
        _temp_300 = 6829.67344086504 + -9858.76760667081 * _temp_302
    else:
        _temp_300 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_304 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_304 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_304 = -1
        else:
            _temp_304 = 0
        _temp_303 = -2067.41875375443 + 4418.74360397514 * _temp_304
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_305 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_305 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_305 = -1
        else:
            _temp_305 = 0
        _temp_303 = 2067.41875375443 + -4418.74360397514 * _temp_305
    else:
        _temp_303 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_306 = -1741.33967019358 + 236.490251662939 * indata[u"NUM_DESIGN_LAYERS"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_306 = 1741.33967019358 + -236.490251662939 * indata[u"NUM_DESIGN_LAYERS"]
    else:
        _temp_306 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_308 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_308 = -1
        else:
            _temp_308 = 0
        _temp_307 = -862.237371443712 + -10262.3153816928 * _temp_308
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_309 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_309 = -1
        else:
            _temp_309 = 0
        _temp_307 = 862.237371443712 + 10262.3153816928 * _temp_309
    else:
        _temp_307 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_310 = -157.88563116079 + 5.12865320496613 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_310 = 157.88563116079 + -5.12865320496613 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_310 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_312 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_312 = -1
        else:
            _temp_312 = 0
        _temp_311 = -127.167357877809 + -22054.4532090944 * _temp_312
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_313 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_313 = -1
        else:
            _temp_313 = 0
        _temp_311 = 127.167357877809 + 22054.4532090944 * _temp_313
    else:
        _temp_311 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_314 = 320.488380986217 + -2114.52660063732 * indata[u"JOB_SUB_NUM"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_314 = -320.488380986217 + 2114.52660063732 * indata[u"JOB_SUB_NUM"]
    else:
        _temp_314 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_316 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_316 = -1
        else:
            _temp_316 = 0
        _temp_315 = 3687.68240817309 + 25010.3153269393 * _temp_316
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_317 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_317 = -1
        else:
            _temp_317 = 0
        _temp_315 = -3687.68240817309 + -25010.3153269393 * _temp_317
    else:
        _temp_315 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"NONE"):
            _temp_319 = 1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_319 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_319 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_319 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_319 = -1
        else:
            _temp_319 = np.nan
        _temp_318 = 5924.65998238553 + -11714.229997746 * _temp_319
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"NONE"):
            _temp_320 = 1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_320 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_320 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_320 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_320 = -1
        else:
            _temp_320 = np.nan
        _temp_318 = -5924.65998238553 + 11714.229997746 * _temp_320
    else:
        _temp_318 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_322 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_322 = 1
        elif (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_322 = -1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_322 = -1
        else:
            _temp_322 = np.nan
        _temp_321 = 8810.84437059776 + 19377.4729454813 * _temp_322
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_323 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_323 = 1
        elif (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_323 = -1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_323 = -1
        else:
            _temp_323 = np.nan
        _temp_321 = -8810.84437059776 + -19377.4729454813 * _temp_323
    else:
        _temp_321 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_325 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_325 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_325 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_325 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_325 = -1
        else:
            _temp_325 = np.nan
        _temp_324 = 12259.0214711761 + -13170.3115628387 * _temp_325
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_326 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_326 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_326 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_326 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_326 = -1
        else:
            _temp_326 = np.nan
        _temp_324 = -12259.0214711761 + 13170.3115628387 * _temp_326
    else:
        _temp_324 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_327 = 21034.7429250999 + -1297.57001580647 * indata[u"CAM_PNL_SIZE_X"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_327 = -21034.7429250999 + 1297.57001580647 * indata[u"CAM_PNL_SIZE_X"]
    else:
        _temp_327 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_328 = -14946.7366009522
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_328 = 14946.7366009522
    else:
        _temp_328 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_329 = -18446.4323112266 + 2505.19843671877 * indata[u"NUM_DESIGN_LAYERS"]
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_329 = 18446.4323112266 + -2505.19843671877 * indata[u"NUM_DESIGN_LAYERS"]
    else:
        _temp_329 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"NONE"):
            _temp_331 = 1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_331 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_331 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_331 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_331 = -1
        else:
            _temp_331 = np.nan
        _temp_330 = -7487.83890148087 + 14804.9453198661 * _temp_331
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"NONE"):
            _temp_332 = 1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_332 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_332 = -1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_332 = -1
        elif (indata[u"PASTE_TYPE"] == u"THROUGH-LASER BACK DRILL"):
            _temp_332 = -1
        else:
            _temp_332 = np.nan
        _temp_330 = 7487.83890148087 + -14804.9453198661 * _temp_332
    else:
        _temp_330 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_333 = -4358.73699828372 + 141.58635153497 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_333 = 4358.73699828372 + -141.58635153497 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_333 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_335 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_335 = -1
        else:
            _temp_335 = 0
        _temp_334 = -224.515544502818 + -9734.35253665789 * _temp_335
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_336 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_336 = -1
        else:
            _temp_336 = 0
        _temp_334 = 224.515544502818 + 9734.35253665789 * _temp_336
    else:
        _temp_334 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_338 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_338 = -1
        else:
            _temp_338 = 0
        _temp_337 = 144.402625827423 + 25043.5411077845 * _temp_338
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_339 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_339 = -1
        else:
            _temp_339 = 0
        _temp_337 = -144.402625827423 + -25043.5411077845 * _temp_339
    else:
        _temp_337 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_341 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_341 = -1
        else:
            _temp_341 = 0
        _temp_340 = 353.128912765523 + -21434.9250048672 * _temp_341
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_342 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_342 = -1
        else:
            _temp_342 = 0
        _temp_340 = -353.128912765523 + 21434.9250048672 * _temp_342
    else:
        _temp_340 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_343 = 928.287363050729 + -6124.67858012816 * indata[u"JOB_SUB_NUM"]
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_343 = -928.287363050729 + 6124.67858012816 * indata[u"JOB_SUB_NUM"]
    else:
        _temp_343 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_345 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_345 = -1
        else:
            _temp_345 = 0
        _temp_344 = 1705.21573355586 + 11564.9826845632 * _temp_345
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_346 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_346 = -1
        else:
            _temp_346 = 0
        _temp_344 = -1705.21573355586 + -11564.9826845632 * _temp_346
    else:
        _temp_344 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_348 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_348 = 1
        elif (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_348 = -1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_348 = -1
        else:
            _temp_348 = np.nan
        _temp_347 = 5411.16011813741 + 11900.6311293819 * _temp_348
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"FAMILY_GROUP"] == u"CERAMIC"):
            _temp_349 = 1
        elif (indata[u"FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_349 = 1
        elif (indata[u"FAMILY_GROUP"] == u"MIX"):
            _temp_349 = -1
        elif (indata[u"FAMILY_GROUP"] == u"POLYAMID"):
            _temp_349 = -1
        else:
            _temp_349 = np.nan
        _temp_347 = -5411.16011813741 + -11900.6311293819 * _temp_349
    else:
        _temp_347 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_351 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_351 = -1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_351 = -1
        else:
            _temp_351 = np.nan
        _temp_350 = 5840.09166420793 + -9478.43754057277 * _temp_351
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"SAP_FAMILY_GROUP"] == u"GLASS EPOXY"):
            _temp_352 = 1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
            _temp_352 = -1
        elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
            _temp_352 = -1
        else:
            _temp_352 = np.nan
        _temp_350 = -5840.09166420793 + 9478.43754057277 * _temp_352
    else:
        _temp_350 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_354 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_354 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_354 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_354 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_354 = -1
        else:
            _temp_354 = np.nan
        _temp_353 = 10307.5034037477 + -11073.7248957077 * _temp_354
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_355 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_355 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_355 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS2"):
            _temp_355 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_355 = -1
        else:
            _temp_355 = np.nan
        _temp_353 = -10307.5034037477 + 11073.7248957077 * _temp_355
    else:
        _temp_353 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_357 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_357 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_357 = -1
        else:
            _temp_357 = 0
        _temp_356 = 12874.8042621332 + -27517.6274194185 * _temp_357
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_358 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_358 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_358 = -1
        else:
            _temp_358 = 0
        _temp_356 = -12874.8042621332 + 27517.6274194185 * _temp_358
    else:
        _temp_356 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        _temp_359 = 20796.239693004 + -11207.312752917 * indata[u"FINISH_THK"]
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        _temp_359 = -20796.239693004 + 11207.312752917 * indata[u"FINISH_THK"]
    else:
        _temp_359 = np.nan
    if (jmp.numeq(NEED_MICROWAVE_asCode, 0)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_361 = -31701.0570845963
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_361 = 31701.0570845963
        else:
            _temp_361 = np.nan
        _temp_360 = _temp_361
    elif (jmp.numeq(NEED_MICROWAVE_asCode, 1)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_362 = 31701.0570845963
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_362 = -31701.0570845963
        else:
            _temp_362 = np.nan
        _temp_360 = _temp_362
    else:
        _temp_360 = np.nan
    outdata[u"Add"] = -26263.7360990082 + 15.8592821017009 * indata[u"Assembly_scrap"] + 1054.83307741991 * indata[u"CAM_PNL_SIZE_X"] + -540.551074747787 * indata[u"CAM_PNL_SIZE_Y"] + -40.2212568502909 * indata[u"Costing Lot Size PANEL"] + 0.0314392175641428 * indata[u"DL_PNL_HOLE_QTY"] + 0.0112857464031063 * indata[u"DR_PNL_HOLE_QTY"] + 10369.8046696552 * indata[u"FINISH_THK"] + 39947.3665506742 * indata[u"JOB_SUB_NUM"] + 55.6254686087256 * indata[u"NUM_DESIGN_LAYERS"] + -131.206336613672 * indata[u"NUM_PCBS_PNL"] + -0.884678747940692 * _temp_11 + -0.252059308072488 * _temp_12 + -0.948105436573311 * _temp_13 + 0.904448105436573 * _temp_14 + -0.802306425041186 * _temp_15 + 0.422570016474465 * _temp_16 + -0.884678747940692 * _temp_17 + -3219.3655435148 * _temp_18 + -3101.00954990706 * _temp_19 + -1291.24611829988 * _temp_20 + 9131.30886280095 * _temp_21 + -75327.5706656591 * _temp_22 + -38506.0809591926 * _temp_23 + -9824.1114318164 * _temp_24 + 34953.4081191664 * _temp_25 + -24213.5480366783 * _temp_26 + -37604.2250932648 * _temp_27 + 49320.3343279549 * _temp_28 + -2705.10570559326 * _temp_29 + 1332.23397407478 * _temp_30 + -11669.4200707923 * _temp_31 + 9559.8386292584 * _temp_32 + 11623.5300472488 * _temp_33 + -0.0296540362438221 * _temp_34 + -0.252059308072488 * _temp_35 + -0.884678747940692 * _temp_36 + 0.468698517298188 * _temp_37 + -0.884678747940692 * _temp_38 + 0.422570016474465 * _temp_39 + 16168.3882122356 * _temp_40 + -2815.44305123314 * _temp_41 + 658.680520625323 * _temp_42 + -6385.45580965806 * _temp_43 + 56312.1715649517 * _temp_44 + 12434.0488759981 * _temp_45 + -322.821296653887 * _temp_46 + 10240.5747842995 * _temp_47 + -47446.0280529332 * _temp_48 + -359.99920646522 * _temp_49 + 2997.09177596224 * _temp_50 + -1179.20856875643 * _temp_51 + 41667.3364443749 * _temp_52 + 56020.5298660462 * _temp_53 + 11.9522856981969 * indata[u"CAM_PNL_SIZE_X"] * indata[u"FINISH_THK"] + -522.854854501023 * indata[u"CAM_PNL_SIZE_X"] * _temp_54 + -705.604982895283 * indata[u"CAM_PNL_SIZE_X"] * _temp_55 + 626.168833612495 * indata[u"CAM_PNL_SIZE_X"] * _temp_56 + 1246.03983241461 * indata[u"CAM_PNL_SIZE_X"] * _temp_57 + 422.653539575217 * indata[u"CAM_PNL_SIZE_X"] * _temp_58 + -194.844865695335 * indata[u"CAM_PNL_SIZE_X"] * _temp_59 + 1252.97949929614 * indata[u"CAM_PNL_SIZE_Y"] * _temp_60 + 624.626798043887 * indata[u"CAM_PNL_SIZE_Y"] * _temp_61 + 414.406807875525 * indata[u"CAM_PNL_SIZE_Y"] * _temp_62 + -803.530316745338 * indata[u"CAM_PNL_SIZE_Y"] * _temp_63 + -1553.26794197192 * indata[u"CAM_PNL_SIZE_Y"] * _temp_64 + -1654.92185432567 * indata[u"CAM_PNL_SIZE_Y"] * _temp_65 + 801.184351416387 * indata[u"CAM_PNL_SIZE_Y"] * _temp_66 + -726.848387841907 * indata[u"CAM_PNL_SIZE_Y"] * _temp_67 + 2685.53515341272 * indata[u"FINISH_THK"] * indata[u"JOB_SUB_NUM"] + 52.7683830058531 * indata[u"FINISH_THK"] * _temp_68 + 5015.86810140317 * indata[u"FINISH_THK"] * _temp_69 + 2529.22439453451 * indata[u"FINISH_THK"] * _temp_70 + 100.398468136922 * indata[u"FINISH_THK"] * _temp_71 + 97.1607803008422 * indata[u"FINISH_THK"] * _temp_72 + 538.762310106645 * indata[u"FINISH_THK"] * _temp_73 + 1137.14039177335 * indata[u"FINISH_THK"] * _temp_74 + -5076.88914444865 * indata[u"FINISH_THK"] * _temp_75 + 2422.13710470586 * indata[u"FINISH_THK"] * _temp_76 + 130.428063867642 * indata[u"FINISH_THK"] * _temp_77 + -102.223561073572 * indata[u"JOB_SUB_NUM"] * indata[u"NUM_DESIGN_LAYERS"] + 15.0019620786904 * indata[u"JOB_SUB_NUM"] * indata[u"NUM_PCBS_PNL"] + 1961.51195701943 * indata[u"JOB_SUB_NUM"] * _temp_78 + 390.586215075672 * indata[u"JOB_SUB_NUM"] * _temp_79 + 478.344935156774 * indata[u"JOB_SUB_NUM"] * _temp_80 + -4569.25978424618 * indata[u"JOB_SUB_NUM"] * _temp_81 + -2622.29283081057 * indata[u"JOB_SUB_NUM"] * _temp_82 + 704.32730696667 * indata[u"JOB_SUB_NUM"] * _temp_83 + -9675.95814408704 * indata[u"JOB_SUB_NUM"] * _temp_84 + 925.086742053558 * indata[u"JOB_SUB_NUM"] * _temp_85 + -543.639833114838 * indata[u"JOB_SUB_NUM"] * _temp_86 + 1688.86563860346 * indata[u"JOB_SUB_NUM"] * _temp_87 + 6439.14335033913 * indata[u"JOB_SUB_NUM"] * _temp_88 + -1474.80598508641 * indata[u"JOB_SUB_NUM"] * _temp_89 + -28883.4491206191 * indata[u"JOB_SUB_NUM"] * _temp_90 + -1759.71438164919 * indata[u"JOB_SUB_NUM"] * _temp_91 + -426.02908031841 * indata[u"NUM_DESIGN_LAYERS"] * _temp_92 + -195.845327011741 * indata[u"NUM_DESIGN_LAYERS"] * _temp_93 + -1175.69652273488 * indata[u"NUM_DESIGN_LAYERS"] * _temp_94 + -592.85495951432 * indata[u"NUM_DESIGN_LAYERS"] * _temp_95 + -17.8337026707891 * indata[u"NUM_DESIGN_LAYERS"] * _temp_96 + 396.114949634095 * indata[u"NUM_DESIGN_LAYERS"] * _temp_97 + -74.1562078619351 * indata[u"NUM_DESIGN_LAYERS"] * _temp_98 + -113.535200850488 * indata[u"NUM_DESIGN_LAYERS"] * _temp_99 + 519.162132224724 * indata[u"NUM_DESIGN_LAYERS"] * _temp_100 + -262.308118905449 * indata[u"NUM_DESIGN_LAYERS"] * _temp_101 + -2008.55765854937 * indata[u"NUM_DESIGN_LAYERS"] * _temp_102 + -22.4375168883595 * indata[u"NUM_PCBS_PNL"] * _temp_103 + -11.4946714981962 * indata[u"NUM_PCBS_PNL"] * _temp_104 + 9.19114603339553 * indata[u"NUM_PCBS_PNL"] * _temp_105 + 32.6151381873501 * indata[u"NUM_PCBS_PNL"] * _temp_106 + 19.3142973936468 * indata[u"NUM_PCBS_PNL"] * _temp_107 + 27.9683802476538 * indata[u"NUM_PCBS_PNL"] * _temp_108 + -13.396037176221 * indata[u"NUM_PCBS_PNL"] * _temp_109 + _temp_110 * _temp_111 + _temp_112 * _temp_113 + _temp_114 * _temp_115 + _temp_116 * _temp_117 + _temp_118 * _temp_119 + _temp_120 * _temp_121 + _temp_122 * _temp_123 + 1460.7952276906 * _temp_124 * _temp_125 + 713.196096633819 * _temp_126 * _temp_127 + 50.5082334062813 * _temp_128 * _temp_129 + -1885.15294976794 * _temp_130 * _temp_131 + -216.967212157831 * _temp_132 * _temp_133 + 1790.22533895364 * _temp_134 * _temp_135 + 5662.28230614354 * _temp_136 * _temp_137 + 953.671106179163 * _temp_138 * _temp_139 + 1823.67461902503 * _temp_140 * _temp_141 + 6164.34762335475 * _temp_142 * _temp_143 + -537.78897449223 * _temp_144 * _temp_145 + -422.56045736952 * _temp_146 * _temp_147 + -22456.1066220022 * _temp_148 * _temp_149 + -13674.3686931445 * _temp_150 * _temp_151 + -4526.91226979497 * _temp_152 * _temp_153 + -931.366419719656 * _temp_154 * _temp_155 + -11222.1538585279 * _temp_156 * _temp_157 + -2955.91114833306 * _temp_158 * _temp_159 + -10874.6572065891 * _temp_160 * _temp_161 + -3629.94519801481 * _temp_162 * _temp_163 + -1839.95467882507 * _temp_164 * _temp_165 + -9366.59776766747 * _temp_166 * _temp_167 + -852.38109798909 * _temp_168 * _temp_169 + 914.318829047886 * _temp_170 * _temp_171 + 9615.68279958848 * _temp_172 * _temp_173 + -5259.72008994806 * _temp_174 * _temp_175 + -22208.9153288405 * _temp_176 * _temp_177 + -37383.4996878942 * _temp_178 * _temp_179 + -2833.26409975736 * _temp_180 * _temp_181 + 23102.9796293585 * _temp_182 * _temp_183 + -39741.8559108403 * _temp_184 * _temp_185 + 1751.94673399047 * _temp_186 * _temp_187 + -832.274956799284 * _temp_188 * _temp_189 + -32493.0953472115 * _temp_190 * _temp_191 + -19892.5204016323 * _temp_192 * _temp_193 + -8372.34784212718 * _temp_194 * _temp_195 + 10.084764943889 * _temp_196 * _temp_197 + -788.737117873254 * _temp_198 * _temp_199 + _temp_200 * _temp_201 + _temp_202 * _temp_203 + _temp_204 * _temp_205 + _temp_206 * _temp_207 + _temp_208 * _temp_209 + _temp_210 * _temp_211 + 1272.37182304169 * _temp_212 * _temp_213 + 1648.56724220544 * _temp_214 * _temp_215 + 729.521896742714 * _temp_216 * _temp_217 + 2443.46421841928 * _temp_218 * _temp_219 + -3401.48234679849 * _temp_220 * _temp_221 + -504.678423721528 * _temp_222 * _temp_223 + 2368.52042446343 * _temp_224 * _temp_225 + -4063.06101381178 * _temp_226 * _temp_227 + -8170.08016443095 * _temp_228 * _temp_229 + 12370.1796104496 * _temp_230 * _temp_231 + 3676.67076907907 * _temp_232 * _temp_233 + 2264.94181129433 * _temp_234 * _temp_235 + 22408.3190167556 * _temp_236 * _temp_237 + 3323.30245457302 * _temp_238 * _temp_239 + 3933.73133638813 * _temp_240 * _temp_241 + 1528.24447626821 * _temp_242 * _temp_243 + -1155.47474400445 * _temp_244 * _temp_245 + -23129.9562145313 * _temp_246 * _temp_247 + -11195.5826121379 * _temp_248 * _temp_249 + -139.654622713282 * _temp_250 * _temp_251 + -15903.7698038359 * _temp_252 * _temp_253 + 3714.95661984056 * _temp_254 * _temp_255 + 12186.7266834107 * _temp_256 * _temp_257 + -338.892109380322 * _temp_258 * _temp_259 + 2085.80320958775 * _temp_260 * _temp_261 + 267.400217664758 * _temp_262 * _temp_263 + -2796.95744645132 * _temp_264 * _temp_265 + -6274.68682254836 * _temp_266 * _temp_267 + -12929.3987575051 * _temp_268 * _temp_269 + -388.02170827627 * _temp_270 * _temp_271 + -214.003330427303 * _temp_272 * _temp_273 + -191.77670771555 * _temp_274 * _temp_275 + 613.454910190361 * _temp_276 * _temp_277 + 1561.67188118132 * _temp_278 * _temp_279 + 5088.33496327717 * _temp_280 * _temp_281 + 10188.6265024869 * _temp_282 * _temp_283 + -1874.05475513493 * _temp_284 * _temp_285 + 7961.77625108456 * _temp_286 * _temp_287 + -18424.0071012769 * _temp_288 * _temp_289 + 50.3189944795235 * _temp_290 * _temp_291 + -9391.03008912324 * _temp_292 * _temp_293 + 11419.1257244606 * _temp_294 * _temp_295 + 5490.75030122147 * _temp_296 * _temp_297 + _temp_298 + _temp_299 + _temp_300 + _temp_303 + _temp_306 + _temp_307 + _temp_310 + _temp_311 + _temp_314 + _temp_315 + _temp_318 + _temp_321 + _temp_324 + _temp_327 + _temp_328 + _temp_329 + _temp_330 + _temp_333 + _temp_334 + _temp_337 + _temp_340 + _temp_343 + _temp_344 + _temp_347 + _temp_350 + _temp_353 + _temp_356 + _temp_359 + _temp_360

    return outdata[u"Add"]


