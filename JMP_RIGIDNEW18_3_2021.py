from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v15.0.0 """

def getModelMetadata():
	return {"creator": u"Formula Editor", "modelName": u"", "predicted": u"", "table": u"NEW RIGID 17.3 ALL", "version": u"15.0.0", "timestamp": u"2021-03-18T10:24:24Z"}


def getInputMetadata():
    return {
        u"Assembly_scrap": "float",
        u"BOARD_TYPE": "str",
        u"CAM_LAYUP": "str",
        u"CAM_PNL_SIZE_X": "float",
        u"CAM_PNL_SIZE_Y": "float",
        u"Costing_Lot_Size_Panels": "float",
        u"DL_PNL_HOLE_QTY": "float",
        u"DR_PNL_HOLE_QTY": "float",
        u"ETCHBACK": "str",
        u"EXIST_LASER": "str",
        u"FAI_TYPE": "str",
        u"FINISH_CS": "str",
        u"FINISH_PS": "str",
        u"FINISH_THK": "float",
        u"HATS_COUPON_TYPE": "str",
        u"JOB_SUB_NUM": "float",
        u"NUM_DESIGN_LAYERS": "float",
        u"NUM_PCBS_PNL": "float",
        u"PANEL_XY": "float",
        u"PASTE_APPLY": "str",
        u"PASTE_TYPE": "str",
        u"ROUTING_PHASE": "str",
        u"SAP_FAMILY_GROUP": "str",
        u"SEL_PLT": "str",
        u"SPEC": "str",
        u"WRAP_REQUIRMENT": "str"
	}


def getOutputMetadata():
    return {
        u"Add": "float"
	}


def score(indata, outdata):
    # WRAP_REQUIRMENT_asCode
    # SPEC_asCode
    # SEL_PLT_asCode
    # SAP_FAMILY_GROUP_asCode
    # ROUTING_PHASE_asCode
    # PASTE_TYPE_asCode
    # PASTE_APPLY_asCode
    # HATS_COUPON_TYPE_asCode
    # FINISH_PS_asCode
    # FINISH_CS_asCode
    # FAI_TYPE_asCode
    # EXIST_LASER_asCode
    # ETCHBACK_asCode
    # CAM_LAYUP_asCode
    # BOARD_TYPE_asCode
    _temp_0 = np.nan
    _temp_1 = np.nan
    _temp_2 = np.nan
    _temp_3 = np.nan
    _temp_4 = np.nan
    _temp_5 = np.nan
    _temp_6 = np.nan
    _temp_7 = np.nan
    _temp_8 = np.nan
    _temp_9 = np.nan
    _temp_10 = np.nan
    _temp_11 = np.nan
    _temp_12 = np.nan
    _temp_13 = np.nan
    _temp_14 = np.nan
    _temp_15 = np.nan
    _temp_16 = np.nan
    _temp_17 = np.nan
    _temp_18 = np.nan
    _temp_19 = np.nan
    _temp_20 = np.nan
    _temp_21 = np.nan
    _temp_22 = np.nan
    _temp_23 = np.nan
    _temp_24 = np.nan
    _temp_25 = np.nan
    _temp_26 = np.nan
    _temp_27 = np.nan
    _temp_28 = np.nan
    _temp_29 = np.nan
    _temp_30 = np.nan
    _temp_31 = np.nan
    _temp_32 = np.nan
    _temp_33 = np.nan
    _temp_34 = np.nan
    _temp_35 = np.nan
    _temp_36 = np.nan
    _temp_37 = np.nan
    _temp_38 = np.nan
    _temp_39 = np.nan
    _temp_40 = np.nan
    _temp_41 = np.nan
    _temp_42 = np.nan
    _temp_43 = np.nan
    _temp_44 = np.nan
    _temp_45 = np.nan
    _temp_46 = np.nan
    _temp_47 = np.nan
    _temp_48 = np.nan
    _temp_49 = np.nan
    _temp_50 = np.nan
    _temp_51 = np.nan
    _temp_52 = np.nan
    _temp_53 = np.nan
    _temp_54 = np.nan
    _temp_55 = np.nan
    _temp_56 = np.nan
    _temp_57 = np.nan
    _temp_58 = np.nan
    _temp_59 = np.nan
    _temp_60 = np.nan
    _temp_61 = np.nan
    _temp_62 = np.nan
    _temp_63 = np.nan
    _temp_64 = np.nan
    _temp_65 = np.nan
    _temp_66 = np.nan
    _temp_67 = np.nan
    _temp_68 = np.nan
    _temp_69 = np.nan
    _temp_70 = np.nan
    _temp_71 = np.nan
    _temp_72 = np.nan
    _temp_73 = np.nan
    _temp_74 = np.nan
    _temp_75 = np.nan
    _temp_76 = np.nan
    _temp_77 = np.nan
    _temp_78 = np.nan
    _temp_79 = np.nan
    _temp_80 = np.nan
    _temp_81 = np.nan
    _temp_82 = np.nan
    _temp_83 = np.nan
    _temp_84 = np.nan
    _temp_85 = np.nan
    _temp_86 = np.nan
    _temp_87 = np.nan
    _temp_88 = np.nan
    _temp_89 = np.nan
    _temp_90 = np.nan
    _temp_91 = np.nan
    _temp_92 = np.nan
    _temp_93 = np.nan
    _temp_94 = np.nan
    _temp_95 = np.nan
    _temp_96 = np.nan
    _temp_97 = np.nan
    _temp_98 = np.nan
    _temp_99 = np.nan
    _temp_100 = np.nan
    _temp_101 = np.nan
    _temp_102 = np.nan
    _temp_103 = np.nan
    _temp_104 = np.nan
    _temp_105 = np.nan
    _temp_106 = np.nan
    _temp_107 = np.nan
    _temp_108 = np.nan
    _temp_109 = np.nan
    _temp_110 = np.nan
    _temp_111 = np.nan
    _temp_112 = np.nan
    _temp_113 = np.nan
    _temp_114 = np.nan
    _temp_115 = np.nan
    _temp_116 = np.nan
    _temp_117 = np.nan
    _temp_118 = np.nan
    _temp_119 = np.nan
    _temp_120 = np.nan
    _temp_121 = np.nan
    _temp_122 = np.nan
    _temp_123 = np.nan
    _temp_124 = np.nan
    _temp_125 = np.nan
    _temp_126 = np.nan
    _temp_127 = np.nan
    _temp_128 = np.nan
    _temp_129 = np.nan
    _temp_130 = np.nan
    _temp_131 = np.nan
    _temp_132 = np.nan
    _temp_133 = np.nan
    _temp_134 = np.nan
    _temp_135 = np.nan
    _temp_136 = np.nan
    _temp_137 = np.nan
    _temp_138 = np.nan
    _temp_139 = np.nan
    _temp_140 = np.nan
    _temp_141 = np.nan
    _temp_142 = np.nan
    _temp_143 = np.nan
    _temp_144 = np.nan
    _temp_145 = np.nan
    _temp_146 = np.nan
    _temp_147 = np.nan
    _temp_148 = np.nan
    _temp_149 = np.nan
    _temp_150 = np.nan
    _temp_151 = np.nan
    _temp_152 = np.nan
    _temp_153 = np.nan
    _temp_154 = np.nan
    _temp_155 = np.nan
    _temp_156 = np.nan
    _temp_157 = np.nan
    _temp_158 = np.nan
    _temp_159 = np.nan
    _temp_160 = np.nan
    _temp_161 = np.nan
    _temp_162 = np.nan
    _temp_163 = np.nan
    _temp_164 = np.nan
    _temp_165 = np.nan
    _temp_166 = np.nan
    _temp_167 = np.nan
    _temp_168 = np.nan
    _temp_169 = np.nan
    _temp_170 = np.nan
    _temp_171 = np.nan
    _temp_172 = np.nan
    _temp_173 = np.nan
    _temp_174 = np.nan
    _temp_175 = np.nan
    _temp_176 = np.nan
    _temp_177 = np.nan
    _temp_178 = np.nan
    _temp_179 = np.nan
    _temp_180 = np.nan
    _temp_181 = np.nan
    _temp_182 = np.nan
    _temp_183 = np.nan
    _temp_184 = np.nan
    _temp_185 = np.nan
    _temp_186 = np.nan
    _temp_187 = np.nan
    _temp_188 = np.nan
    _temp_189 = np.nan
    _temp_190 = np.nan
    _temp_191 = np.nan
    _temp_192 = np.nan
    _temp_193 = np.nan
    _temp_194 = np.nan
    _temp_195 = np.nan
    _temp_196 = np.nan
    _temp_197 = np.nan
    _temp_198 = np.nan
    _temp_199 = np.nan
    _temp_200 = np.nan
    _temp_201 = np.nan
    _temp_202 = np.nan
    _temp_203 = np.nan
    _temp_204 = np.nan
    _temp_205 = np.nan
    _temp_206 = np.nan
    _temp_207 = np.nan
    _temp_208 = np.nan
    _temp_209 = np.nan
    _temp_210 = np.nan
    _temp_211 = np.nan
    _temp_212 = np.nan
    _temp_213 = np.nan
    _temp_214 = np.nan
    _temp_215 = np.nan
    _temp_216 = np.nan
    _temp_217 = np.nan
    _temp_218 = np.nan
    _temp_219 = np.nan
    _temp_220 = np.nan
    _temp_221 = np.nan
    _temp_222 = np.nan
    _temp_223 = np.nan
    _temp_224 = np.nan
    _temp_225 = np.nan
    _temp_226 = np.nan
    _temp_227 = np.nan
    _temp_228 = np.nan
    _temp_229 = np.nan
    _temp_230 = np.nan
    _temp_231 = np.nan
    _temp_232 = np.nan
    _temp_233 = np.nan
    _temp_234 = np.nan
    _temp_235 = np.nan
    _temp_236 = np.nan
    _temp_237 = np.nan
    _temp_238 = np.nan
    _temp_239 = np.nan
    _temp_240 = np.nan
    _temp_241 = np.nan
    _temp_242 = np.nan
    _temp_243 = np.nan
    _temp_244 = np.nan
    _temp_245 = np.nan
    _temp_246 = np.nan
    _temp_247 = np.nan
    _temp_248 = np.nan
    _temp_249 = np.nan
    _temp_250 = np.nan
    _temp_251 = np.nan
    _temp_252 = np.nan
    _temp_253 = np.nan
    _temp_254 = np.nan
    _temp_255 = np.nan
    _temp_256 = np.nan
    _temp_257 = np.nan
    _temp_258 = np.nan
    _temp_259 = np.nan
    _temp_260 = np.nan
    _temp_261 = np.nan
    _temp_262 = np.nan
    _temp_263 = np.nan
    _temp_264 = np.nan
    _temp_265 = np.nan
    _temp_266 = np.nan
    _temp_267 = np.nan
    _temp_268 = np.nan
    _temp_269 = np.nan
    _temp_270 = np.nan
    _temp_271 = np.nan
    _temp_272 = np.nan
    _temp_273 = np.nan
    _temp_274 = np.nan
    _temp_275 = np.nan
    _temp_276 = np.nan
    _temp_277 = np.nan
    _temp_278 = np.nan
    _temp_279 = np.nan
    _temp_280 = np.nan
    _temp_281 = np.nan
    _temp_282 = np.nan
    _temp_283 = np.nan
    _temp_284 = np.nan
    _temp_285 = np.nan
    _temp_286 = np.nan
    _temp_287 = np.nan
    _temp_288 = np.nan
    _temp_289 = np.nan
    _temp_290 = np.nan
    _temp_291 = np.nan
    _temp_292 = np.nan
    _temp_293 = np.nan
    _temp_294 = np.nan
    _temp_295 = np.nan
    _temp_296 = np.nan
    _temp_297 = np.nan
    _temp_298 = np.nan
    _temp_299 = np.nan
    _temp_300 = np.nan
    _temp_301 = np.nan
    _temp_302 = np.nan
    _temp_303 = np.nan
    _temp_304 = np.nan
    _temp_305 = np.nan
    _temp_306 = np.nan
    _temp_307 = np.nan
    _temp_308 = np.nan
    _temp_309 = np.nan
    _temp_310 = np.nan
    _temp_311 = np.nan
    _temp_312 = np.nan
    _temp_313 = np.nan
    _temp_314 = np.nan
    _temp_315 = np.nan
    _temp_316 = np.nan
    _temp_317 = np.nan
    _temp_318 = np.nan
    _temp_319 = np.nan
    _temp_320 = np.nan
    _temp_321 = np.nan
    _temp_322 = np.nan
    _temp_323 = np.nan
    _temp_324 = np.nan
    _temp_325 = np.nan
    _temp_326 = np.nan
    _temp_327 = np.nan
    _temp_328 = np.nan
    _temp_329 = np.nan
    _temp_330 = np.nan
    _temp_331 = np.nan
    _temp_332 = np.nan
    _temp_333 = np.nan
    _temp_334 = np.nan
    _temp_335 = np.nan
    _temp_336 = np.nan
    _temp_337 = np.nan
    _temp_338 = np.nan
    _temp_339 = np.nan
    _temp_340 = np.nan
    _temp_341 = np.nan
    _temp_342 = np.nan
    _temp_343 = np.nan
    _temp_344 = np.nan
    _temp_345 = np.nan
    _temp_346 = np.nan
    _temp_347 = np.nan
    _temp_348 = np.nan
    _temp_349 = np.nan
    _temp_350 = np.nan
    _temp_351 = np.nan
    _temp_352 = np.nan
    _temp_353 = np.nan
    _temp_354 = np.nan
    _temp_355 = np.nan
    _temp_356 = np.nan
    _temp_357 = np.nan
    _temp_358 = np.nan
    _temp_359 = np.nan
    _temp_360 = np.nan
    _temp_361 = np.nan
    _temp_362 = np.nan
    _temp_363 = np.nan
    _temp_364 = np.nan
    _temp_365 = np.nan
    _temp_366 = np.nan
    _temp_367 = np.nan
    _temp_368 = np.nan
    _temp_369 = np.nan
    _temp_370 = np.nan
    _temp_371 = np.nan
    _temp_372 = np.nan
    _temp_373 = np.nan
    _temp_374 = np.nan
    _temp_375 = np.nan
    _temp_376 = np.nan
    _temp_377 = np.nan
    _temp_378 = np.nan
    _temp_379 = np.nan
    _temp_380 = np.nan
    _temp_381 = np.nan
    _temp_382 = np.nan
    _temp_383 = np.nan
    _temp_384 = np.nan
    _temp_385 = np.nan
    _temp_386 = np.nan
    _temp_387 = np.nan
    _temp_388 = np.nan
    _temp_389 = np.nan
    _temp_390 = np.nan
    _temp_391 = np.nan
    _temp_392 = np.nan
    _temp_393 = np.nan
    _temp_394 = np.nan
    _temp_395 = np.nan
    _temp_396 = np.nan
    _temp_397 = np.nan
    _temp_398 = np.nan
    _temp_399 = np.nan
    _temp_400 = np.nan
    _temp_401 = np.nan
    _temp_402 = np.nan
    _temp_403 = np.nan
    _temp_404 = np.nan
    _temp_405 = np.nan
    _temp_406 = np.nan
    _temp_407 = np.nan
    _temp_408 = np.nan
    _temp_409 = np.nan
    _temp_410 = np.nan
    _temp_411 = np.nan
    _temp_412 = np.nan
    _temp_413 = np.nan
    _temp_414 = np.nan
    _temp_415 = np.nan
    _temp_416 = np.nan
    _temp_417 = np.nan
    _temp_418 = np.nan
    _temp_419 = np.nan
    _temp_420 = np.nan
    _temp_421 = np.nan
    _temp_422 = np.nan
    _temp_423 = np.nan
    _temp_424 = np.nan
    _temp_425 = np.nan
    _temp_426 = np.nan
    _temp_427 = np.nan
    _temp_428 = np.nan
    _temp_429 = np.nan
    _temp_430 = np.nan
    _temp_431 = np.nan
    _temp_432 = np.nan
    _temp_433 = np.nan
    _temp_434 = np.nan
    _temp_435 = np.nan
    _temp_436 = np.nan
    _temp_437 = np.nan
    _temp_438 = np.nan
    _temp_439 = np.nan
    _temp_440 = np.nan
    _temp_441 = np.nan
    _temp_442 = np.nan
    _temp_443 = np.nan
    _temp_444 = np.nan
    _temp_445 = np.nan
    _temp_446 = np.nan
    _temp_447 = np.nan
    _temp_448 = np.nan
    _temp_449 = np.nan
    _temp_450 = np.nan
    _temp_451 = np.nan
    _temp_452 = np.nan
    _temp_453 = np.nan
    _temp_454 = np.nan
    _temp_455 = np.nan
    _temp_456 = np.nan
    _temp_457 = np.nan
    _temp_458 = np.nan
    _temp_459 = np.nan
    _temp_460 = np.nan
    _temp_461 = np.nan
    _temp_462 = np.nan
    _temp_463 = np.nan
    _temp_464 = np.nan
    _temp_465 = np.nan
    _temp_466 = np.nan
    _temp_467 = np.nan
    _temp_468 = np.nan
    _temp_469 = np.nan
    _temp_470 = np.nan
    _temp_471 = np.nan
    _temp_472 = np.nan
    _temp_473 = np.nan
    _temp_474 = np.nan
    _temp_475 = np.nan
    _temp_476 = np.nan
    _temp_477 = np.nan
    _temp_478 = np.nan
    _temp_479 = np.nan
    _temp_480 = np.nan
    _temp_481 = np.nan
    _temp_482 = np.nan
    _temp_483 = np.nan
    _temp_484 = np.nan
    _temp_485 = np.nan
    _temp_486 = np.nan
    _temp_487 = np.nan
    _temp_488 = np.nan
    _temp_489 = np.nan
    _temp_490 = np.nan
    _temp_491 = np.nan
    _temp_492 = np.nan
    _temp_493 = np.nan
    _temp_494 = np.nan
    _temp_495 = np.nan
    _temp_496 = np.nan
    _temp_497 = np.nan
    _temp_498 = np.nan
    _temp_499 = np.nan
    _temp_500 = np.nan
    _temp_501 = np.nan
    _temp_502 = np.nan
    _temp_503 = np.nan
    _temp_504 = np.nan
    _temp_505 = np.nan
    _temp_506 = np.nan
    _temp_507 = np.nan
    _temp_508 = np.nan
    _temp_509 = np.nan
    _temp_510 = np.nan
    _temp_511 = np.nan
    _temp_512 = np.nan
    _temp_513 = np.nan
    _temp_514 = np.nan
    _temp_515 = np.nan
    _temp_516 = np.nan
    _temp_517 = np.nan
    _temp_518 = np.nan
    _temp_519 = np.nan
    _temp_520 = np.nan
    _temp_521 = np.nan
    _temp_522 = np.nan
    _temp_523 = np.nan
    _temp_524 = np.nan
    _temp_525 = np.nan
    _temp_526 = np.nan
    _temp_527 = np.nan
    _temp_528 = np.nan
    _temp_529 = np.nan
    _temp_530 = np.nan
    _temp_531 = np.nan
    _temp_532 = np.nan
    _temp_533 = np.nan
    _temp_534 = np.nan
    _temp_535 = np.nan
    _temp_536 = np.nan
    _temp_537 = np.nan
    _temp_538 = np.nan
    _temp_539 = np.nan
    _temp_540 = np.nan
    _temp_541 = np.nan
    _temp_542 = np.nan
    _temp_543 = np.nan
    _temp_544 = np.nan
    _temp_545 = np.nan
    _temp_546 = np.nan
    _temp_547 = np.nan
    _temp_548 = np.nan
    _temp_549 = np.nan
    _temp_550 = np.nan
    _temp_551 = np.nan
    _temp_552 = np.nan
    _temp_553 = np.nan
    _temp_554 = np.nan
    _temp_555 = np.nan
    _temp_556 = np.nan
    _temp_557 = np.nan
    _temp_558 = np.nan
    _temp_559 = np.nan
    _temp_560 = np.nan
    _temp_561 = np.nan
    _temp_562 = np.nan
    _temp_563 = np.nan
    _temp_564 = np.nan
    _temp_565 = np.nan
    _temp_566 = np.nan
    _temp_567 = np.nan
    _temp_568 = np.nan
    _temp_569 = np.nan
    _temp_570 = np.nan
    _temp_571 = np.nan
    _temp_572 = np.nan
    _temp_573 = np.nan
    _temp_574 = np.nan
    _temp_575 = np.nan
    _temp_576 = np.nan
    _temp_577 = np.nan
    _temp_578 = np.nan
    _temp_579 = np.nan
    _temp_580 = np.nan
    _temp_581 = np.nan
    _temp_582 = np.nan
    _temp_583 = np.nan
    _temp_584 = np.nan
    _temp_585 = np.nan
    _temp_586 = np.nan
    _temp_587 = np.nan
    _temp_588 = np.nan
    _temp_589 = np.nan
    _temp_590 = np.nan
    _temp_591 = np.nan
    _temp_592 = np.nan
    _temp_593 = np.nan
    _temp_594 = np.nan
    _temp_595 = np.nan
    _temp_596 = np.nan
    _temp_597 = np.nan
    _temp_598 = np.nan
    _temp_599 = np.nan
    _temp_600 = np.nan
    _temp_601 = np.nan
    _temp_602 = np.nan
    _temp_603 = np.nan
    _temp_604 = np.nan
    _temp_605 = np.nan
    _temp_606 = np.nan
    _temp_607 = np.nan
    _temp_608 = np.nan
    _temp_609 = np.nan
    _temp_610 = np.nan
    _temp_611 = np.nan
    _temp_612 = np.nan
    _temp_613 = np.nan
    _temp_614 = np.nan
    _temp_615 = np.nan
    _temp_616 = np.nan
    _temp_617 = np.nan
    _temp_618 = np.nan
    _temp_619 = np.nan
    _temp_620 = np.nan
    _temp_621 = np.nan
    _temp_622 = np.nan
    _temp_623 = np.nan
    _temp_624 = np.nan
    _temp_625 = np.nan
    _temp_626 = np.nan
    _temp_627 = np.nan
    _temp_628 = np.nan
    _temp_629 = np.nan
    _temp_630 = np.nan
    _temp_631 = np.nan
    _temp_632 = np.nan
    _temp_633 = np.nan
    _temp_634 = np.nan
    _temp_635 = np.nan
    _temp_636 = np.nan
    _temp_637 = np.nan
    _temp_638 = np.nan
    _temp_639 = np.nan
    _temp_640 = np.nan
    _temp_641 = np.nan
    _temp_642 = np.nan
    _temp_643 = np.nan
    _temp_644 = np.nan
    _temp_645 = np.nan
    _temp_646 = np.nan
    _temp_647 = np.nan
    _temp_648 = np.nan
    _temp_649 = np.nan
    _temp_650 = np.nan
    _temp_651 = np.nan
    _temp_652 = np.nan
    _temp_653 = np.nan
    _temp_654 = np.nan
    _temp_655 = np.nan
    _temp_656 = np.nan
    _temp_657 = np.nan
    _temp_658 = np.nan
    _temp_659 = np.nan
    _temp_660 = np.nan
    _temp_661 = np.nan
    _temp_662 = np.nan
    _temp_663 = np.nan
    _temp_664 = np.nan
    _temp_665 = np.nan
    _temp_666 = np.nan
    _temp_667 = np.nan
    _temp_668 = np.nan
    _temp_669 = np.nan
    _temp_670 = np.nan
    _temp_671 = np.nan
    _temp_672 = np.nan
    _temp_673 = np.nan
    _temp_674 = np.nan
    _temp_675 = np.nan
    _temp_676 = np.nan
    _temp_677 = np.nan
    _temp_678 = np.nan
    _temp_679 = np.nan
    _temp_680 = np.nan
    _temp_681 = np.nan
    _temp_682 = np.nan
    _temp_683 = np.nan
    _temp_684 = np.nan
    _temp_685 = np.nan
    _temp_686 = np.nan
    _temp_687 = np.nan
    _temp_688 = np.nan
    _temp_689 = np.nan
    _temp_690 = np.nan
    _temp_691 = np.nan
    _temp_692 = np.nan
    _temp_693 = np.nan
    _temp_694 = np.nan
    _temp_695 = np.nan
    _temp_696 = np.nan
    _temp_697 = np.nan
    _temp_698 = np.nan
    _temp_699 = np.nan
    _temp_700 = np.nan
    _temp_701 = np.nan
    _temp_702 = np.nan
    _temp_703 = np.nan
    _temp_704 = np.nan
    _temp_705 = np.nan
    _temp_706 = np.nan
    _temp_707 = np.nan
    _temp_708 = np.nan
    _temp_709 = np.nan
    _temp_710 = np.nan
    _temp_711 = np.nan
    _temp_712 = np.nan
    _temp_713 = np.nan
    _temp_714 = np.nan
    _temp_715 = np.nan
    _temp_716 = np.nan
    _temp_717 = np.nan
    _temp_718 = np.nan
    _temp_719 = np.nan
    _temp_720 = np.nan
    _temp_721 = np.nan
    _temp_722 = np.nan
    _temp_723 = np.nan
    _temp_724 = np.nan
    _temp_725 = np.nan
    _temp_726 = np.nan
    _temp_727 = np.nan
    _temp_728 = np.nan
    _temp_729 = np.nan
    _temp_730 = np.nan
    _temp_731 = np.nan
    _temp_732 = np.nan
    _temp_733 = np.nan
    _temp_734 = np.nan
    _temp_735 = np.nan
    _temp_736 = np.nan
    _temp_737 = np.nan
    _temp_738 = np.nan
    _temp_739 = np.nan
    _temp_740 = np.nan
    _temp_741 = np.nan
    _temp_742 = np.nan
    _temp_743 = np.nan
    _temp_744 = np.nan
    _temp_745 = np.nan
    _temp_746 = np.nan
    _temp_747 = np.nan
    _temp_748 = np.nan
    _temp_749 = np.nan
    _temp_750 = np.nan
    _temp_751 = np.nan
    _temp_752 = np.nan
    _temp_753 = np.nan
    _temp_754 = np.nan
    _temp_755 = np.nan
    _temp_756 = np.nan
    _temp_757 = np.nan
    _temp_758 = np.nan
    _temp_759 = np.nan
    _temp_760 = np.nan
    _temp_761 = np.nan
    _temp_762 = np.nan
    _temp_763 = np.nan
    _temp_764 = np.nan
    _temp_765 = np.nan
    _temp_766 = np.nan
    _temp_767 = np.nan
    _temp_768 = np.nan
    _temp_769 = np.nan
    _temp_770 = np.nan
    _temp_771 = np.nan
    _temp_772 = np.nan
    _temp_773 = np.nan
    _temp_774 = np.nan
    _temp_775 = np.nan
    _temp_776 = np.nan
    _temp_777 = np.nan
    _temp_778 = np.nan
    _temp_779 = np.nan
    _temp_780 = np.nan
    _temp_781 = np.nan
    _temp_782 = np.nan
    _temp_783 = np.nan
    _temp_784 = np.nan
    _temp_785 = np.nan
    _temp_786 = np.nan
    _temp_787 = np.nan
    _temp_788 = np.nan
    _temp_789 = np.nan
    _temp_790 = np.nan
    _temp_791 = np.nan
    _temp_792 = np.nan
    _temp_793 = np.nan
    _temp_794 = np.nan
    _temp_795 = np.nan
    _temp_796 = np.nan
    _temp_797 = np.nan
    _temp_798 = np.nan
    _temp_799 = np.nan
    _temp_800 = np.nan
    _temp_801 = np.nan
    _temp_802 = np.nan
    _temp_803 = np.nan
    _temp_804 = np.nan
    _temp_805 = np.nan
    _temp_806 = np.nan
    _temp_807 = np.nan
    _temp_808 = np.nan
    _temp_809 = np.nan
    _temp_810 = np.nan
    _temp_811 = np.nan
    _temp_812 = np.nan
    _temp_813 = np.nan
    _temp_814 = np.nan
    _temp_815 = np.nan
    _temp_816 = np.nan
    _temp_817 = np.nan
    _temp_818 = np.nan
    _temp_819 = np.nan
    _temp_820 = np.nan
    _temp_821 = np.nan
    _temp_822 = np.nan
    _temp_823 = np.nan
    _temp_824 = np.nan
    _temp_825 = np.nan
    _temp_826 = np.nan
    _temp_827 = np.nan
    _temp_828 = np.nan
    _temp_829 = np.nan
    _temp_830 = np.nan
    _temp_831 = np.nan
    _temp_832 = np.nan
    _temp_833 = np.nan
    _temp_834 = np.nan
    _temp_835 = np.nan
    _temp_836 = np.nan
    _temp_837 = np.nan
    _temp_838 = np.nan
    _temp_839 = np.nan
    _temp_840 = np.nan
    _temp_841 = np.nan
    _temp_842 = np.nan
    _temp_843 = np.nan
    _temp_844 = np.nan
    _temp_845 = np.nan
    _temp_846 = np.nan
    _temp_847 = np.nan
    _temp_848 = np.nan
    _temp_849 = np.nan
    _temp_850 = np.nan
    _temp_851 = np.nan
    _temp_852 = np.nan
    _temp_853 = np.nan
    _temp_854 = np.nan
    _temp_855 = np.nan
    _temp_856 = np.nan
    _temp_857 = np.nan
    _temp_858 = np.nan
    _temp_859 = np.nan
    _temp_860 = np.nan
    _temp_861 = np.nan
    _temp_862 = np.nan
    _temp_863 = np.nan
    _temp_864 = np.nan
    _temp_865 = np.nan
    _temp_866 = np.nan
    _temp_867 = np.nan
    _temp_868 = np.nan
    _temp_869 = np.nan
    _temp_870 = np.nan
    _temp_871 = np.nan
    _temp_872 = np.nan
    _temp_873 = np.nan
    _temp_874 = np.nan
    _temp_875 = np.nan
    _temp_876 = np.nan
    _temp_877 = np.nan
    _temp_878 = np.nan
    _temp_879 = np.nan
    _temp_880 = np.nan
    _temp_881 = np.nan
    _temp_882 = np.nan
    _temp_883 = np.nan
    _temp_884 = np.nan
    _temp_885 = np.nan
    _temp_886 = np.nan
    _temp_887 = np.nan
    _temp_888 = np.nan
    _temp_889 = np.nan
    _temp_890 = np.nan
    _temp_891 = np.nan
    _temp_892 = np.nan
    _temp_893 = np.nan
    _temp_894 = np.nan
    _temp_895 = np.nan
    _temp_896 = np.nan
    _temp_897 = np.nan
    _temp_898 = np.nan
    _temp_899 = np.nan
    _temp_900 = np.nan
    _temp_901 = np.nan
    _temp_902 = np.nan
    _temp_903 = np.nan
    _temp_904 = np.nan
    _temp_905 = np.nan
    _temp_906 = np.nan
    _temp_907 = np.nan
    _temp_908 = np.nan
    _temp_909 = np.nan
    _temp_910 = np.nan
    _temp_911 = np.nan
    _temp_912 = np.nan
    _temp_913 = np.nan
    _temp_914 = np.nan
    _temp_915 = np.nan
    _temp_916 = np.nan
    _temp_917 = np.nan
    _temp_918 = np.nan
    _temp_919 = np.nan
    _temp_920 = np.nan
    _temp_921 = np.nan
    _temp_922 = np.nan
    _temp_923 = np.nan
    _temp_924 = np.nan
    _temp_925 = np.nan
    _temp_926 = np.nan
    _temp_927 = np.nan
    _temp_928 = np.nan
    _temp_929 = np.nan
    _temp_930 = np.nan
    _temp_931 = np.nan
    _temp_932 = np.nan
    _temp_933 = np.nan
    _temp_934 = np.nan
    _temp_935 = np.nan
    _temp_936 = np.nan
    _temp_937 = np.nan
    _temp_938 = np.nan
    _temp_939 = np.nan
    _temp_940 = np.nan
    _temp_941 = np.nan
    _temp_942 = np.nan
    _temp_943 = np.nan
    _temp_944 = np.nan
    _temp_945 = np.nan
    _temp_946 = np.nan
    _temp_947 = np.nan
    _temp_948 = np.nan
    _temp_949 = np.nan
    _temp_950 = np.nan
    _temp_951 = np.nan
    _temp_952 = np.nan
    _temp_953 = np.nan
    _temp_954 = np.nan
    _temp_955 = np.nan
    _temp_956 = np.nan
    _temp_957 = np.nan
    _temp_958 = np.nan
    _temp_959 = np.nan
    _temp_960 = np.nan
    _temp_961 = np.nan
    _temp_962 = np.nan
    _temp_963 = np.nan
    _temp_964 = np.nan
    _temp_965 = np.nan
    _temp_966 = np.nan
    _temp_967 = np.nan
    _temp_968 = np.nan
    _temp_969 = np.nan
    _temp_970 = np.nan
    _temp_971 = np.nan
    _temp_972 = np.nan
    _temp_973 = np.nan
    _temp_974 = np.nan
    _temp_975 = np.nan
    _temp_976 = np.nan
    _temp_977 = np.nan
    _temp_978 = np.nan
    _temp_979 = np.nan
    _temp_980 = np.nan
    _temp_981 = np.nan
    _temp_982 = np.nan
    _temp_983 = np.nan
    _temp_984 = np.nan
    _temp_985 = np.nan
    _temp_986 = np.nan
    _temp_987 = np.nan
    _temp_988 = np.nan
    _temp_989 = np.nan
    _temp_990 = np.nan
    _temp_991 = np.nan
    _temp_992 = np.nan
    _temp_993 = np.nan
    _temp_994 = np.nan
    _temp_995 = np.nan
    _temp_996 = np.nan
    _temp_997 = np.nan
    _temp_998 = np.nan
    _temp_999 = np.nan
    _temp_1000 = np.nan
    _temp_1001 = np.nan
    _temp_1002 = np.nan
    _temp_1003 = np.nan
    _temp_1004 = np.nan
    _temp_1005 = np.nan
    _temp_1006 = np.nan
    _temp_1007 = np.nan
    _temp_1008 = np.nan
    _temp_1009 = np.nan
    _temp_1010 = np.nan
    _temp_1011 = np.nan
    _temp_1012 = np.nan
    _temp_1013 = np.nan
    _temp_1014 = np.nan
    _temp_1015 = np.nan
    _temp_1016 = np.nan
    _temp_1017 = np.nan
    _temp_1018 = np.nan
    _temp_1019 = np.nan
    _temp_1020 = np.nan
    _temp_1021 = np.nan
    _temp_1022 = np.nan
    _temp_1023 = np.nan
    _temp_1024 = np.nan
    _temp_1025 = np.nan
    _temp_1026 = np.nan
    _temp_1027 = np.nan
    _temp_1028 = np.nan
    _temp_1029 = np.nan
    _temp_1030 = np.nan
    _temp_1031 = np.nan
    _temp_1032 = np.nan
    _temp_1033 = np.nan
    _temp_1034 = np.nan
    _temp_1035 = np.nan
    _temp_1036 = np.nan
    _temp_1037 = np.nan
    _temp_1038 = np.nan
    _temp_1039 = np.nan
    _temp_1040 = np.nan
    _temp_1041 = np.nan
    _temp_1042 = np.nan
    _temp_1043 = np.nan
    _temp_1044 = np.nan
    _temp_1045 = np.nan
    _temp_1046 = np.nan
    _temp_1047 = np.nan
    _temp_1048 = np.nan
    _temp_1049 = np.nan
    _temp_1050 = np.nan
    _temp_1051 = np.nan
    _temp_1052 = np.nan
    _temp_1053 = np.nan
    _temp_1054 = np.nan
    _temp_1055 = np.nan
    _temp_1056 = np.nan
    _temp_1057 = np.nan
    _temp_1058 = np.nan
    _temp_1059 = np.nan
    _temp_1060 = np.nan
    _temp_1061 = np.nan
    _temp_1062 = np.nan
    _temp_1063 = np.nan
    _temp_1064 = np.nan
    _temp_1065 = np.nan
    _temp_1066 = np.nan
    _temp_1067 = np.nan
    _temp_1068 = np.nan
    _temp_1069 = np.nan
    _temp_1070 = np.nan
    _temp_1071 = np.nan
    _temp_1072 = np.nan
    _temp_1073 = np.nan
    _temp_1074 = np.nan
    _temp_1075 = np.nan
    _temp_1076 = np.nan
    _temp_1077 = np.nan
    _temp_1078 = np.nan
    _temp_1079 = np.nan
    _temp_1080 = np.nan
    _temp_1081 = np.nan
    _temp_1082 = np.nan
    _temp_1083 = np.nan
    _temp_1084 = np.nan
    _temp_1085 = np.nan
    _temp_1086 = np.nan
    _temp_1087 = np.nan
    _temp_1088 = np.nan
    _temp_1089 = np.nan
    _temp_1090 = np.nan
    _temp_1091 = np.nan
    _temp_1092 = np.nan
    _temp_1093 = np.nan
    _temp_1094 = np.nan
    _temp_1095 = np.nan
    _temp_1096 = np.nan
    _temp_1097 = np.nan
    _temp_1098 = np.nan
    _temp_1099 = np.nan
    _temp_1100 = np.nan
    _temp_1101 = np.nan
    _temp_1102 = np.nan
    _temp_1103 = np.nan
    _temp_1104 = np.nan
    _temp_1105 = np.nan
    _temp_1106 = np.nan
    _temp_1107 = np.nan
    _temp_1108 = np.nan
    _temp_1109 = np.nan
    _temp_1110 = np.nan
    _temp_1111 = np.nan
    _temp_1112 = np.nan
    _temp_1113 = np.nan
    _temp_1114 = np.nan
    _temp_1115 = np.nan
    _temp_1116 = np.nan
    _temp_1117 = np.nan
    _temp_1118 = np.nan
    _temp_1119 = np.nan
    _temp_1120 = np.nan
    _temp_1121 = np.nan
    _temp_1122 = np.nan
    _temp_1123 = np.nan
    _temp_1124 = np.nan
    _temp_1125 = np.nan
    _temp_1126 = np.nan
    _temp_1127 = np.nan
    _temp_1128 = np.nan
    _temp_1129 = np.nan
    _temp_1130 = np.nan
    _temp_1131 = np.nan
    _temp_1132 = np.nan
    _temp_1133 = np.nan
    _temp_1134 = np.nan
    _temp_1135 = np.nan
    _temp_1136 = np.nan
    _temp_1137 = np.nan
    _temp_1138 = np.nan
    _temp_1139 = np.nan
    _temp_1140 = np.nan
    _temp_1141 = np.nan
    _temp_1142 = np.nan
    _temp_1143 = np.nan
    _temp_1144 = np.nan
    _temp_1145 = np.nan
    _temp_1146 = np.nan
    _temp_1147 = np.nan
    _temp_1148 = np.nan
    _temp_1149 = np.nan
    _temp_1150 = np.nan
    _temp_1151 = np.nan
    _temp_1152 = np.nan
    _temp_1153 = np.nan
    _temp_1154 = np.nan
    _temp_1155 = np.nan
    _temp_1156 = np.nan
    _temp_1157 = np.nan
    _temp_1158 = np.nan
    _temp_1159 = np.nan
    _temp_1160 = np.nan
    _temp_1161 = np.nan
    _temp_1162 = np.nan
    _temp_1163 = np.nan
    _temp_1164 = np.nan
    _temp_1165 = np.nan
    _temp_1166 = np.nan
    _temp_1167 = np.nan
    _temp_1168 = np.nan
    _temp_1169 = np.nan
    _temp_1170 = np.nan
    _temp_1171 = np.nan
    _temp_1172 = np.nan
    _temp_1173 = np.nan
    _temp_1174 = np.nan
    _temp_1175 = np.nan
    _temp_1176 = np.nan
    _temp_1177 = np.nan
    _temp_1178 = np.nan
    _temp_1179 = np.nan
    _temp_1180 = np.nan
    _temp_1181 = np.nan
    _temp_1182 = np.nan
    _temp_1183 = np.nan
    _temp_1184 = np.nan
    _temp_1185 = np.nan
    _temp_1186 = np.nan
    _temp_1187 = np.nan
    _temp_1188 = np.nan
    _temp_1189 = np.nan
    _temp_1190 = np.nan
    _temp_1191 = np.nan
    _temp_1192 = np.nan
    _temp_1193 = np.nan
    _temp_1194 = np.nan
    _temp_1195 = np.nan
    _temp_1196 = np.nan
    _temp_1197 = np.nan
    _temp_1198 = np.nan
    _temp_1199 = np.nan
    _temp_1200 = np.nan
    _temp_1201 = np.nan
    _temp_1202 = np.nan
    _temp_1203 = np.nan
    _temp_1204 = np.nan
    _temp_1205 = np.nan
    _temp_1206 = np.nan
    _temp_1207 = np.nan
    _temp_1208 = np.nan
    _temp_1209 = np.nan
    _temp_1210 = np.nan
    _temp_1211 = np.nan
    _temp_1212 = np.nan
    _temp_1213 = np.nan
    _temp_1214 = np.nan
    _temp_1215 = np.nan
    _temp_1216 = np.nan
    _temp_1217 = np.nan
    _temp_1218 = np.nan
    _temp_1219 = np.nan
    _temp_1220 = np.nan
    _temp_1221 = np.nan
    _temp_1222 = np.nan
    _temp_1223 = np.nan
    _temp_1224 = np.nan
    _temp_1225 = np.nan
    _temp_1226 = np.nan
    _temp_1227 = np.nan
    _temp_1228 = np.nan
    _temp_1229 = np.nan
    _temp_1230 = np.nan
    _temp_1231 = np.nan
    _temp_1232 = np.nan
    _temp_1233 = np.nan
    _temp_1234 = np.nan
    _temp_1235 = np.nan
    _temp_1236 = np.nan
    _temp_1237 = np.nan
    _temp_1238 = np.nan
    _temp_1239 = np.nan
    _temp_1240 = np.nan
    _temp_1241 = np.nan
    _temp_1242 = np.nan

    if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
        _temp_0 = 0
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
        _temp_0 = 1
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
        _temp_0 = 2
    elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
        _temp_0 = 3
    elif (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
        _temp_0 = 4
    WRAP_REQUIRMENT_asCode = _temp_0

    if (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
        _temp_1 = 0
    elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
        _temp_1 = 1
    elif (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
        _temp_1 = 2
    elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
        _temp_1 = 3
    elif (indata[u"SPEC"] == u"MIL P 50884E"):
        _temp_1 = 4
    elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
        _temp_1 = 5
    elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
        _temp_1 = 6
    elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
        _temp_1 = 7
    SPEC_asCode = _temp_1

    if (indata[u"SEL_PLT"] == u"NO"):
        _temp_2 = 0
    elif (indata[u"SEL_PLT"] == u"YES"):
        _temp_2 = 1
    SEL_PLT_asCode = _temp_2

    if (indata[u"SAP_FAMILY_GROUP"] == u"GLASS EPOXY"):
        _temp_3 = 0
    elif (indata[u"SAP_FAMILY_GROUP"] == u"POLYAMID"):
        _temp_3 = 1
    elif (indata[u"SAP_FAMILY_GROUP"] == u"CERAMIC"):
        _temp_3 = 2
    SAP_FAMILY_GROUP_asCode = _temp_3

    if (indata[u"ROUTING_PHASE"] == u"HOLE"):
        _temp_4 = 0
    elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
        _temp_4 = 1
    elif (indata[u"ROUTING_PHASE"] == u"NONE"):
        _temp_4 = 2
    ROUTING_PHASE_asCode = _temp_4

    if (indata[u"PASTE_TYPE"] == u"NONE"):
        _temp_5 = 0
    elif (indata[u"PASTE_TYPE"] == u"THROUGH"):
        _temp_5 = 1
    elif (indata[u"PASTE_TYPE"] == u"LASER"):
        _temp_5 = 2
    elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
        _temp_5 = 3
    PASTE_TYPE_asCode = _temp_5

    if (indata[u"PASTE_APPLY"] == u"NONE"):
        _temp_6 = 0
    elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
        _temp_6 = 1
    PASTE_APPLY_asCode = _temp_6

    if (indata[u"HATS_COUPON_TYPE"] == u"EXTERNAL"):
        _temp_7 = 0
    elif (indata[u"HATS_COUPON_TYPE"] == u"NONE"):
        _temp_7 = 1
    HATS_COUPON_TYPE_asCode = _temp_7

    if (indata[u"FINISH_PS"] == u"CHM_TIN"):
        _temp_8 = 0
    elif (indata[u"FINISH_PS"] == u"CHM_GOLD"):
        _temp_8 = 1
    elif (indata[u"FINISH_PS"] == u"TIN_LEAD"):
        _temp_8 = 2
    elif (indata[u"FINISH_PS"] == u"ENEPIG"):
        _temp_8 = 3
    elif (indata[u"FINISH_PS"] == u"ELEC_TIN"):
        _temp_8 = 4
    elif (indata[u"FINISH_PS"] == u"CHM_SILV"):
        _temp_8 = 5
    elif (indata[u"FINISH_PS"] == u"FULL_SGLD"):
        _temp_8 = 6
    elif (indata[u"FINISH_PS"] == u"FULL_HGLD"):
        _temp_8 = 7
    elif (indata[u"FINISH_PS"] == u"NONE"):
        _temp_8 = 8
    elif (indata[u"FINISH_PS"] == u"HAL"):
        _temp_8 = 9
    FINISH_PS_asCode = _temp_8

    if (indata[u"FINISH_CS"] == u"CHM_TIN"):
        _temp_9 = 0
    elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
        _temp_9 = 1
    elif (indata[u"FINISH_CS"] == u"ENEPIG"):
        _temp_9 = 2
    elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
        _temp_9 = 3
    elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
        _temp_9 = 4
    elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
        _temp_9 = 5
    elif (indata[u"FINISH_CS"] == u"NONE"):
        _temp_9 = 6
    elif (indata[u"FINISH_CS"] == u"HAL"):
        _temp_9 = 7
    FINISH_CS_asCode = _temp_9

    if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
        _temp_10 = 0
    elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
        _temp_10 = 1
    elif (indata[u"FAI_TYPE"] == u"RC-06"):
        _temp_10 = 2
    elif (indata[u"FAI_TYPE"] == u"RC-28"):
        _temp_10 = 3
    elif (indata[u"FAI_TYPE"] == u"NONE"):
        _temp_10 = 4
    elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
        _temp_10 = 5
    FAI_TYPE_asCode = _temp_10

    if (indata[u"EXIST_LASER"] == u"NO"):
        _temp_11 = 0
    elif (indata[u"EXIST_LASER"] == u"YES"):
        _temp_11 = 1
    EXIST_LASER_asCode = _temp_11

    if (indata[u"ETCHBACK"] == u"NO"):
        _temp_12 = 0
    elif (indata[u"ETCHBACK"] == u"YES"):
        _temp_12 = 1
    ETCHBACK_asCode = _temp_12

    if (indata[u"CAM_LAYUP"] == u"CORE"):
        _temp_13 = 0
    elif (indata[u"CAM_LAYUP"] == u"FOIL"):
        _temp_13 = 1
    CAM_LAYUP_asCode = _temp_13

    if (indata[u"BOARD_TYPE"] == u"GENERAL"):
        _temp_14 = 0
    elif (indata[u"BOARD_TYPE"] == u"COMMERCIAL"):
        _temp_14 = 1
    elif (indata[u"BOARD_TYPE"] == u"MILITARY"):
        _temp_14 = 2
    elif (indata[u"BOARD_TYPE"] == u"SPACE"):
        _temp_14 = 3
    BOARD_TYPE_asCode = _temp_14

    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_15 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_15 = -1
    else:
        _temp_15 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_16 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_16 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_16 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_16 = -1
    else:
        _temp_16 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_17 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_17 = -1
    else:
        _temp_17 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_18 = -63023.6723150686
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_18 = 63023.6723150686
    else:
        _temp_18 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_19 = -9245.01359051287
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_19 = 9245.01359051287
    else:
        _temp_19 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_20 = -5470.37185450524
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_20 = 5470.37185450524
    else:
        _temp_20 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_21 = -146.43569565517
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_21 = 146.43569565517
    else:
        _temp_21 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_22 = -59.9063725960223
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_22 = 59.9063725960223
    else:
        _temp_22 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_23 = -0.397055710199518
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_23 = 0.397055710199518
    else:
        _temp_23 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_24 = 9.73069646920999
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_24 = -9.73069646920999
    else:
        _temp_24 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_25 = 54.5797357235991
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_25 = -54.5797357235991
    else:
        _temp_25 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_26 = 76.3906222253119
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_26 = -76.3906222253119
    else:
        _temp_26 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_27 = 87.4997823609086
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_27 = -87.4997823609086
    else:
        _temp_27 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_28 = 223.954819594006
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_28 = -223.954819594006
    else:
        _temp_28 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_29 = 1821.52366640273
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_29 = -1821.52366640273
    else:
        _temp_29 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_30 = 15845.5456528034
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_30 = -15845.5456528034
    else:
        _temp_30 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_31 = 31490.3449813966
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_31 = -31490.3449813966
    else:
        _temp_31 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_32 = -5426.4585268207
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_32 = 5426.4585268207
    else:
        _temp_32 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_33 = -133.953229249356
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_33 = 133.953229249356
    else:
        _temp_33 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_34 = 55.1691272289954
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_34 = -55.1691272289954
    else:
        _temp_34 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_35 = 201.651262531364
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_35 = -201.651262531364
    else:
        _temp_35 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_36 = 388.361227802946
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_36 = -388.361227802946
    else:
        _temp_36 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_37 = 8604.32968952535
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_37 = -8604.32968952535
    else:
        _temp_37 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_38 = 19598.5470266258
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_38 = -19598.5470266258
    else:
        _temp_38 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_39 = 73346.6992402494
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_39 = -73346.6992402494
    else:
        _temp_39 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_40 = 131644.409301376
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_40 = -131644.409301376
    else:
        _temp_40 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_41 = 146719.903321907
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_41 = -146719.903321907
    else:
        _temp_41 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_42 = -59981.9087504654
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_42 = 59981.9087504654
    else:
        _temp_42 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_43 = -34270.347603779
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_43 = 34270.347603779
    else:
        _temp_43 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_44 = -29231.3561996495
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_44 = 29231.3561996495
    else:
        _temp_44 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_45 = -1640.50351036815
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_45 = 1640.50351036815
    else:
        _temp_45 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_46 = -1441.478140741
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_46 = 1441.478140741
    else:
        _temp_46 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_47 = -806.953771790836
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_47 = 806.953771790836
    else:
        _temp_47 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_48 = -610.361625404363
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_48 = 610.361625404363
    else:
        _temp_48 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_49 = -276.836311959008
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_49 = 276.836311959008
    else:
        _temp_49 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_50 = -246.523832520545
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_50 = 246.523832520545
    else:
        _temp_50 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_51 = -228.197985389096
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_51 = 228.197985389096
    else:
        _temp_51 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_52 = -169.822528792366
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_52 = 169.822528792366
    else:
        _temp_52 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_53 = -102.567981879458
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_53 = 102.567981879458
    else:
        _temp_53 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_54 = -56.348566153616
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_54 = 56.348566153616
    else:
        _temp_54 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_55 = -52.9567959159579
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_55 = 52.9567959159579
    else:
        _temp_55 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_56 = -49.4283855221752
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_56 = 49.4283855221752
    else:
        _temp_56 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_57 = -17.1177804199956
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_57 = 17.1177804199956
    else:
        _temp_57 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_58 = 4.67093480230917
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_58 = -4.67093480230917
    else:
        _temp_58 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_59 = 81.6793687926385
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_59 = -81.6793687926385
    else:
        _temp_59 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_60 = 119.512694227159
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_60 = -119.512694227159
    else:
        _temp_60 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_61 = 195.823148187892
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_61 = -195.823148187892
    else:
        _temp_61 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_62 = 221.829278213443
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_62 = -221.829278213443
    else:
        _temp_62 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_63 = 224.347407096466
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_63 = -224.347407096466
    else:
        _temp_63 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_64 = 319.705881959852
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_64 = -319.705881959852
    else:
        _temp_64 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_65 = 369.537426782285
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_65 = -369.537426782285
    else:
        _temp_65 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_66 = 748.11095144788
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_66 = -748.11095144788
    else:
        _temp_66 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_67 = 771.319934677943
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_67 = -771.319934677943
    else:
        _temp_67 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_68 = 784.222158530197
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_68 = -784.222158530197
    else:
        _temp_68 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_69 = 1371.99818540677
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_69 = -1371.99818540677
    else:
        _temp_69 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_70 = 2576.036135878
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_70 = -2576.036135878
    else:
        _temp_70 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_71 = 17356.6162125706
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_71 = -17356.6162125706
    else:
        _temp_71 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_72 = 115607.707937587
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_72 = -115607.707937587
    else:
        _temp_72 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_74 = 51.9226532858628
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_74 = -51.9226532858628
        else:
            _temp_74 = np.nan
        _temp_73 = _temp_74
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_75 = -51.9226532858628
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_75 = 51.9226532858628
        else:
            _temp_75 = np.nan
        _temp_73 = _temp_75
    else:
        _temp_73 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_77 = 422.912930824356
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_77 = -422.912930824356
        else:
            _temp_77 = np.nan
        _temp_76 = _temp_77
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_78 = -422.912930824356
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_78 = 422.912930824356
        else:
            _temp_78 = np.nan
        _temp_76 = _temp_78
    else:
        _temp_76 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_80 = 876.941357550638
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_80 = -876.941357550638
        else:
            _temp_80 = np.nan
        _temp_79 = _temp_80
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_81 = -876.941357550638
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_81 = 876.941357550638
        else:
            _temp_81 = np.nan
        _temp_79 = _temp_81
    else:
        _temp_79 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_83 = 1188.90139170705
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_83 = -1188.90139170705
        else:
            _temp_83 = np.nan
        _temp_82 = _temp_83
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_84 = -1188.90139170705
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_84 = 1188.90139170705
        else:
            _temp_84 = np.nan
        _temp_82 = _temp_84
    else:
        _temp_82 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_86 = 1191.84863062963
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_86 = -1191.84863062963
        else:
            _temp_86 = np.nan
        _temp_85 = _temp_86
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_87 = -1191.84863062963
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_87 = 1191.84863062963
        else:
            _temp_87 = np.nan
        _temp_85 = _temp_87
    else:
        _temp_85 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_88 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_88 = -1
    else:
        _temp_88 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_89 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_89 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_89 = -1
    else:
        _temp_89 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_90 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_90 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_90 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_90 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_90 = -1
    else:
        _temp_90 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_91 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_91 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_91 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_91 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_91 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_91 = -1
    else:
        _temp_91 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_92 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_92 = -1
    else:
        _temp_92 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_93 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_93 = -1
    else:
        _temp_93 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_94 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_94 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_94 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_94 = -1
    else:
        _temp_94 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_95 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_95 = -1
    else:
        _temp_95 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_96 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_96 = -1
    else:
        _temp_96 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_97 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_97 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_97 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_97 = -1
    else:
        _temp_97 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_98 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_98 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_98 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_98 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_98 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_98 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_98 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_98 = -1
    else:
        _temp_98 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_99 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_99 = -1
    else:
        _temp_99 = 0
    if (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_100 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_100 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_100 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_100 = -1
    else:
        _temp_100 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_101 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_101 = -1
    else:
        _temp_101 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_102 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_102 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_102 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_102 = -1
    else:
        _temp_102 = 0
    if (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_103 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_103 = -1
    else:
        _temp_103 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_104 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_104 = -1
    else:
        _temp_104 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_105 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_105 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_105 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_105 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_105 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_105 = -1
    else:
        _temp_105 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_106 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_106 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_106 = -1
    else:
        _temp_106 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_107 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_107 = -1
    else:
        _temp_107 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_108 = -49950.6934179396
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_108 = 49950.6934179396
    else:
        _temp_108 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_109 = -25264.1777983978
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_109 = 25264.1777983978
    else:
        _temp_109 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_110 = -668.843817682238
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_110 = 668.843817682238
    else:
        _temp_110 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_111 = -290.754740949048
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_111 = 290.754740949048
    else:
        _temp_111 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_112 = -21.4496856300177
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_112 = 21.4496856300177
    else:
        _temp_112 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_113 = 0.696154210411843
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_113 = -0.696154210411843
    else:
        _temp_113 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_114 = 5.48723548695342
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_114 = -5.48723548695342
    else:
        _temp_114 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_115 = 273.492741297905
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_115 = -273.492741297905
    else:
        _temp_115 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_116 = 1961.99094924174
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_116 = -1961.99094924174
    else:
        _temp_116 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_117 = 3871.15951649986
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_117 = -3871.15951649986
    else:
        _temp_117 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_118 = 263155.716813372
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_118 = -263155.716813372
    else:
        _temp_118 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_119 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_119 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_119 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_119 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_119 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_119 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_119 = -1
    else:
        _temp_119 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_120 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_120 = -1
    else:
        _temp_120 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_121 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_121 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_121 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_121 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_121 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_121 = -1
    else:
        _temp_121 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_122 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_122 = -1
    else:
        _temp_122 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_123 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_123 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_123 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_123 = -1
    else:
        _temp_123 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_124 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_124 = -1
    else:
        _temp_124 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_125 = -72192.8834625165
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_125 = 72192.8834625165
    else:
        _temp_125 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_126 = -33496.1848983975
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_126 = 33496.1848983975
    else:
        _temp_126 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_127 = -17420.4154899805
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_127 = 17420.4154899805
    else:
        _temp_127 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_128 = -11305.581806905
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_128 = 11305.581806905
    else:
        _temp_128 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_129 = -3816.4363092026
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_129 = 3816.4363092026
    else:
        _temp_129 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_130 = -2534.59950442392
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_130 = 2534.59950442392
    else:
        _temp_130 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_131 = -2445.34598082398
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_131 = 2445.34598082398
    else:
        _temp_131 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_132 = -616.269620807448
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_132 = 616.269620807448
    else:
        _temp_132 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_133 = -588.733483979973
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_133 = 588.733483979973
    else:
        _temp_133 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_134 = -379.924055641856
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_134 = 379.924055641856
    else:
        _temp_134 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_135 = -327.859891676219
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_135 = 327.859891676219
    else:
        _temp_135 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_136 = -324.145071209359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_136 = 324.145071209359
    else:
        _temp_136 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_137 = -273.998552730648
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_137 = 273.998552730648
    else:
        _temp_137 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_138 = -272.817403060359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_138 = 272.817403060359
    else:
        _temp_138 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_139 = -193.108587018827
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_139 = 193.108587018827
    else:
        _temp_139 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_140 = -144.952995118765
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_140 = 144.952995118765
    else:
        _temp_140 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_141 = -74.6074642952747
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_141 = 74.6074642952747
    else:
        _temp_141 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_142 = -68.3396030037034
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_142 = 68.3396030037034
    else:
        _temp_142 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_143 = -48.2998911272728
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_143 = 48.2998911272728
    else:
        _temp_143 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_144 = -33.3296519361668
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_144 = 33.3296519361668
    else:
        _temp_144 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_145 = -28.9928182095449
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_145 = 28.9928182095449
    else:
        _temp_145 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_146 = 301.688165763633
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_146 = -301.688165763633
    else:
        _temp_146 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_147 = 337.488853939305
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_147 = -337.488853939305
    else:
        _temp_147 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_148 = 461.591318227007
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_148 = -461.591318227007
    else:
        _temp_148 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_149 = 565.635471219289
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_149 = -565.635471219289
    else:
        _temp_149 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_150 = 637.818635237911
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_150 = -637.818635237911
    else:
        _temp_150 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_151 = 646.597812476093
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_151 = -646.597812476093
    else:
        _temp_151 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_152 = 722.186599345945
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_152 = -722.186599345945
    else:
        _temp_152 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_153 = 1099.38932541589
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_153 = -1099.38932541589
    else:
        _temp_153 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_154 = 1847.26239779566
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_154 = -1847.26239779566
    else:
        _temp_154 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_155 = 1945.96837698593
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_155 = -1945.96837698593
    else:
        _temp_155 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_156 = 3656.79888851197
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_156 = -3656.79888851197
    else:
        _temp_156 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_157 = 4142.86477006572
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_157 = -4142.86477006572
    else:
        _temp_157 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_158 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_158 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_158 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_158 = -1
    else:
        _temp_158 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_159 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_159 = -1
    else:
        _temp_159 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_160 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_160 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_160 = -1
    else:
        _temp_160 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_161 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_161 = -1
    else:
        _temp_161 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_162 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_162 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_162 = -1
    else:
        _temp_162 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_163 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_163 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_163 = -1
    else:
        _temp_163 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_164 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_164 = -1
    else:
        _temp_164 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_165 = -130899.640549331
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_165 = 130899.640549331
    else:
        _temp_165 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_166 = -65439.0556712152
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_166 = 65439.0556712152
    else:
        _temp_166 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_167 = -17903.9655408476
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_167 = 17903.9655408476
    else:
        _temp_167 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_168 = -8986.60556804912
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_168 = 8986.60556804912
    else:
        _temp_168 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_169 = 18.6968529591803
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_169 = -18.6968529591803
    else:
        _temp_169 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_170 = 144.608294699458
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_170 = -144.608294699458
    else:
        _temp_170 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_171 = 218.292052430283
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_171 = -218.292052430283
    else:
        _temp_171 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_172 = 523.584463875849
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_172 = -523.584463875849
    else:
        _temp_172 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_173 = 4454.90869191414
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_173 = -4454.90869191414
    else:
        _temp_173 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_174 = 232894.294438186
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_174 = -232894.294438186
    else:
        _temp_174 = np.nan
    if (jmp.numeq(SPEC_asCode, 0)):
        _temp_175 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_175 = -1
    else:
        _temp_175 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_176 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_176 = -1
    else:
        _temp_176 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_177 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_177 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_177 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_177 = -1
    else:
        _temp_177 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_178 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_178 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_178 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_178 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_178 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_178 = -1
    else:
        _temp_178 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_179 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_179 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_179 = -1
    else:
        _temp_179 = np.nan
    if (jmp.numeq(SPEC_asCode, 6)):
        _temp_180 = 1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_180 = -1
    else:
        _temp_180 = 0
    if (jmp.numeq(SPEC_asCode, 4)):
        _temp_181 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_181 = -1
    else:
        _temp_181 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_182 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_182 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_182 = -1
    else:
        _temp_182 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_183 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_183 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_183 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_183 = -1
    else:
        _temp_183 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_184 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_184 = -1
    else:
        _temp_184 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_185 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_185 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_185 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_185 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_185 = -1
    else:
        _temp_185 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_186 = -56.348566153616
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_186 = 56.348566153616
    else:
        _temp_186 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_187 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_187 = -1
    else:
        _temp_187 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_188 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_188 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_188 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_188 = -1
    else:
        _temp_188 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_189 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_189 = -1
    else:
        _temp_189 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_190 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_190 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_190 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_190 = -1
    else:
        _temp_190 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_191 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_191 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_191 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_191 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_191 = -1
    else:
        _temp_191 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_192 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_192 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_192 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_192 = -1
    else:
        _temp_192 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_193 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_193 = -1
    else:
        _temp_193 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_194 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_194 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_194 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_194 = -1
    else:
        _temp_194 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_195 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_195 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_195 = -1
    else:
        _temp_195 = 0
    if (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_196 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_196 = -1
    else:
        _temp_196 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_197 = 5.48723548695342
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_197 = -5.48723548695342
    else:
        _temp_197 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_198 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_198 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_198 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_198 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_198 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_198 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_198 = -1
    else:
        _temp_198 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_199 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_199 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_199 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_199 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_199 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_199 = -1
    else:
        _temp_199 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_200 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_200 = -1
    else:
        _temp_200 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_201 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_201 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_201 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_201 = -1
    else:
        _temp_201 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_202 = -327.859891676219
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_202 = 327.859891676219
    else:
        _temp_202 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_203 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_203 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_203 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_203 = -1
    else:
        _temp_203 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_204 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_204 = -1
    else:
        _temp_204 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_205 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_205 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_205 = -1
    else:
        _temp_205 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_206 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_206 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_206 = -1
    else:
        _temp_206 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_207 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_207 = -1
    else:
        _temp_207 = 0
    if (jmp.numeq(SPEC_asCode, 0)):
        _temp_208 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_208 = -1
    else:
        _temp_208 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_209 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_209 = -1
    else:
        _temp_209 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_210 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_210 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_210 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_210 = -1
    else:
        _temp_210 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_211 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_211 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_211 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_211 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_211 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_211 = -1
    else:
        _temp_211 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_212 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_212 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_212 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_212 = -1
    else:
        _temp_212 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_213 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_213 = -1
    else:
        _temp_213 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_214 = -246.523832520545
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_214 = 246.523832520545
    else:
        _temp_214 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_215 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_215 = -1
    else:
        _temp_215 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_216 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_216 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_216 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_216 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_216 = -1
    else:
        _temp_216 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_217 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_217 = -1
    else:
        _temp_217 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_218 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_218 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_218 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_218 = -1
    else:
        _temp_218 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_219 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_219 = -1
    else:
        _temp_219 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_220 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_220 = -1
    else:
        _temp_220 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_221 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_221 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_221 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_221 = -1
    else:
        _temp_221 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_222 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_222 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_222 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_222 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_222 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_222 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_222 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_222 = -1
    else:
        _temp_222 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_223 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_223 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_223 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_223 = -1
    else:
        _temp_223 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_224 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_224 = -1
    else:
        _temp_224 = 0
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_225 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_225 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_225 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_225 = -1
    else:
        _temp_225 = 0
    if (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_226 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_226 = -1
    else:
        _temp_226 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_227 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_227 = -1
    else:
        _temp_227 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_228 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_228 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_228 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_228 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_228 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_228 = -1
    else:
        _temp_228 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_229 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_229 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_229 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_229 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_229 = -1
    else:
        _temp_229 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_230 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_230 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_230 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_230 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_230 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_230 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_230 = -1
    else:
        _temp_230 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_231 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_231 = -1
    else:
        _temp_231 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_232 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_232 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_232 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_232 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_232 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_232 = -1
    else:
        _temp_232 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_233 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_233 = -1
    else:
        _temp_233 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_234 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_234 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_234 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_234 = -1
    else:
        _temp_234 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_235 = 722.186599345945
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_235 = -722.186599345945
    else:
        _temp_235 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_236 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_236 = -1
    else:
        _temp_236 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_237 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_237 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_237 = -1
    else:
        _temp_237 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_238 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_238 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_238 = -1
    else:
        _temp_238 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_239 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_239 = -1
    else:
        _temp_239 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_240 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_240 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_240 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_240 = -1
    else:
        _temp_240 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_241 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_241 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_241 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_241 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_241 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_241 = -1
    else:
        _temp_241 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_242 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_242 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_242 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_242 = -1
    else:
        _temp_242 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_243 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_243 = -1
    else:
        _temp_243 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_244 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_244 = -1
    else:
        _temp_244 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_245 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_245 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_245 = -1
    else:
        _temp_245 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_246 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_246 = -1
    else:
        _temp_246 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_247 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_247 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_247 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_247 = -1
    else:
        _temp_247 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_248 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_248 = -1
    else:
        _temp_248 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_249 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_249 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_249 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_249 = -1
    else:
        _temp_249 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_250 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_250 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_250 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_250 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_250 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_250 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_250 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_250 = -1
    else:
        _temp_250 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_251 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_251 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_251 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_251 = -1
    else:
        _temp_251 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_252 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_252 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_252 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_252 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_252 = -1
    else:
        _temp_252 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_253 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_253 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_253 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_253 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_253 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_253 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_253 = -1
    else:
        _temp_253 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_254 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_254 = -1
    else:
        _temp_254 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_255 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_255 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_255 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_255 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_255 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_255 = -1
    else:
        _temp_255 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_256 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_256 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_256 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_256 = -1
    else:
        _temp_256 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_257 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_257 = -1
    else:
        _temp_257 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_258 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_258 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_258 = -1
    else:
        _temp_258 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_259 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_259 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_259 = -1
    else:
        _temp_259 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_260 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_260 = -1
    else:
        _temp_260 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_261 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_261 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_261 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_261 = -1
    else:
        _temp_261 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_262 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_262 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_262 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_262 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_262 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_262 = -1
    else:
        _temp_262 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_263 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_263 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_263 = -1
    else:
        _temp_263 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_264 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_264 = -1
    else:
        _temp_264 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_265 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_265 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_265 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_265 = -1
    else:
        _temp_265 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_266 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_266 = -1
    else:
        _temp_266 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_267 = 81.6793687926385
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_267 = -81.6793687926385
    else:
        _temp_267 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_268 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_268 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_268 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_268 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_268 = -1
    else:
        _temp_268 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_269 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_269 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_269 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_269 = -1
    else:
        _temp_269 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_270 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_270 = -1
    else:
        _temp_270 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_271 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_271 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_271 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_271 = -1
    else:
        _temp_271 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_272 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_272 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_272 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_272 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_272 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_272 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_272 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_272 = -1
    else:
        _temp_272 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_273 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_273 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_273 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_273 = -1
    else:
        _temp_273 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_274 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_274 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_274 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_274 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_274 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_274 = -1
    else:
        _temp_274 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_275 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_275 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_275 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_275 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_275 = -1
    else:
        _temp_275 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_276 = -21.4496856300177
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_276 = 21.4496856300177
    else:
        _temp_276 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_277 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_277 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_277 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_277 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_277 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_277 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_277 = -1
    else:
        _temp_277 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_278 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_278 = -1
    else:
        _temp_278 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_279 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_279 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_279 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_279 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_279 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_279 = -1
    else:
        _temp_279 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_280 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_280 = -1
    else:
        _temp_280 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_281 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_281 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_281 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_281 = -1
    else:
        _temp_281 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 0)):
        _temp_282 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_282 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_282 = -1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_282 = -1
    else:
        _temp_282 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_283 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_283 = -1
    else:
        _temp_283 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_284 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_284 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_284 = -1
    else:
        _temp_284 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_285 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_285 = -1
    else:
        _temp_285 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_286 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_286 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_286 = -1
    else:
        _temp_286 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_287 = 18.6968529591803
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_287 = -18.6968529591803
    else:
        _temp_287 = np.nan
    if (jmp.numeq(SPEC_asCode, 0)):
        _temp_288 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_288 = -1
    else:
        _temp_288 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_289 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_289 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_289 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_289 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_289 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_289 = -1
    else:
        _temp_289 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_290 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_290 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_290 = -1
    else:
        _temp_290 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_291 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_291 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_291 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_291 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_291 = -1
    else:
        _temp_291 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_292 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_292 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_292 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_292 = -1
    else:
        _temp_292 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_293 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_293 = -1
    else:
        _temp_293 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_294 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_294 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_294 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_294 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_294 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_294 = -1
    else:
        _temp_294 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_295 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_295 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_295 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_295 = -1
    else:
        _temp_295 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_296 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_296 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_296 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_296 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_296 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_296 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_296 = -1
    else:
        _temp_296 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_297 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_297 = -1
    else:
        _temp_297 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_298 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_298 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_298 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_298 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_298 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_298 = -1
    else:
        _temp_298 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_299 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_299 = -1
    else:
        _temp_299 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_300 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_300 = -1
    else:
        _temp_300 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_301 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_301 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_301 = -1
    else:
        _temp_301 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_302 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_302 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_302 = -1
    else:
        _temp_302 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_303 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_303 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_303 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_303 = -1
    else:
        _temp_303 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_304 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_304 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_304 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_304 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_304 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_304 = -1
    else:
        _temp_304 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_305 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_305 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_305 = -1
    else:
        _temp_305 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_306 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_306 = -1
    else:
        _temp_306 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_307 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_307 = -1
    else:
        _temp_307 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_308 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_308 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_308 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_308 = -1
    else:
        _temp_308 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_309 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_309 = -1
    else:
        _temp_309 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_310 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_310 = -1
    else:
        _temp_310 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_311 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_311 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_311 = -1
    else:
        _temp_311 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_312 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_312 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_312 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_312 = -1
    else:
        _temp_312 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_313 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_313 = -1
    else:
        _temp_313 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_314 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_314 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_314 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_314 = -1
    else:
        _temp_314 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_315 = 54.5797357235991
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_315 = -54.5797357235991
    else:
        _temp_315 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_316 = -806.953771790836
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_316 = 806.953771790836
    else:
        _temp_316 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_317 = -276.836311959008
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_317 = 276.836311959008
    else:
        _temp_317 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_318 = 195.823148187892
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_318 = -195.823148187892
    else:
        _temp_318 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_319 = 224.347407096466
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_319 = -224.347407096466
    else:
        _temp_319 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_320 = 748.11095144788
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_320 = -748.11095144788
    else:
        _temp_320 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_321 = 1371.99818540677
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_321 = -1371.99818540677
    else:
        _temp_321 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_322 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_322 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_322 = -1
    else:
        _temp_322 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_323 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_323 = -1
    else:
        _temp_323 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_324 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_324 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_324 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_324 = -1
    else:
        _temp_324 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_325 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_325 = -1
    else:
        _temp_325 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_326 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_326 = -1
    else:
        _temp_326 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_327 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_327 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_327 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_327 = -1
    else:
        _temp_327 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_328 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_328 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_328 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_328 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_328 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_328 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_328 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_328 = -1
    else:
        _temp_328 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_329 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_329 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_329 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_329 = -1
    else:
        _temp_329 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_330 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_330 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_330 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_330 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_330 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_330 = -1
    else:
        _temp_330 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_331 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_331 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_331 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_331 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_331 = -1
    else:
        _temp_331 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_332 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_332 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_332 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_332 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_332 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_332 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_332 = -1
    else:
        _temp_332 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_333 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_333 = -1
    else:
        _temp_333 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_334 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_334 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_334 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_334 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_334 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_334 = -1
    else:
        _temp_334 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_335 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_335 = -1
    else:
        _temp_335 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_336 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_336 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_336 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_336 = -1
    else:
        _temp_336 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_337 = -3816.4363092026
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_337 = 3816.4363092026
    else:
        _temp_337 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_338 = -616.269620807448
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_338 = 616.269620807448
    else:
        _temp_338 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_339 = -588.733483979973
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_339 = 588.733483979973
    else:
        _temp_339 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_340 = -272.817403060359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_340 = 272.817403060359
    else:
        _temp_340 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_341 = 301.688165763633
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_341 = -301.688165763633
    else:
        _temp_341 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_342 = 1945.96837698593
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_342 = -1945.96837698593
    else:
        _temp_342 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_343 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_343 = -1
    else:
        _temp_343 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_344 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_344 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_344 = -1
    else:
        _temp_344 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_345 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_345 = -1
    else:
        _temp_345 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_346 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_346 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_346 = -1
    else:
        _temp_346 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_347 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_347 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_347 = -1
    else:
        _temp_347 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_348 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_348 = -1
    else:
        _temp_348 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_349 = 144.608294699458
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_349 = -144.608294699458
    else:
        _temp_349 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_350 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_350 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_350 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_350 = -1
    else:
        _temp_350 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_351 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_351 = -1
    else:
        _temp_351 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_352 = 9.73069646920999
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_352 = -9.73069646920999
    else:
        _temp_352 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_353 = -52.9567959159579
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_353 = 52.9567959159579
    else:
        _temp_353 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_354 = -49.4283855221752
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_354 = 49.4283855221752
    else:
        _temp_354 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_355 = 119.512694227159
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_355 = -119.512694227159
    else:
        _temp_355 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_357 = 51.9226532858628
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_357 = -51.9226532858628
        else:
            _temp_357 = np.nan
        _temp_356 = _temp_357
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_358 = -51.9226532858628
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_358 = 51.9226532858628
        else:
            _temp_358 = np.nan
        _temp_356 = _temp_358
    else:
        _temp_356 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_359 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_359 = -1
    else:
        _temp_359 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_360 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_360 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_360 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_360 = -1
    else:
        _temp_360 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_361 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_361 = -1
    else:
        _temp_361 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_362 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_362 = -1
    else:
        _temp_362 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_363 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_363 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_363 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_363 = -1
    else:
        _temp_363 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_364 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_364 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_364 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_364 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_364 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_364 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_364 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_364 = -1
    else:
        _temp_364 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_365 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_365 = -1
    else:
        _temp_365 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_366 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_366 = -1
    else:
        _temp_366 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_367 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_367 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_367 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_367 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_367 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_367 = -1
    else:
        _temp_367 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_368 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_368 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_368 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_368 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_368 = -1
    else:
        _temp_368 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_369 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_369 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_369 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_369 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_369 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_369 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_369 = -1
    else:
        _temp_369 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_370 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_370 = -1
    else:
        _temp_370 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_371 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_371 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_371 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_371 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_371 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_371 = -1
    else:
        _temp_371 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_372 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_372 = -1
    else:
        _temp_372 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_373 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_373 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_373 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_373 = -1
    else:
        _temp_373 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_374 = -74.6074642952747
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_374 = 74.6074642952747
    else:
        _temp_374 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_375 = -68.3396030037034
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_375 = 68.3396030037034
    else:
        _temp_375 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_376 = -28.9928182095449
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_376 = 28.9928182095449
    else:
        _temp_376 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_377 = 1847.26239779566
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_377 = -1847.26239779566
    else:
        _temp_377 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_378 = 3656.79888851197
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_378 = -3656.79888851197
    else:
        _temp_378 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_379 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_379 = -1
    else:
        _temp_379 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_380 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_380 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_380 = -1
    else:
        _temp_380 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_381 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_381 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_381 = -1
    else:
        _temp_381 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_382 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_382 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_382 = -1
    else:
        _temp_382 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_383 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_383 = -1
    else:
        _temp_383 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_384 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_384 = -1
    else:
        _temp_384 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_385 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_385 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_385 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_385 = -1
    else:
        _temp_385 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_386 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_386 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_386 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_386 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_386 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_386 = -1
    else:
        _temp_386 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_387 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_387 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_387 = -1
    else:
        _temp_387 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_388 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_388 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_388 = -1
    else:
        _temp_388 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_389 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_389 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_389 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_389 = -1
    else:
        _temp_389 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_390 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_390 = -1
    else:
        _temp_390 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_391 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_391 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_391 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_391 = -1
    else:
        _temp_391 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_392 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_392 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_392 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_392 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_392 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_392 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_392 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_392 = -1
    else:
        _temp_392 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_393 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_393 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_393 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_393 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_393 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_393 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_393 = -1
    else:
        _temp_393 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_394 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_394 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_394 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_394 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_394 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_394 = -1
    else:
        _temp_394 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_395 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_395 = -1
    else:
        _temp_395 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_396 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_396 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_396 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_396 = -1
    else:
        _temp_396 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_397 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_397 = -1
    else:
        _temp_397 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_398 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_398 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_398 = -1
    else:
        _temp_398 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_399 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_399 = -1
    else:
        _temp_399 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_400 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_400 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_400 = -1
    else:
        _temp_400 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_401 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_401 = -1
    else:
        _temp_401 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_402 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_402 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_402 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_402 = -1
    else:
        _temp_402 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_403 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_403 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_403 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_403 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_403 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_403 = -1
    else:
        _temp_403 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_404 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_404 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_404 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_404 = -1
    else:
        _temp_404 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_405 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_405 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_405 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_405 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_405 = -1
    else:
        _temp_405 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_406 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_406 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_406 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_406 = -1
    else:
        _temp_406 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_407 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_407 = -1
    else:
        _temp_407 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_408 = -0.397055710199518
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_408 = 0.397055710199518
    else:
        _temp_408 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_409 = 4.67093480230917
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_409 = -4.67093480230917
    else:
        _temp_409 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_410 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_410 = -1
    else:
        _temp_410 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_411 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_411 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_411 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_411 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_411 = -1
    else:
        _temp_411 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_412 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_412 = -1
    else:
        _temp_412 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_413 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_413 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_413 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_413 = -1
    else:
        _temp_413 = 0
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_414 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_414 = -1
    else:
        _temp_414 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_415 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_415 = -1
    else:
        _temp_415 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_416 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_416 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_416 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_416 = -1
    else:
        _temp_416 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_417 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_417 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_417 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_417 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_417 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_417 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_417 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_417 = -1
    else:
        _temp_417 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_418 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_418 = -1
    else:
        _temp_418 = 0
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_419 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_419 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_419 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_419 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_419 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_419 = -1
    else:
        _temp_419 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_420 = 0.696154210411843
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_420 = -0.696154210411843
    else:
        _temp_420 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_421 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_421 = -1
    else:
        _temp_421 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_422 = -33.3296519361668
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_422 = 33.3296519361668
    else:
        _temp_422 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_423 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_423 = -1
    else:
        _temp_423 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_424 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_424 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_424 = -1
    else:
        _temp_424 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_425 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_425 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_425 = -1
    else:
        _temp_425 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_426 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_426 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_426 = -1
    else:
        _temp_426 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_427 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_427 = -1
    else:
        _temp_427 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_428 = 784.222158530197
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_428 = -784.222158530197
    else:
        _temp_428 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_429 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_429 = -1
    else:
        _temp_429 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_430 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_430 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_430 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_430 = -1
    else:
        _temp_430 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_431 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_431 = -1
    else:
        _temp_431 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_432 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_432 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_432 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_432 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_432 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_432 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_432 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_432 = -1
    else:
        _temp_432 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_433 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_433 = -1
    else:
        _temp_433 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_434 = -668.843817682238
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_434 = 668.843817682238
    else:
        _temp_434 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_435 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_435 = -1
    else:
        _temp_435 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_436 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_436 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_436 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_436 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_436 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_436 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_436 = -1
    else:
        _temp_436 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_437 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_437 = -1
    else:
        _temp_437 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_438 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_438 = -1
    else:
        _temp_438 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_439 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_439 = -1
    else:
        _temp_439 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_440 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_440 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_440 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_440 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_440 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_440 = -1
    else:
        _temp_440 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_441 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_441 = -1
    else:
        _temp_441 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_442 = 565.635471219289
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_442 = -565.635471219289
    else:
        _temp_442 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_443 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_443 = -1
    else:
        _temp_443 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_444 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_444 = -1
    else:
        _temp_444 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_445 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_445 = -1
    else:
        _temp_445 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_446 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_446 = -1
    else:
        _temp_446 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_447 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_447 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_447 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_447 = -1
    else:
        _temp_447 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_448 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_448 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_448 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_448 = -1
    else:
        _temp_448 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_449 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_449 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_449 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_449 = -1
    else:
        _temp_449 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_450 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_450 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_450 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_450 = -1
    else:
        _temp_450 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_451 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_451 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_451 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_451 = -1
    else:
        _temp_451 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_452 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_452 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_452 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_452 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_452 = -1
    else:
        _temp_452 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_453 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_453 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_453 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_453 = -1
    else:
        _temp_453 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_454 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_454 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_454 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_454 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_454 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_454 = -1
    else:
        _temp_454 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_455 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_455 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_455 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_455 = -1
    else:
        _temp_455 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_456 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_456 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_456 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_456 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_456 = -1
    else:
        _temp_456 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_457 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_457 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_457 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_457 = -1
    else:
        _temp_457 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_458 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_458 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_458 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_458 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_458 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_458 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_458 = -1
    else:
        _temp_458 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_459 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_459 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_459 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_459 = -1
    else:
        _temp_459 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_460 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_460 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_460 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_460 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_460 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_460 = -1
    else:
        _temp_460 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_461 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_461 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_461 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_461 = -1
    else:
        _temp_461 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_462 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_462 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_462 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_462 = -1
    else:
        _temp_462 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_463 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_463 = -1
    else:
        _temp_463 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_464 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_464 = -1
    else:
        _temp_464 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_465 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_465 = -1
    else:
        _temp_465 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_466 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_466 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_466 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_466 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_466 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_466 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_466 = -1
    else:
        _temp_466 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_467 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_467 = -1
    else:
        _temp_467 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_468 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_468 = -1
    else:
        _temp_468 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_469 = -63023.6723150686
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_469 = 63023.6723150686
    else:
        _temp_469 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_470 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_470 = -1
    else:
        _temp_470 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_471 = -9245.01359051287
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_471 = 9245.01359051287
    else:
        _temp_471 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_472 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_472 = -1
    else:
        _temp_472 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_473 = -5470.37185450524
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_473 = 5470.37185450524
    else:
        _temp_473 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_474 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_474 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_474 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_474 = -1
    else:
        _temp_474 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_475 = -146.43569565517
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_475 = 146.43569565517
    else:
        _temp_475 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_476 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_476 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_476 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_476 = -1
    else:
        _temp_476 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_477 = -59.9063725960223
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_477 = 59.9063725960223
    else:
        _temp_477 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_478 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_478 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_478 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_478 = -1
    else:
        _temp_478 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_479 = 76.3906222253119
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_479 = -76.3906222253119
    else:
        _temp_479 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_480 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_480 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_480 = -1
    else:
        _temp_480 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_481 = 87.4997823609086
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_481 = -87.4997823609086
    else:
        _temp_481 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_482 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_482 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_482 = -1
    else:
        _temp_482 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_483 = 223.954819594006
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_483 = -223.954819594006
    else:
        _temp_483 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_484 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_484 = -1
    else:
        _temp_484 = 0
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_485 = 1821.52366640273
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_485 = -1821.52366640273
    else:
        _temp_485 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_486 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_486 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_486 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_486 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_486 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_486 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_486 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_486 = -1
    else:
        _temp_486 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_487 = 15845.5456528034
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_487 = -15845.5456528034
    else:
        _temp_487 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_488 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_488 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_488 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_488 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_488 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_488 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_488 = -1
    else:
        _temp_488 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_489 = 31490.3449813966
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_489 = -31490.3449813966
    else:
        _temp_489 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_490 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_490 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_490 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_490 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_490 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_490 = -1
    else:
        _temp_490 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_491 = -5426.4585268207
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_491 = 5426.4585268207
    else:
        _temp_491 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_492 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_492 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_492 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_492 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_492 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_492 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_492 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_492 = -1
    else:
        _temp_492 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_493 = -133.953229249356
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_493 = 133.953229249356
    else:
        _temp_493 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_494 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_494 = -1
    else:
        _temp_494 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_495 = 55.1691272289954
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_495 = -55.1691272289954
    else:
        _temp_495 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_496 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_496 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_496 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_496 = -1
    else:
        _temp_496 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_497 = 201.651262531364
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_497 = -201.651262531364
    else:
        _temp_497 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_498 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_498 = -1
    else:
        _temp_498 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_499 = 388.361227802946
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_499 = -388.361227802946
    else:
        _temp_499 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_500 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_500 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_500 = -1
    else:
        _temp_500 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_501 = 8604.32968952535
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_501 = -8604.32968952535
    else:
        _temp_501 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_502 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_502 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_502 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_502 = -1
    else:
        _temp_502 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_503 = 19598.5470266258
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_503 = -19598.5470266258
    else:
        _temp_503 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_504 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_504 = -1
    else:
        _temp_504 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_505 = 73346.6992402494
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_505 = -73346.6992402494
    else:
        _temp_505 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_506 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_506 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_506 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_506 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_506 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_506 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_506 = -1
    else:
        _temp_506 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_507 = 131644.409301376
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_507 = -131644.409301376
    else:
        _temp_507 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_508 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_508 = -1
    else:
        _temp_508 = 0
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_509 = 146719.903321907
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_509 = -146719.903321907
    else:
        _temp_509 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_510 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_510 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_510 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_510 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_510 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_510 = -1
    else:
        _temp_510 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_511 = -59981.9087504654
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_511 = 59981.9087504654
    else:
        _temp_511 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_512 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_512 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_512 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_512 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_512 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_512 = -1
    else:
        _temp_512 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_513 = -34270.347603779
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_513 = 34270.347603779
    else:
        _temp_513 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_514 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_514 = -1
    else:
        _temp_514 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_515 = -29231.3561996495
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_515 = 29231.3561996495
    else:
        _temp_515 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_516 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_516 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_516 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_516 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_516 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_516 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_516 = -1
    else:
        _temp_516 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_517 = -1640.50351036815
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_517 = 1640.50351036815
    else:
        _temp_517 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_518 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_518 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_518 = -1
    else:
        _temp_518 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_519 = -1441.478140741
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_519 = 1441.478140741
    else:
        _temp_519 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_520 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_520 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_520 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_520 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_520 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_520 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_520 = -1
    else:
        _temp_520 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_521 = -1441.478140741
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_521 = 1441.478140741
    else:
        _temp_521 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_522 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_522 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_522 = -1
    else:
        _temp_522 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_523 = -806.953771790836
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_523 = 806.953771790836
    else:
        _temp_523 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_524 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_524 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_524 = -1
    else:
        _temp_524 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_525 = -610.361625404363
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_525 = 610.361625404363
    else:
        _temp_525 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_526 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_526 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_526 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_526 = -1
    else:
        _temp_526 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_527 = -610.361625404363
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_527 = 610.361625404363
    else:
        _temp_527 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_528 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_528 = -1
    else:
        _temp_528 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_529 = -276.836311959008
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_529 = 276.836311959008
    else:
        _temp_529 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_530 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_530 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_530 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_530 = -1
    else:
        _temp_530 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_531 = -228.197985389096
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_531 = 228.197985389096
    else:
        _temp_531 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_532 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_532 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_532 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_532 = -1
    else:
        _temp_532 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_533 = -169.822528792366
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_533 = 169.822528792366
    else:
        _temp_533 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_534 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_534 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_534 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_534 = -1
    else:
        _temp_534 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_535 = -169.822528792366
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_535 = 169.822528792366
    else:
        _temp_535 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_536 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_536 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_536 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_536 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_536 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_536 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_536 = -1
    else:
        _temp_536 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_537 = -102.567981879458
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_537 = 102.567981879458
    else:
        _temp_537 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_538 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_538 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_538 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_538 = -1
    else:
        _temp_538 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_539 = -52.9567959159579
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_539 = 52.9567959159579
    else:
        _temp_539 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_540 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_540 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_540 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_540 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_540 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_540 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_540 = -1
    else:
        _temp_540 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_541 = -17.1177804199956
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_541 = 17.1177804199956
    else:
        _temp_541 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_542 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_542 = -1
    else:
        _temp_542 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_543 = 119.512694227159
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_543 = -119.512694227159
    else:
        _temp_543 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_544 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_544 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_544 = -1
    else:
        _temp_544 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_545 = 195.823148187892
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_545 = -195.823148187892
    else:
        _temp_545 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_546 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_546 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_546 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_546 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_546 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_546 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_546 = -1
    else:
        _temp_546 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_547 = 221.829278213443
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_547 = -221.829278213443
    else:
        _temp_547 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_548 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_548 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_548 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_548 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_548 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_548 = -1
    else:
        _temp_548 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_549 = 319.705881959852
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_549 = -319.705881959852
    else:
        _temp_549 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_550 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_550 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_550 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_550 = -1
    else:
        _temp_550 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_551 = 319.705881959852
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_551 = -319.705881959852
    else:
        _temp_551 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_552 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_552 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_552 = -1
    else:
        _temp_552 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_553 = 369.537426782285
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_553 = -369.537426782285
    else:
        _temp_553 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_554 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_554 = -1
    else:
        _temp_554 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_555 = 748.11095144788
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_555 = -748.11095144788
    else:
        _temp_555 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_556 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_556 = -1
    else:
        _temp_556 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_557 = 771.319934677943
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_557 = -771.319934677943
    else:
        _temp_557 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_558 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_558 = -1
    else:
        _temp_558 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_559 = 771.319934677943
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_559 = -771.319934677943
    else:
        _temp_559 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_560 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_560 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_560 = -1
    else:
        _temp_560 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_561 = 1371.99818540677
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_561 = -1371.99818540677
    else:
        _temp_561 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_562 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_562 = -1
    else:
        _temp_562 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_563 = 2576.036135878
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_563 = -2576.036135878
    else:
        _temp_563 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_564 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_564 = -1
    else:
        _temp_564 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_565 = 17356.6162125706
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_565 = -17356.6162125706
    else:
        _temp_565 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_566 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_566 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_566 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_566 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_566 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_566 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_566 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_566 = -1
    else:
        _temp_566 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_567 = 115607.707937587
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_567 = -115607.707937587
    else:
        _temp_567 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_568 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_568 = -1
    else:
        _temp_568 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_570 = 422.912930824356
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_570 = -422.912930824356
        else:
            _temp_570 = np.nan
        _temp_569 = _temp_570
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_571 = -422.912930824356
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_571 = 422.912930824356
        else:
            _temp_571 = np.nan
        _temp_569 = _temp_571
    else:
        _temp_569 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_572 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_572 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_572 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_572 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_572 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_572 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_572 = -1
    else:
        _temp_572 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_574 = 876.941357550638
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_574 = -876.941357550638
        else:
            _temp_574 = np.nan
        _temp_573 = _temp_574
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_575 = -876.941357550638
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_575 = 876.941357550638
        else:
            _temp_575 = np.nan
        _temp_573 = _temp_575
    else:
        _temp_573 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_576 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_576 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_576 = -1
    else:
        _temp_576 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_578 = 1188.90139170705
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_578 = -1188.90139170705
        else:
            _temp_578 = np.nan
        _temp_577 = _temp_578
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_579 = -1188.90139170705
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_579 = 1188.90139170705
        else:
            _temp_579 = np.nan
        _temp_577 = _temp_579
    else:
        _temp_577 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_580 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_580 = -1
    else:
        _temp_580 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_582 = 1191.84863062963
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_582 = -1191.84863062963
        else:
            _temp_582 = np.nan
        _temp_581 = _temp_582
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_583 = -1191.84863062963
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_583 = 1191.84863062963
        else:
            _temp_583 = np.nan
        _temp_581 = _temp_583
    else:
        _temp_581 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_584 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_584 = -1
    else:
        _temp_584 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_585 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_585 = -1
    else:
        _temp_585 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_586 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_586 = -1
    else:
        _temp_586 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_587 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_587 = -1
    else:
        _temp_587 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_588 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_588 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_588 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_588 = -1
    else:
        _temp_588 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_589 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_589 = -1
    else:
        _temp_589 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_590 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_590 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_590 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_590 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_590 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_590 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_590 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_590 = -1
    else:
        _temp_590 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_591 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_591 = -1
    else:
        _temp_591 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_592 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_592 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_592 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_592 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_592 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_592 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_592 = -1
    else:
        _temp_592 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_593 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_593 = -1
    else:
        _temp_593 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_594 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_594 = -1
    else:
        _temp_594 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_595 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_595 = -1
    else:
        _temp_595 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_596 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_596 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_596 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_596 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_596 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_596 = -1
    else:
        _temp_596 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_597 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_597 = -1
    else:
        _temp_597 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_598 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_598 = -1
    else:
        _temp_598 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_599 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_599 = -1
    else:
        _temp_599 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_600 = -379.924055641856
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_600 = 379.924055641856
    else:
        _temp_600 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_601 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_601 = -1
    else:
        _temp_601 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_602 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_602 = -1
    else:
        _temp_602 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_603 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_603 = -1
    else:
        _temp_603 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_604 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_604 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_604 = -1
    else:
        _temp_604 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_605 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_605 = -1
    else:
        _temp_605 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_606 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_606 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_606 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_606 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_606 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_606 = -1
    else:
        _temp_606 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_607 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_607 = -1
    else:
        _temp_607 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_608 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_608 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_608 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_608 = -1
    else:
        _temp_608 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_609 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_609 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_609 = -1
    else:
        _temp_609 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_610 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_610 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_610 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_610 = -1
    else:
        _temp_610 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_611 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_611 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_611 = -1
    else:
        _temp_611 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_612 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_612 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_612 = -1
    else:
        _temp_612 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_613 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_613 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_613 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_613 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_613 = -1
    else:
        _temp_613 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_614 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_614 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_614 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_614 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_614 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_614 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_614 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_614 = -1
    else:
        _temp_614 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_615 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_615 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_615 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_615 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_615 = -1
    else:
        _temp_615 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_616 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_616 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_616 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_616 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_616 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_616 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_616 = -1
    else:
        _temp_616 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_617 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_617 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_617 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_617 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_617 = -1
    else:
        _temp_617 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_618 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_618 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_618 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_618 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_618 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_618 = -1
    else:
        _temp_618 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_619 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_619 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_619 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_619 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_619 = -1
    else:
        _temp_619 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_620 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_620 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_620 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_620 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_620 = -1
    else:
        _temp_620 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_621 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_621 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_621 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_621 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_621 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_621 = -1
    else:
        _temp_621 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_622 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_622 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_622 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_622 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_622 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_622 = -1
    else:
        _temp_622 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_623 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_623 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_623 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_623 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_623 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_623 = -1
    else:
        _temp_623 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_624 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_624 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_624 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_624 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_624 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_624 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_624 = -1
    else:
        _temp_624 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_625 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_625 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_625 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_625 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_625 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_625 = -1
    else:
        _temp_625 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_626 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_626 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_626 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_626 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_626 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_626 = -1
    else:
        _temp_626 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_627 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_627 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_627 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_627 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_627 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_627 = -1
    else:
        _temp_627 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_628 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_628 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_628 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_628 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_628 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_628 = -1
    else:
        _temp_628 = 0
    if (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_629 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_629 = -1
    else:
        _temp_629 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_630 = -324.145071209359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_630 = 324.145071209359
    else:
        _temp_630 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_631 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_631 = -1
    else:
        _temp_631 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_632 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_632 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_632 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_632 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_632 = -1
    else:
        _temp_632 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_633 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_633 = -1
    else:
        _temp_633 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_634 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_634 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_634 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_634 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_634 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_634 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_634 = -1
    else:
        _temp_634 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_635 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_635 = -1
    else:
        _temp_635 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_636 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_636 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_636 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_636 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_636 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_636 = -1
    else:
        _temp_636 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_637 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_637 = -1
    else:
        _temp_637 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_638 = -11305.581806905
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_638 = 11305.581806905
    else:
        _temp_638 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_639 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_639 = -1
    else:
        _temp_639 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_640 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_640 = -1
    else:
        _temp_640 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_641 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_641 = -1
    else:
        _temp_641 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_642 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_642 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_642 = -1
    else:
        _temp_642 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_643 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_643 = -1
    else:
        _temp_643 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_644 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_644 = -1
    else:
        _temp_644 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_645 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_645 = -1
    else:
        _temp_645 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_646 = -17903.9655408476
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_646 = 17903.9655408476
    else:
        _temp_646 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_647 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_647 = -1
    else:
        _temp_647 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_648 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_648 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_648 = -1
    else:
        _temp_648 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_649 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_649 = -1
    else:
        _temp_649 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_650 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_650 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_650 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_650 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_650 = -1
    else:
        _temp_650 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_651 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_651 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_651 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_651 = -1
    else:
        _temp_651 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_652 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_652 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_652 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_652 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_652 = -1
    else:
        _temp_652 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_653 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_653 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_653 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_653 = -1
    else:
        _temp_653 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_654 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_654 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_654 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_654 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_654 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_654 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_654 = -1
    else:
        _temp_654 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_655 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_655 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_655 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_655 = -1
    else:
        _temp_655 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_656 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_656 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_656 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_656 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_656 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_656 = -1
    else:
        _temp_656 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_657 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_657 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_657 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_657 = -1
    else:
        _temp_657 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_658 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_658 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_658 = -1
    else:
        _temp_658 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_659 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_659 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_659 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_659 = -1
    else:
        _temp_659 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_660 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_660 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_660 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_660 = -1
    else:
        _temp_660 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_661 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_661 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_661 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_661 = -1
    else:
        _temp_661 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_662 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_662 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_662 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_662 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_662 = -1
    else:
        _temp_662 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_663 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_663 = -1
    else:
        _temp_663 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_664 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_664 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_664 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_664 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_664 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_664 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_664 = -1
    else:
        _temp_664 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_665 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_665 = -1
    else:
        _temp_665 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_666 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_666 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_666 = -1
    else:
        _temp_666 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_667 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_667 = -1
    else:
        _temp_667 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_668 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_668 = -1
    else:
        _temp_668 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_669 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_669 = -1
    else:
        _temp_669 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_670 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_670 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_670 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_670 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_670 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_670 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_670 = -1
    else:
        _temp_670 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_671 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_671 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_671 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_671 = -1
    else:
        _temp_671 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_672 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_672 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_672 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_672 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_672 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_672 = -1
    else:
        _temp_672 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_673 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_673 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_673 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_673 = -1
    else:
        _temp_673 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_674 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_674 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_674 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_674 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_674 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_674 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_674 = -1
    else:
        _temp_674 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_675 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_675 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_675 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_675 = -1
    else:
        _temp_675 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_676 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_676 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_676 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_676 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_676 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_676 = -1
    else:
        _temp_676 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_677 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_677 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_677 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_677 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_677 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_677 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_677 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_677 = -1
    else:
        _temp_677 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_678 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_678 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_678 = -1
    else:
        _temp_678 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_679 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_679 = -1
    else:
        _temp_679 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_680 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_680 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_680 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_680 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_680 = -1
    else:
        _temp_680 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_681 = -49950.6934179396
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_681 = 49950.6934179396
    else:
        _temp_681 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_682 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_682 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_682 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_682 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_682 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_682 = -1
    else:
        _temp_682 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_683 = -25264.1777983978
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_683 = 25264.1777983978
    else:
        _temp_683 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_684 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_684 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_684 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_684 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_684 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_684 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_684 = -1
    else:
        _temp_684 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_685 = -290.754740949048
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_685 = 290.754740949048
    else:
        _temp_685 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_686 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_686 = -1
    else:
        _temp_686 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_687 = 273.492741297905
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_687 = -273.492741297905
    else:
        _temp_687 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_688 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_688 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_688 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_688 = -1
    else:
        _temp_688 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_689 = 1961.99094924174
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_689 = -1961.99094924174
    else:
        _temp_689 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_690 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_690 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_690 = -1
    else:
        _temp_690 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_691 = 3871.15951649986
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_691 = -3871.15951649986
    else:
        _temp_691 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_692 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_692 = -1
    else:
        _temp_692 = 0
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_693 = 263155.716813372
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_693 = -263155.716813372
    else:
        _temp_693 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_694 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_694 = -1
    else:
        _temp_694 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_695 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_695 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_695 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_695 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_695 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_695 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_695 = -1
    else:
        _temp_695 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_696 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_696 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_696 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_696 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_696 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_696 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_696 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_696 = -1
    else:
        _temp_696 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_697 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_697 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_697 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_697 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_697 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_697 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_697 = -1
    else:
        _temp_697 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_698 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_698 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_698 = -1
    else:
        _temp_698 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_699 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_699 = -1
    else:
        _temp_699 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_700 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_700 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_700 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_700 = -1
    else:
        _temp_700 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_701 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_701 = -1
    else:
        _temp_701 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_702 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_702 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_702 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_702 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_702 = -1
    else:
        _temp_702 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_703 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_703 = -1
    else:
        _temp_703 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_704 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_704 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_704 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_704 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_704 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_704 = -1
    else:
        _temp_704 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_705 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_705 = -1
    else:
        _temp_705 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_706 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_706 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_706 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_706 = -1
    else:
        _temp_706 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_707 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_707 = -1
    else:
        _temp_707 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_708 = -588.733483979973
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_708 = 588.733483979973
    else:
        _temp_708 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_709 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_709 = -1
    else:
        _temp_709 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_710 = -273.998552730648
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_710 = 273.998552730648
    else:
        _temp_710 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_711 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_711 = -1
    else:
        _temp_711 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_712 = -193.108587018827
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_712 = 193.108587018827
    else:
        _temp_712 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_713 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_713 = -1
    else:
        _temp_713 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_714 = 461.591318227007
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_714 = -461.591318227007
    else:
        _temp_714 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_715 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_715 = -1
    else:
        _temp_715 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_716 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_716 = -1
    else:
        _temp_716 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_717 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_717 = -1
    else:
        _temp_717 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_718 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_718 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_718 = -1
    else:
        _temp_718 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_719 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_719 = -1
    else:
        _temp_719 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_720 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_720 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_720 = -1
    else:
        _temp_720 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_721 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_721 = -1
    else:
        _temp_721 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_722 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_722 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_722 = -1
    else:
        _temp_722 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_723 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_723 = -1
    else:
        _temp_723 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_724 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_724 = -1
    else:
        _temp_724 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_725 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_725 = -1
    else:
        _temp_725 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_726 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_726 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_726 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_726 = -1
    else:
        _temp_726 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_727 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_727 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_727 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_727 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_727 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_727 = -1
    else:
        _temp_727 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_728 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_728 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_728 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_728 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_728 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_728 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_728 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_728 = -1
    else:
        _temp_728 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_729 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_729 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_729 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_729 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_729 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_729 = -1
    else:
        _temp_729 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_730 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_730 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_730 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_730 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_730 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_730 = -1
    else:
        _temp_730 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_731 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_731 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_731 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_731 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_731 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_731 = -1
    else:
        _temp_731 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_732 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_732 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_732 = -1
    else:
        _temp_732 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_733 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_733 = -1
    else:
        _temp_733 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_734 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_734 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_734 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_734 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_734 = -1
    else:
        _temp_734 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_735 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_735 = -1
    else:
        _temp_735 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_736 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_736 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_736 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_736 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_736 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_736 = -1
    else:
        _temp_736 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_737 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_737 = -1
    else:
        _temp_737 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_738 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_738 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_738 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_738 = -1
    else:
        _temp_738 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_739 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_739 = -1
    else:
        _temp_739 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_740 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_740 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_740 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_740 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_740 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_740 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_740 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_740 = -1
    else:
        _temp_740 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_741 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_741 = -1
    else:
        _temp_741 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_742 = -72192.8834625165
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_742 = 72192.8834625165
    else:
        _temp_742 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_743 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_743 = -1
    else:
        _temp_743 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_744 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_744 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_744 = -1
    else:
        _temp_744 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_745 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_745 = -1
    else:
        _temp_745 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_746 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_746 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_746 = -1
    else:
        _temp_746 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_747 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_747 = -1
    else:
        _temp_747 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_748 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_748 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_748 = -1
    else:
        _temp_748 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_749 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_749 = -1
    else:
        _temp_749 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_750 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_750 = -1
    else:
        _temp_750 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_751 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_751 = -1
    else:
        _temp_751 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_752 = 232894.294438186
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_752 = -232894.294438186
    else:
        _temp_752 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_753 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_753 = -1
    else:
        _temp_753 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_754 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_754 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_754 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_754 = -1
    else:
        _temp_754 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_755 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_755 = -1
    else:
        _temp_755 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_756 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_756 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_756 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_756 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_756 = -1
    else:
        _temp_756 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_757 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_757 = -1
    else:
        _temp_757 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_758 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_758 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_758 = -1
    else:
        _temp_758 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_759 = -33496.1848983975
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_759 = 33496.1848983975
    else:
        _temp_759 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_760 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_760 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_760 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_760 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_760 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_760 = -1
    else:
        _temp_760 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_761 = -17420.4154899805
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_761 = 17420.4154899805
    else:
        _temp_761 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_762 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_762 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_762 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_762 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_762 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_762 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_762 = -1
    else:
        _temp_762 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_763 = -3816.4363092026
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_763 = 3816.4363092026
    else:
        _temp_763 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_764 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_764 = -1
    else:
        _temp_764 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_765 = -2534.59950442392
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_765 = 2534.59950442392
    else:
        _temp_765 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_766 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_766 = -1
    else:
        _temp_766 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_767 = -2445.34598082398
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_767 = 2445.34598082398
    else:
        _temp_767 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_768 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_768 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_768 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_768 = -1
    else:
        _temp_768 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_769 = -273.998552730648
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_769 = 273.998552730648
    else:
        _temp_769 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_770 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_770 = -1
    else:
        _temp_770 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_771 = -272.817403060359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_771 = 272.817403060359
    else:
        _temp_771 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_772 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_772 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_772 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_772 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_772 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_772 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_772 = -1
    else:
        _temp_772 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_773 = -144.952995118765
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_773 = 144.952995118765
    else:
        _temp_773 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_774 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_774 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_774 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_774 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_774 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_774 = -1
    else:
        _temp_774 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_775 = -68.3396030037034
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_775 = 68.3396030037034
    else:
        _temp_775 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_776 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_776 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_776 = -1
    else:
        _temp_776 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_777 = -48.2998911272728
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_777 = 48.2998911272728
    else:
        _temp_777 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_778 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_778 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_778 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_778 = -1
    else:
        _temp_778 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_779 = -48.2998911272728
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_779 = 48.2998911272728
    else:
        _temp_779 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_780 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_780 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_780 = -1
    else:
        _temp_780 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_781 = -28.9928182095449
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_781 = 28.9928182095449
    else:
        _temp_781 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_782 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_782 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_782 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_782 = -1
    else:
        _temp_782 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_783 = 301.688165763633
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_783 = -301.688165763633
    else:
        _temp_783 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_784 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_784 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_784 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_784 = -1
    else:
        _temp_784 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_785 = 337.488853939305
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_785 = -337.488853939305
    else:
        _temp_785 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_786 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_786 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_786 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_786 = -1
    else:
        _temp_786 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_787 = 461.591318227007
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_787 = -461.591318227007
    else:
        _temp_787 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_788 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_788 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_788 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_788 = -1
    else:
        _temp_788 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_789 = 637.818635237911
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_789 = -637.818635237911
    else:
        _temp_789 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_790 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_790 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_790 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_790 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_790 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_790 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_790 = -1
    else:
        _temp_790 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_791 = 637.818635237911
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_791 = -637.818635237911
    else:
        _temp_791 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_792 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_792 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_792 = -1
    else:
        _temp_792 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_793 = 646.597812476093
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_793 = -646.597812476093
    else:
        _temp_793 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_794 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_794 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_794 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_794 = -1
    else:
        _temp_794 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_795 = 1099.38932541589
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_795 = -1099.38932541589
    else:
        _temp_795 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_796 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_796 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_796 = -1
    else:
        _temp_796 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_797 = 1847.26239779566
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_797 = -1847.26239779566
    else:
        _temp_797 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_798 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_798 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_798 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_798 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_798 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_798 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_798 = -1
    else:
        _temp_798 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_799 = 1945.96837698593
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_799 = -1945.96837698593
    else:
        _temp_799 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_800 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_800 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_800 = -1
    else:
        _temp_800 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_801 = 3656.79888851197
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_801 = -3656.79888851197
    else:
        _temp_801 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_802 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_802 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_802 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_802 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_802 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_802 = -1
    else:
        _temp_802 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_803 = 4142.86477006572
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_803 = -4142.86477006572
    else:
        _temp_803 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_804 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_804 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_804 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_804 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_804 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_804 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_804 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_804 = -1
    else:
        _temp_804 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_805 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_805 = -1
    else:
        _temp_805 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_806 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_806 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_806 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_806 = -1
    else:
        _temp_806 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_807 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_807 = -1
    else:
        _temp_807 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_808 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_808 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_808 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_808 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_808 = -1
    else:
        _temp_808 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_809 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_809 = -1
    else:
        _temp_809 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_810 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_810 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_810 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_810 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_810 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_810 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_810 = -1
    else:
        _temp_810 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_811 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_811 = -1
    else:
        _temp_811 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_812 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_812 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_812 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_812 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_812 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_812 = -1
    else:
        _temp_812 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_813 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_813 = -1
    else:
        _temp_813 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_814 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_814 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_814 = -1
    else:
        _temp_814 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_815 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_815 = -1
    else:
        _temp_815 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_816 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_816 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_816 = -1
    else:
        _temp_816 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_817 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_817 = -1
    else:
        _temp_817 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_818 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_818 = -1
    else:
        _temp_818 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_819 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_819 = -1
    else:
        _temp_819 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_820 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_820 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_820 = -1
    else:
        _temp_820 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_821 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_821 = -1
    else:
        _temp_821 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_822 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_822 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_822 = -1
    else:
        _temp_822 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_823 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_823 = -1
    else:
        _temp_823 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_824 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_824 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_824 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_824 = -1
    else:
        _temp_824 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_825 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_825 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_825 = -1
    else:
        _temp_825 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_826 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_826 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_826 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_826 = -1
    else:
        _temp_826 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_827 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_827 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_827 = -1
    else:
        _temp_827 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_828 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_828 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_828 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_828 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_828 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_828 = -1
    else:
        _temp_828 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_829 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_829 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_829 = -1
    else:
        _temp_829 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_830 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_830 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_830 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_830 = -1
    else:
        _temp_830 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_831 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_831 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_831 = -1
    else:
        _temp_831 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_832 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_832 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_832 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_832 = -1
    else:
        _temp_832 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_833 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_833 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_833 = -1
    else:
        _temp_833 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_834 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_834 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_834 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_834 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_834 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_834 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_834 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_834 = -1
    else:
        _temp_834 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_835 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_835 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_835 = -1
    else:
        _temp_835 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_836 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_836 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_836 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_836 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_836 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_836 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_836 = -1
    else:
        _temp_836 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_837 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_837 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_837 = -1
    else:
        _temp_837 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_838 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_838 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_838 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_838 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_838 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_838 = -1
    else:
        _temp_838 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_839 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_839 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_839 = -1
    else:
        _temp_839 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_840 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_840 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_840 = -1
    else:
        _temp_840 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_841 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_841 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_841 = -1
    else:
        _temp_841 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_842 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_842 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_842 = -1
    else:
        _temp_842 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_843 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_843 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_843 = -1
    else:
        _temp_843 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_844 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_844 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_844 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_844 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_844 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_844 = -1
    else:
        _temp_844 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_845 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_845 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_845 = -1
    else:
        _temp_845 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_846 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_846 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_846 = -1
    else:
        _temp_846 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_847 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_847 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_847 = -1
    else:
        _temp_847 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_848 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_848 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_848 = -1
    else:
        _temp_848 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_849 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_849 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_849 = -1
    else:
        _temp_849 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_850 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_850 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_850 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_850 = -1
    else:
        _temp_850 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_851 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_851 = -1
    else:
        _temp_851 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_852 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_852 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_852 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_852 = -1
    else:
        _temp_852 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_853 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_853 = -1
    else:
        _temp_853 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_854 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_854 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_854 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_854 = -1
    else:
        _temp_854 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_855 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_855 = -1
    else:
        _temp_855 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_856 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_856 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_856 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_856 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_856 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_856 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_856 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_856 = -1
    else:
        _temp_856 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_857 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_857 = -1
    else:
        _temp_857 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_858 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_858 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_858 = -1
    else:
        _temp_858 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_859 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_859 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_859 = -1
    else:
        _temp_859 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_860 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_860 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_860 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_860 = -1
    else:
        _temp_860 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_861 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_861 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_861 = -1
    else:
        _temp_861 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_862 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_862 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_862 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_862 = -1
    else:
        _temp_862 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_863 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_863 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_863 = -1
    else:
        _temp_863 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_864 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_864 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_864 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_864 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_864 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_864 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_864 = -1
    else:
        _temp_864 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_865 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_865 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_865 = -1
    else:
        _temp_865 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_866 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_866 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_866 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_866 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_866 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_866 = -1
    else:
        _temp_866 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_867 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_867 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_867 = -1
    else:
        _temp_867 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_868 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_868 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_868 = -1
    else:
        _temp_868 = np.nan
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_869 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_869 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_869 = -1
    else:
        _temp_869 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_870 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_870 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_870 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_870 = -1
    else:
        _temp_870 = 0
    if (jmp.numeq(ROUTING_PHASE_asCode, 2)):
        _temp_871 = 1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 0)):
        _temp_871 = -1
    elif (jmp.numeq(ROUTING_PHASE_asCode, 1)):
        _temp_871 = -1
    else:
        _temp_871 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_872 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_872 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_872 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_872 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_872 = -1
    else:
        _temp_872 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_873 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_873 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_873 = -1
    else:
        _temp_873 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_874 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_874 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_874 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_874 = -1
    else:
        _temp_874 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_875 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_875 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_875 = -1
    else:
        _temp_875 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_876 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_876 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_876 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_876 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_876 = -1
    else:
        _temp_876 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_877 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_877 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_877 = -1
    else:
        _temp_877 = np.nan
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_878 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_878 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_878 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_878 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_878 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_878 = -1
    else:
        _temp_878 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_879 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_879 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_879 = -1
    else:
        _temp_879 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_880 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_880 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_880 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_880 = -1
    else:
        _temp_880 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_881 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_881 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_881 = -1
    else:
        _temp_881 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_882 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_882 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_882 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_882 = -1
    else:
        _temp_882 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_883 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_883 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_883 = -1
    else:
        _temp_883 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_884 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_884 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_884 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_884 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_884 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_884 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_884 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_884 = -1
    else:
        _temp_884 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_885 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_885 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_885 = -1
    else:
        _temp_885 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_886 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_886 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_886 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_886 = -1
    else:
        _temp_886 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_887 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_887 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_887 = -1
    else:
        _temp_887 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_888 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_888 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_888 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_888 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_888 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_888 = -1
    else:
        _temp_888 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_889 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_889 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_889 = -1
    else:
        _temp_889 = np.nan
    if (jmp.numeq(FINISH_PS_asCode, 8)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 9)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 0)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 1)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 2)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 3)):
        _temp_890 = 1
    elif (jmp.numeq(FINISH_PS_asCode, 4)):
        _temp_890 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 5)):
        _temp_890 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 6)):
        _temp_890 = -1
    elif (jmp.numeq(FINISH_PS_asCode, 7)):
        _temp_890 = -1
    else:
        _temp_890 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_891 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_891 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_891 = -1
    else:
        _temp_891 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_892 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_892 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_892 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_892 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_892 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_892 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_892 = -1
    else:
        _temp_892 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_893 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_893 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_893 = -1
    else:
        _temp_893 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_894 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_894 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_894 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_894 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_894 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_894 = -1
    else:
        _temp_894 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_895 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_895 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_895 = -1
    else:
        _temp_895 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_896 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_896 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_896 = -1
    else:
        _temp_896 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_897 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_897 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_897 = -1
    else:
        _temp_897 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_898 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_898 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_898 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_898 = -1
    else:
        _temp_898 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_899 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_899 = -1
    else:
        _temp_899 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_900 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_900 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_900 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_900 = -1
    else:
        _temp_900 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_901 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_901 = -1
    else:
        _temp_901 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_902 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_902 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_902 = -1
    else:
        _temp_902 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_903 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_903 = -1
    else:
        _temp_903 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_904 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_904 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_904 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_904 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_904 = -1
    else:
        _temp_904 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_905 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_905 = -1
    else:
        _temp_905 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_906 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_906 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_906 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_906 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_906 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_906 = -1
    else:
        _temp_906 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_907 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_907 = -1
    else:
        _temp_907 = 0
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_908 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_908 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_908 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_908 = -1
    else:
        _temp_908 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_909 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_909 = -1
    else:
        _temp_909 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_910 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_910 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_910 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_910 = -1
    else:
        _temp_910 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_911 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_911 = -1
    else:
        _temp_911 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_912 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_912 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_912 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_912 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_912 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_912 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_912 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_912 = -1
    else:
        _temp_912 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_913 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_913 = -1
    else:
        _temp_913 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_914 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_914 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_914 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_914 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_914 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_914 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_914 = -1
    else:
        _temp_914 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_915 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_915 = -1
    else:
        _temp_915 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_916 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_916 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_916 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_916 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_916 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_916 = -1
    else:
        _temp_916 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_917 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_917 = -1
    else:
        _temp_917 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_918 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_918 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_918 = -1
    else:
        _temp_918 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_919 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_919 = -1
    else:
        _temp_919 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_920 = 523.584463875849
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_920 = -523.584463875849
    else:
        _temp_920 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_921 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_921 = -1
    else:
        _temp_921 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_922 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_922 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_922 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_922 = -1
    else:
        _temp_922 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_923 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_923 = -1
    else:
        _temp_923 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_924 = 1
    elif (jmp.numeq(SPEC_asCode, 6)):
        _temp_924 = -1
    elif (jmp.numeq(SPEC_asCode, 7)):
        _temp_924 = -1
    else:
        _temp_924 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_925 = -130899.640549331
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_925 = 130899.640549331
    else:
        _temp_925 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_926 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_926 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_926 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_926 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_926 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_926 = -1
    else:
        _temp_926 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_927 = -65439.0556712152
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_927 = 65439.0556712152
    else:
        _temp_927 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_928 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_928 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_928 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_928 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_928 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_928 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_928 = -1
    else:
        _temp_928 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_929 = -8986.60556804912
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_929 = 8986.60556804912
    else:
        _temp_929 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_930 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_930 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_930 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_930 = -1
    else:
        _temp_930 = 0
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_931 = 218.292052430283
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_931 = -218.292052430283
    else:
        _temp_931 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_932 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_932 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_932 = -1
    else:
        _temp_932 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_933 = 4454.90869191414
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_933 = -4454.90869191414
    else:
        _temp_933 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_934 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_934 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_934 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_934 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_934 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_934 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_934 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_934 = -1
    else:
        _temp_934 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_935 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_935 = -1
    else:
        _temp_935 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_936 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_936 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_936 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_936 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_936 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_936 = -1
    else:
        _temp_936 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_937 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_937 = -1
    else:
        _temp_937 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_938 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_938 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_938 = -1
    else:
        _temp_938 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_939 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_939 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_939 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_939 = -1
    else:
        _temp_939 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_940 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_940 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_940 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_940 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_940 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 5)):
        _temp_940 = -1
    else:
        _temp_940 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_941 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_941 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_941 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_941 = -1
    else:
        _temp_941 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_942 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_942 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_942 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_942 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_942 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_942 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_942 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_942 = -1
    else:
        _temp_942 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_943 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_943 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_943 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_943 = -1
    else:
        _temp_943 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_944 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_944 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_944 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_944 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_944 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_944 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_944 = -1
    else:
        _temp_944 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_945 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_945 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_945 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_945 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_945 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_945 = -1
    else:
        _temp_945 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_946 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_946 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_946 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_946 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_946 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_946 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_946 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_946 = -1
    else:
        _temp_946 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_947 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_947 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_947 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_947 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_947 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_947 = -1
    else:
        _temp_947 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_948 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_948 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_948 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_948 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_948 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_948 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_948 = -1
    else:
        _temp_948 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_949 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_949 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_949 = -1
    else:
        _temp_949 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_950 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_950 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_950 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_950 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_950 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_950 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_950 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_950 = -1
    else:
        _temp_950 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_951 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_951 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_951 = -1
    else:
        _temp_951 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_952 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_952 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_952 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_952 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_952 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_952 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_952 = -1
    else:
        _temp_952 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_953 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_953 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_953 = -1
    else:
        _temp_953 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_954 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_954 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_954 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_954 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_954 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_954 = -1
    else:
        _temp_954 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_955 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_955 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_955 = -1
    else:
        _temp_955 = 0
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_956 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_956 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_956 = -1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_956 = -1
    else:
        _temp_956 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_957 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_957 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_957 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_957 = -1
    else:
        _temp_957 = 0
    if (jmp.numeq(FAI_TYPE_asCode, 2)):
        _temp_958 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 3)):
        _temp_958 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 4)):
        _temp_958 = 1
    elif (jmp.numeq(FAI_TYPE_asCode, 0)):
        _temp_958 = -1
    elif (jmp.numeq(FAI_TYPE_asCode, 1)):
        _temp_958 = -1
    else:
        _temp_958 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_959 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_959 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_959 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_959 = -1
    else:
        _temp_959 = 0
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_960 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_960 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_960 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_960 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_960 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_960 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_960 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_960 = -1
    else:
        _temp_960 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_961 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_961 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_961 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_961 = -1
    else:
        _temp_961 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_962 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_962 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_962 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_962 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_962 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_962 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_962 = -1
    else:
        _temp_962 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_963 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_963 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_963 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_963 = -1
    else:
        _temp_963 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_964 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_964 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_964 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_964 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_964 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_964 = -1
    else:
        _temp_964 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_965 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_965 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_965 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_965 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_965 = -1
    else:
        _temp_965 = np.nan
    if (jmp.numeq(FINISH_CS_asCode, 6)):
        _temp_966 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 7)):
        _temp_966 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 0)):
        _temp_966 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 1)):
        _temp_966 = 1
    elif (jmp.numeq(FINISH_CS_asCode, 2)):
        _temp_966 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 3)):
        _temp_966 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 4)):
        _temp_966 = -1
    elif (jmp.numeq(FINISH_CS_asCode, 5)):
        _temp_966 = -1
    else:
        _temp_966 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_967 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_967 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_967 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_967 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_967 = -1
    else:
        _temp_967 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_968 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_968 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_968 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_968 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_968 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_968 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_968 = -1
    else:
        _temp_968 = np.nan
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_969 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_969 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_969 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_969 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_969 = -1
    else:
        _temp_969 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_970 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_970 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_970 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_970 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_970 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_970 = -1
    else:
        _temp_970 = 0
    if (jmp.numeq(WRAP_REQUIRMENT_asCode, 4)):
        _temp_971 = 1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 0)):
        _temp_971 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 1)):
        _temp_971 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 2)):
        _temp_971 = -1
    elif (jmp.numeq(WRAP_REQUIRMENT_asCode, 3)):
        _temp_971 = -1
    else:
        _temp_971 = np.nan
    if (jmp.numeq(SPEC_asCode, 2)):
        _temp_972 = 1
    elif (jmp.numeq(SPEC_asCode, 3)):
        _temp_972 = 1
    elif (jmp.numeq(SPEC_asCode, 4)):
        _temp_972 = 1
    elif (jmp.numeq(SPEC_asCode, 5)):
        _temp_972 = 1
    elif (jmp.numeq(SPEC_asCode, 0)):
        _temp_972 = -1
    elif (jmp.numeq(SPEC_asCode, 1)):
        _temp_972 = -1
    else:
        _temp_972 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_973 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_973 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_973 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_973 = -1
    else:
        _temp_973 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_974 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_974 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_974 = -1
    else:
        _temp_974 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_975 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_975 = -1
    else:
        _temp_975 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_976 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_976 = -1
    else:
        _temp_976 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_977 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_977 = -1
    else:
        _temp_977 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_978 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_978 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_978 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_978 = -1
    else:
        _temp_978 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_979 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_979 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_979 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_979 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_979 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_979 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_979 = -1
    else:
        _temp_979 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_980 = -806.953771790836
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_980 = 806.953771790836
    else:
        _temp_980 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_981 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_981 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_981 = -1
    else:
        _temp_981 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_982 = -276.836311959008
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_982 = 276.836311959008
    else:
        _temp_982 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_983 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_983 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_983 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_983 = -1
    else:
        _temp_983 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_984 = 195.823148187892
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_984 = -195.823148187892
    else:
        _temp_984 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_985 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_985 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_985 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_985 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_985 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_985 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_985 = -1
    else:
        _temp_985 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_986 = 748.11095144788
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_986 = -748.11095144788
    else:
        _temp_986 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_987 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_987 = -1
    else:
        _temp_987 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_988 = 1371.99818540677
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_988 = -1371.99818540677
    else:
        _temp_988 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_989 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_989 = -1
    else:
        _temp_989 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_990 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_990 = -1
    else:
        _temp_990 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_991 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_991 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_991 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_991 = -1
    else:
        _temp_991 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_992 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_992 = -1
    else:
        _temp_992 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_993 = -588.733483979973
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_993 = 588.733483979973
    else:
        _temp_993 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_994 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_994 = -1
    else:
        _temp_994 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_995 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_995 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_995 = -1
    else:
        _temp_995 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_996 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_996 = -1
    else:
        _temp_996 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_997 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_997 = -1
    else:
        _temp_997 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_998 = -3816.4363092026
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_998 = 3816.4363092026
    else:
        _temp_998 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_999 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_999 = -1
    else:
        _temp_999 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1000 = -272.817403060359
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1000 = 272.817403060359
    else:
        _temp_1000 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1001 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1001 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1001 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1001 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1001 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1001 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1001 = -1
    else:
        _temp_1001 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1002 = 301.688165763633
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1002 = -301.688165763633
    else:
        _temp_1002 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1003 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1003 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1003 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1003 = -1
    else:
        _temp_1003 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1004 = 1945.96837698593
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1004 = -1945.96837698593
    else:
        _temp_1004 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1005 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1005 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1005 = -1
    else:
        _temp_1005 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1006 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1006 = -1
    else:
        _temp_1006 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1007 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1007 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1007 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1007 = -1
    else:
        _temp_1007 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1008 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1008 = -1
    else:
        _temp_1008 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1009 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1009 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1009 = -1
    else:
        _temp_1009 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1010 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1010 = -1
    else:
        _temp_1010 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1011 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1011 = -1
    else:
        _temp_1011 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1012 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1012 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1012 = -1
    else:
        _temp_1012 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1013 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1013 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1013 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1013 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1013 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1013 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1013 = -1
    else:
        _temp_1013 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1014 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1014 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1014 = -1
    else:
        _temp_1014 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1015 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1015 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1015 = -1
    else:
        _temp_1015 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1016 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1016 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1016 = -1
    else:
        _temp_1016 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1017 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1017 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1017 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1017 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1017 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1017 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1017 = -1
    else:
        _temp_1017 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1018 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1018 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1018 = -1
    else:
        _temp_1018 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1019 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1019 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1019 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1019 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1019 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1019 = -1
    else:
        _temp_1019 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1020 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1020 = -1
    else:
        _temp_1020 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1021 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1021 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1021 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1021 = -1
    else:
        _temp_1021 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1022 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1022 = -1
    else:
        _temp_1022 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1023 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1023 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1023 = -1
    else:
        _temp_1023 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1024 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1024 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1024 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1024 = -1
    else:
        _temp_1024 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1025 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1025 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1025 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1025 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1025 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1025 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1025 = -1
    else:
        _temp_1025 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1026 = -52.9567959159579
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1026 = 52.9567959159579
    else:
        _temp_1026 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1027 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1027 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1027 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1027 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1027 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1027 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1027 = -1
    else:
        _temp_1027 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1028 = 119.512694227159
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1028 = -119.512694227159
    else:
        _temp_1028 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1029 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1029 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1029 = -1
    else:
        _temp_1029 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1030 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1030 = -1
    else:
        _temp_1030 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1031 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1031 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1031 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1031 = -1
    else:
        _temp_1031 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1032 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1032 = -1
    else:
        _temp_1032 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1033 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1033 = -1
    else:
        _temp_1033 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1034 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1034 = -1
    else:
        _temp_1034 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1035 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1035 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1035 = -1
    else:
        _temp_1035 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1036 = -68.3396030037034
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1036 = 68.3396030037034
    else:
        _temp_1036 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1037 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1037 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1037 = -1
    else:
        _temp_1037 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1038 = -28.9928182095449
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1038 = 28.9928182095449
    else:
        _temp_1038 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1039 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1039 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1039 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1039 = -1
    else:
        _temp_1039 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1040 = 1847.26239779566
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1040 = -1847.26239779566
    else:
        _temp_1040 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1041 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1041 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1041 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1041 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1041 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1041 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1041 = -1
    else:
        _temp_1041 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1042 = 3656.79888851197
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1042 = -3656.79888851197
    else:
        _temp_1042 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1043 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1043 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1043 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1043 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1043 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1043 = -1
    else:
        _temp_1043 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1044 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1044 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1044 = -1
    else:
        _temp_1044 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1045 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1045 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1045 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1045 = -1
    else:
        _temp_1045 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1046 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1046 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1046 = -1
    else:
        _temp_1046 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1047 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1047 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1047 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1047 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1047 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1047 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1047 = -1
    else:
        _temp_1047 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1048 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1048 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1048 = -1
    else:
        _temp_1048 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1049 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1049 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1049 = -1
    else:
        _temp_1049 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1050 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1050 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1050 = -1
    else:
        _temp_1050 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1051 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1051 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1051 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1051 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1051 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1051 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1051 = -1
    else:
        _temp_1051 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1052 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1052 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1052 = -1
    else:
        _temp_1052 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1053 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1053 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1053 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1053 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1053 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1053 = -1
    else:
        _temp_1053 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1054 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1054 = -1
    else:
        _temp_1054 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1055 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1055 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1055 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1055 = -1
    else:
        _temp_1055 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1056 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1056 = -1
    else:
        _temp_1056 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1057 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1057 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1057 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1057 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1057 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1057 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1057 = -1
    else:
        _temp_1057 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1058 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1058 = -1
    else:
        _temp_1058 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1059 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1059 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1059 = -1
    else:
        _temp_1059 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1060 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1060 = -1
    else:
        _temp_1060 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1061 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1061 = -1
    else:
        _temp_1061 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1062 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1062 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1062 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1062 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1062 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1062 = -1
    else:
        _temp_1062 = 0
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1063 = -1441.478140741
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1063 = 1441.478140741
    else:
        _temp_1063 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1064 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1064 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1064 = -1
    else:
        _temp_1064 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1065 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1065 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1065 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1065 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1065 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1065 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1065 = -1
    else:
        _temp_1065 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1066 = -610.361625404363
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1066 = 610.361625404363
    else:
        _temp_1066 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1067 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1067 = -1
    else:
        _temp_1067 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1068 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1068 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1068 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1068 = -1
    else:
        _temp_1068 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1069 = -169.822528792366
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1069 = 169.822528792366
    else:
        _temp_1069 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1070 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1070 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1070 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1070 = -1
    else:
        _temp_1070 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1071 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1071 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1071 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1071 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1071 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1071 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1071 = -1
    else:
        _temp_1071 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1072 = 319.705881959852
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1072 = -319.705881959852
    else:
        _temp_1072 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1073 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1073 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1073 = -1
    else:
        _temp_1073 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1074 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1074 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1074 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1074 = -1
    else:
        _temp_1074 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1075 = 771.319934677943
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1075 = -771.319934677943
    else:
        _temp_1075 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1076 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1076 = -1
    else:
        _temp_1076 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1077 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1077 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1077 = -1
    else:
        _temp_1077 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1078 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1078 = -1
    else:
        _temp_1078 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1079 = -273.998552730648
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1079 = 273.998552730648
    else:
        _temp_1079 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1080 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1080 = -1
    else:
        _temp_1080 = 0
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1081 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1081 = -1
    else:
        _temp_1081 = 0
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1082 = 461.591318227007
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1082 = -461.591318227007
    else:
        _temp_1082 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1083 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1083 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1083 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1083 = -1
    else:
        _temp_1083 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1084 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1084 = -1
    else:
        _temp_1084 = 0
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1085 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1085 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1085 = -1
    else:
        _temp_1085 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1086 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1086 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1086 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1086 = -1
    else:
        _temp_1086 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1087 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1087 = -1
    else:
        _temp_1087 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1088 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1088 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1088 = -1
    else:
        _temp_1088 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1089 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1089 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1089 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1089 = -1
    else:
        _temp_1089 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1090 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1090 = -1
    else:
        _temp_1090 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1091 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1091 = -1
    else:
        _temp_1091 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1092 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1092 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1092 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1092 = -1
    else:
        _temp_1092 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1093 = -48.2998911272728
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1093 = 48.2998911272728
    else:
        _temp_1093 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1094 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1094 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1094 = -1
    else:
        _temp_1094 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1095 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1095 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1095 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1095 = -1
    else:
        _temp_1095 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1096 = 637.818635237911
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1096 = -637.818635237911
    else:
        _temp_1096 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1097 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1097 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1097 = -1
    else:
        _temp_1097 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1098 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1098 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1098 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1098 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1098 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1098 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1098 = -1
    else:
        _temp_1098 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1099 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1099 = -1
    else:
        _temp_1099 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1100 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1100 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1100 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1100 = -1
    else:
        _temp_1100 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1101 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1101 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1101 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1101 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1101 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1101 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1101 = -1
    else:
        _temp_1101 = np.nan
    if (jmp.numeq(PASTE_TYPE_asCode, 1)):
        _temp_1102 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 2)):
        _temp_1102 = 1
    elif (jmp.numeq(PASTE_TYPE_asCode, 3)):
        _temp_1102 = -1
    else:
        _temp_1102 = 0
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1103 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1103 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1103 = -1
    else:
        _temp_1103 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1104 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1104 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1104 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1104 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1104 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1104 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1104 = -1
    else:
        _temp_1104 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 0)):
        _temp_1105 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1105 = -1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1105 = -1
    else:
        _temp_1105 = np.nan
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1106 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1106 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1106 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1106 = -1
    else:
        _temp_1106 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1107 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1107 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1107 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1107 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1107 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1107 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1107 = -1
    else:
        _temp_1107 = np.nan
    if (jmp.numeq(SAP_FAMILY_GROUP_asCode, 1)):
        _temp_1108 = 1
    elif (jmp.numeq(SAP_FAMILY_GROUP_asCode, 2)):
        _temp_1108 = -1
    else:
        _temp_1108 = 0
    if (jmp.numeq(BOARD_TYPE_asCode, 0)):
        _temp_1109 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 1)):
        _temp_1109 = 1
    elif (jmp.numeq(BOARD_TYPE_asCode, 2)):
        _temp_1109 = -1
    elif (jmp.numeq(BOARD_TYPE_asCode, 3)):
        _temp_1109 = -1
    else:
        _temp_1109 = np.nan
    if (jmp.numeq(indata[u"JOB_SUB_NUM"], 0)):
        _temp_1110 = 1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 1)):
        _temp_1110 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 2)):
        _temp_1110 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 3)):
        _temp_1110 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 4)):
        _temp_1110 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 6)):
        _temp_1110 = -1
    elif (jmp.numeq(indata[u"JOB_SUB_NUM"], 5)):
        _temp_1110 = -1
    else:
        _temp_1110 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_1111 = -228.17930305674
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_1111 = 228.17930305674
    else:
        _temp_1111 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1113 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1113 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1113 = -1
        else:
            _temp_1113 = np.nan
        _temp_1112 = -160.368860421808 + 175.576252358359 * _temp_1113
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1114 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1114 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1114 = -1
        else:
            _temp_1114 = np.nan
        _temp_1112 = 160.368860421808 + -175.576252358359 * _temp_1114
    else:
        _temp_1112 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        _temp_1115 = -13.5915765417184 + 0.00721636123392178 * indata[u"DL_PNL_HOLE_QTY"]
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        _temp_1115 = 13.5915765417184 + -0.00721636123392178 * indata[u"DL_PNL_HOLE_QTY"]
    else:
        _temp_1115 = np.nan
    if (jmp.numeq(CAM_LAYUP_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1117 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1117 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1117 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1117 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1117 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1117 = -1
        else:
            _temp_1117 = 0
        _temp_1116 = 21.5703755831709 + 48.70913261422 * _temp_1117
    elif (jmp.numeq(CAM_LAYUP_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1118 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1118 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1118 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1118 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1118 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1118 = -1
        else:
            _temp_1118 = 0
        _temp_1116 = -21.5703755831709 + -48.70913261422 * _temp_1118
    else:
        _temp_1116 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        _temp_1119 = -3607.12968625771
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        _temp_1119 = 3607.12968625771
    else:
        _temp_1119 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1121 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1121 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1121 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1121 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1121 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1121 = -1
        else:
            _temp_1121 = 0
        _temp_1120 = -20.4514973745659 + -46.1825383585028 * _temp_1121
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1122 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1122 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1122 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1122 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1122 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1122 = -1
        else:
            _temp_1122 = 0
        _temp_1120 = 20.4514973745659 + 46.1825383585028 * _temp_1122
    else:
        _temp_1120 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1124 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1124 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1124 = -1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1124 = -1
        else:
            _temp_1124 = 0
        _temp_1123 = 12.4528361541997 + 71.5255865540216 * _temp_1124
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1125 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1125 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1125 = -1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1125 = -1
        else:
            _temp_1125 = 0
        _temp_1123 = -12.4528361541997 + -71.5255865540216 * _temp_1125
    else:
        _temp_1123 = np.nan
    if (jmp.numeq(ETCHBACK_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1127 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1127 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1127 = -1
        else:
            _temp_1127 = np.nan
        _temp_1126 = 59.1893986005044 + -64.8021863988281 * _temp_1127
    elif (jmp.numeq(ETCHBACK_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1128 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1128 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1128 = -1
        else:
            _temp_1128 = np.nan
        _temp_1126 = -59.1893986005044 + 64.8021863988281 * _temp_1128
    else:
        _temp_1126 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1129 = 1066.78541547776
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1129 = -1066.78541547776
    else:
        _temp_1129 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1131 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1131 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1131 = -1
        else:
            _temp_1131 = np.nan
        _temp_1130 = -723.495029822118 + 763.342909926167 * _temp_1131
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1132 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1132 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1132 = -1
        else:
            _temp_1132 = np.nan
        _temp_1130 = 723.495029822118 + -763.342909926167 * _temp_1132
    else:
        _temp_1130 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_1134 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1134 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1134 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1134 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1134 = -1
        else:
            _temp_1134 = np.nan
        _temp_1133 = -183.293498461669 + 422.388041817919 * _temp_1134
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_1135 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1135 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1135 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1135 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1135 = -1
        else:
            _temp_1135 = np.nan
        _temp_1133 = 183.293498461669 + -422.388041817919 * _temp_1135
    else:
        _temp_1133 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1137 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1137 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1137 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1137 = -1
        else:
            _temp_1137 = 0
        _temp_1136 = -150.42703863743 + 739.518731882073 * _temp_1137
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1138 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1138 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1138 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1138 = -1
        else:
            _temp_1138 = 0
        _temp_1136 = 150.42703863743 + -739.518731882073 * _temp_1138
    else:
        _temp_1136 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1140 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1140 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1140 = -1
        else:
            _temp_1140 = 0
        _temp_1139 = -29.8769977455271 + -339.232534004677 * _temp_1140
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1141 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1141 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1141 = -1
        else:
            _temp_1141 = 0
        _temp_1139 = 29.8769977455271 + 339.232534004677 * _temp_1141
    else:
        _temp_1139 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1142 = 154.993656799373 + -4.72584495216165 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1142 = -154.993656799373 + 4.72584495216165 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_1142 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1144 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1144 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1144 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1144 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1144 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1144 = -1
        else:
            _temp_1144 = 0
        _temp_1143 = 185.273648770274 + 418.375595412096 * _temp_1144
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1145 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1145 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1145 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1145 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1145 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1145 = -1
        else:
            _temp_1145 = 0
        _temp_1143 = -185.273648770274 + -418.375595412096 * _temp_1145
    else:
        _temp_1143 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        _temp_1146 = 199.313561015525 + -0.0226762428902138 * indata[u"DR_PNL_HOLE_QTY"]
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        _temp_1146 = -199.313561015525 + 0.0226762428902138 * indata[u"DR_PNL_HOLE_QTY"]
    else:
        _temp_1146 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1148 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1148 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_1148 = -1
        else:
            _temp_1148 = 0
        _temp_1147 = 289.389898015562 + -1955.30632570515 * _temp_1148
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1149 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1149 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_1149 = -1
        else:
            _temp_1149 = 0
        _temp_1147 = -289.389898015562 + 1955.30632570515 * _temp_1149
    else:
        _temp_1147 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1151 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1151 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1151 = -1
        else:
            _temp_1151 = np.nan
        _temp_1150 = 379.926284033394 + -415.953776484837 * _temp_1151
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1152 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1152 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1152 = -1
        else:
            _temp_1152 = np.nan
        _temp_1150 = -379.926284033394 + 415.953776484837 * _temp_1152
    else:
        _temp_1150 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1154 = -307.072467931872
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1154 = 307.072467931872
        else:
            _temp_1154 = np.nan
        _temp_1153 = _temp_1154
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1155 = 307.072467931872
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1155 = -307.072467931872
        else:
            _temp_1155 = np.nan
        _temp_1153 = _temp_1155
    else:
        _temp_1153 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1157 = -399.802668031067
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1157 = 399.802668031067
        else:
            _temp_1157 = np.nan
        _temp_1156 = _temp_1157
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1158 = 399.802668031067
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1158 = -399.802668031067
        else:
            _temp_1158 = np.nan
        _temp_1156 = _temp_1158
    else:
        _temp_1156 = np.nan
    if (jmp.numeq(EXIST_LASER_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_1160 = -1122.20431644053
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_1160 = 1122.20431644053
        else:
            _temp_1160 = np.nan
        _temp_1159 = _temp_1160
    elif (jmp.numeq(EXIST_LASER_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_1161 = 1122.20431644053
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_1161 = -1122.20431644053
        else:
            _temp_1161 = np.nan
        _temp_1159 = _temp_1161
    else:
        _temp_1159 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_1162 = 754.080975454087
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_1162 = -754.080975454087
    else:
        _temp_1162 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"NONE"):
            _temp_1164 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_1164 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1164 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1164 = 1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_1164 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_1164 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
            _temp_1164 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
            _temp_1164 = -1
        else:
            _temp_1164 = np.nan
        _temp_1163 = -5342.56320959911 + 5856.66535988343 * _temp_1164
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"NONE"):
            _temp_1165 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_1165 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1165 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1165 = 1
        elif (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_1165 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_1165 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
            _temp_1165 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
            _temp_1165 = -1
        else:
            _temp_1165 = np.nan
        _temp_1163 = 5342.56320959911 + -5856.66535988343 * _temp_1165
    else:
        _temp_1163 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1167 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1167 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1167 = -1
        else:
            _temp_1167 = np.nan
        _temp_1166 = -1303.19255805346 + 1374.96839432779 * _temp_1167
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1168 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1168 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1168 = -1
        else:
            _temp_1168 = np.nan
        _temp_1166 = 1303.19255805346 + -1374.96839432779 * _temp_1168
    else:
        _temp_1166 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1170 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1170 = -1
        else:
            _temp_1170 = 0
        _temp_1169 = -125.548101226761 + -217.042822841725 * _temp_1170
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1171 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1171 = -1
        else:
            _temp_1171 = 0
        _temp_1169 = 125.548101226761 + 217.042822841725 * _temp_1171
    else:
        _temp_1169 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1173 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1173 = -1
        else:
            _temp_1173 = 0
        _temp_1172 = -107.749033633883 + 728.022534641548 * _temp_1173
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1174 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1174 = -1
        else:
            _temp_1174 = 0
        _temp_1172 = 107.749033633883 + -728.022534641548 * _temp_1174
    else:
        _temp_1172 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1176 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1176 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_1176 = -1
        else:
            _temp_1176 = 0
        _temp_1175 = -93.5258940557689 + 631.921755107845 * _temp_1176
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"PASTE_TYPE"] == u"THROUGH"):
            _temp_1177 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER"):
            _temp_1177 = 1
        elif (indata[u"PASTE_TYPE"] == u"LASER-THROUGH"):
            _temp_1177 = -1
        else:
            _temp_1177 = 0
        _temp_1175 = 93.5258940557689 + -631.921755107845 * _temp_1177
    else:
        _temp_1175 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_1179 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1179 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1179 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1179 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1179 = -1
        else:
            _temp_1179 = np.nan
        _temp_1178 = -50.7731835190099 + 117.003525730299 * _temp_1179
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"NONE"):
            _temp_1180 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1180 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1180 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1180 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1180 = -1
        else:
            _temp_1180 = np.nan
        _temp_1178 = 50.7731835190099 + -117.003525730299 * _temp_1180
    else:
        _temp_1178 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1182 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1182 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1182 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1182 = -1
        else:
            _temp_1182 = 0
        _temp_1181 = -36.0970795249109 + 177.457900632143 * _temp_1182
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1183 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1183 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1183 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1183 = -1
        else:
            _temp_1183 = 0
        _temp_1181 = 36.0970795249109 + -177.457900632143 * _temp_1183
    else:
        _temp_1181 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1185 = 1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1185 = -1
        else:
            _temp_1185 = 0
        _temp_1184 = -22.2308565673538 + 2674.72305857741 * _temp_1185
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1186 = 1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1186 = -1
        else:
            _temp_1186 = 0
        _temp_1184 = 22.2308565673538 + -2674.72305857741 * _temp_1186
    else:
        _temp_1184 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_1188 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_1188 = -1
        else:
            _temp_1188 = 0
        _temp_1187 = -10.4088743421686 + 57.0615989117446 * _temp_1188
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_1189 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_1189 = -1
        else:
            _temp_1189 = 0
        _temp_1187 = 10.4088743421686 + -57.0615989117446 * _temp_1189
    else:
        _temp_1187 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_1190 = 27.8499675577245 + -0.014786763377498 * indata[u"DL_PNL_HOLE_QTY"]
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_1190 = -27.8499675577245 + 0.014786763377498 * indata[u"DL_PNL_HOLE_QTY"]
    else:
        _temp_1190 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"NONE"):
            _temp_1192 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_1192 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1192 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1192 = -1
        else:
            _temp_1192 = 0
        _temp_1191 = 29.8501931851848 + 119.226921877692 * _temp_1192
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"NONE"):
            _temp_1193 = 1
        elif (indata[u"FINISH_CS"] == u"HAL"):
            _temp_1193 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_TIN"):
            _temp_1193 = -1
        elif (indata[u"FINISH_CS"] == u"CHM_GOLD"):
            _temp_1193 = -1
        else:
            _temp_1193 = 0
        _temp_1191 = -29.8501931851848 + -119.226921877692 * _temp_1193
    else:
        _temp_1191 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        _temp_1194 = 38.3427861749095 + -1.16909340832613 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        _temp_1194 = -38.3427861749095 + 1.16909340832613 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_1194 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FAI_TYPE"] == u"RC-06"):
            _temp_1196 = 1
        elif (indata[u"FAI_TYPE"] == u"RC-28"):
            _temp_1196 = 1
        elif (indata[u"FAI_TYPE"] == u"NONE"):
            _temp_1196 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_1196 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_1196 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_1196 = -1
        else:
            _temp_1196 = np.nan
        _temp_1195 = 87.7118035851348 + -96.9580188566819 * _temp_1196
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FAI_TYPE"] == u"RC-06"):
            _temp_1197 = 1
        elif (indata[u"FAI_TYPE"] == u"RC-28"):
            _temp_1197 = 1
        elif (indata[u"FAI_TYPE"] == u"NONE"):
            _temp_1197 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 REPORT"):
            _temp_1197 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9102 REPORT"):
            _temp_1197 = 1
        elif (indata[u"FAI_TYPE"] == u"PER AS9100 MICRO SECTION"):
            _temp_1197 = -1
        else:
            _temp_1197 = np.nan
        _temp_1195 = -87.7118035851348 + 96.9580188566819 * _temp_1197
    else:
        _temp_1195 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_1199 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_1199 = 1
        elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
            _temp_1199 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
            _temp_1199 = -1
        else:
            _temp_1199 = 0
        _temp_1198 = 297.817078771951 + -11805.9510186014 * _temp_1199
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"FINISH_CS"] == u"ENEPIG"):
            _temp_1200 = 1
        elif (indata[u"FINISH_CS"] == u"CHM_SILV"):
            _temp_1200 = 1
        elif (indata[u"FINISH_CS"] == u"FULL_SGLD"):
            _temp_1200 = -1
        elif (indata[u"FINISH_CS"] == u"FULL_HGLD"):
            _temp_1200 = -1
        else:
            _temp_1200 = 0
        _temp_1198 = -297.817078771951 + 11805.9510186014 * _temp_1200
    else:
        _temp_1198 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1202 = 81.6934165149653
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1202 = -81.6934165149653
        else:
            _temp_1202 = np.nan
        _temp_1201 = _temp_1202
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1203 = -81.6934165149653
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1203 = 81.6934165149653
        else:
            _temp_1203 = np.nan
        _temp_1201 = _temp_1203
    else:
        _temp_1201 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1205 = -309.59872499507
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1205 = 309.59872499507
        else:
            _temp_1205 = np.nan
        _temp_1204 = _temp_1205
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1206 = 309.59872499507
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1206 = -309.59872499507
        else:
            _temp_1206 = np.nan
        _temp_1204 = _temp_1206
    else:
        _temp_1204 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_1208 = -949.303621437707
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_1208 = 949.303621437707
        else:
            _temp_1208 = np.nan
        _temp_1207 = _temp_1208
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"EXIST_LASER"] == u"NO"):
            _temp_1209 = 949.303621437707
        elif (indata[u"EXIST_LASER"] == u"YES"):
            _temp_1209 = -949.303621437707
        else:
            _temp_1209 = np.nan
        _temp_1207 = _temp_1209
    else:
        _temp_1207 = np.nan
    if (jmp.numeq(HATS_COUPON_TYPE_asCode, 0)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_1211 = 674.31991475201
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_1211 = -674.31991475201
        else:
            _temp_1211 = np.nan
        _temp_1210 = _temp_1211
    elif (jmp.numeq(HATS_COUPON_TYPE_asCode, 1)):
        if (indata[u"PASTE_APPLY"] == u"NONE"):
            _temp_1212 = -674.31991475201
        elif (indata[u"PASTE_APPLY"] == u"VACUUM"):
            _temp_1212 = 674.31991475201
        else:
            _temp_1212 = np.nan
        _temp_1210 = _temp_1212
    else:
        _temp_1210 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1213 = 4042.47144455495
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1213 = -4042.47144455495
    else:
        _temp_1213 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1214 = -138.055819771689 + 0.0157068454629966 * indata[u"DR_PNL_HOLE_QTY"]
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1214 = 138.055819771689 + -0.0157068454629966 * indata[u"DR_PNL_HOLE_QTY"]
    else:
        _temp_1214 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1215 = -131.646867599148 + 4.01398804027599 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1215 = 131.646867599148 + -4.01398804027599 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_1215 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1217 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1217 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1217 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1217 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1217 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1217 = -1
        else:
            _temp_1217 = 0
        _temp_1216 = -104.714970099427 + -236.462056286425 * _temp_1217
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1218 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1218 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1218 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1218 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1218 = -1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1218 = -1
        else:
            _temp_1218 = 0
        _temp_1216 = 104.714970099427 + 236.462056286425 * _temp_1218
    else:
        _temp_1216 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1220 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1220 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1220 = -1
        else:
            _temp_1220 = 0
        _temp_1219 = 20.4592729099013 + 232.300817245203 * _temp_1220
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1221 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1221 = -1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1221 = -1
        else:
            _temp_1221 = 0
        _temp_1219 = -20.4592729099013 + -232.300817245203 * _temp_1221
    else:
        _temp_1219 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        _temp_1222 = 37.9117242478318 + -0.0201289891818978 * indata[u"DL_PNL_HOLE_QTY"]
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        _temp_1222 = -37.9117242478318 + 0.0201289891818978 * indata[u"DL_PNL_HOLE_QTY"]
    else:
        _temp_1222 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1224 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1224 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1224 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1224 = -1
        else:
            _temp_1224 = 0
        _temp_1223 = 82.8261986182205 + -407.184279658606 * _temp_1224
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        if (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS2"):
            _temp_1225 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6012 CLASS3"):
            _temp_1225 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6016 CLASS2"):
            _temp_1225 = 1
        elif (indata[u"WRAP_REQUIRMENT"] == u"IPC 6018 CLASS3"):
            _temp_1225 = -1
        else:
            _temp_1225 = 0
        _temp_1223 = -82.8261986182205 + 407.184279658606 * _temp_1225
    else:
        _temp_1223 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1227 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1227 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1227 = -1
        else:
            _temp_1227 = np.nan
        _temp_1226 = 608.960129518088 + -642.499779728469 * _temp_1227
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        if (indata[u"ROUTING_PHASE"] == u"NONE"):
            _temp_1228 = 1
        elif (indata[u"ROUTING_PHASE"] == u"HOLE"):
            _temp_1228 = -1
        elif (indata[u"ROUTING_PHASE"] == u"GOLD CONNECTOR"):
            _temp_1228 = -1
        else:
            _temp_1228 = np.nan
        _temp_1226 = -608.960129518088 + 642.499779728469 * _temp_1228
    else:
        _temp_1226 = np.nan
    if (jmp.numeq(PASTE_APPLY_asCode, 0)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1230 = 293.35156820083
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1230 = -293.35156820083
        else:
            _temp_1230 = np.nan
        _temp_1229 = _temp_1230
    elif (jmp.numeq(PASTE_APPLY_asCode, 1)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1231 = -293.35156820083
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1231 = 293.35156820083
        else:
            _temp_1231 = np.nan
        _temp_1229 = _temp_1231
    else:
        _temp_1229 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_1232 = 2180.17775315179
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_1232 = -2180.17775315179
    else:
        _temp_1232 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        _temp_1233 = -44.0980863336253 + 1.34457579105646 * indata[u"NUM_PCBS_PNL"]
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        _temp_1233 = 44.0980863336253 + -1.34457579105646 * indata[u"NUM_PCBS_PNL"]
    else:
        _temp_1233 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1235 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1235 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1235 = -1
        else:
            _temp_1235 = np.nan
        _temp_1234 = 234.140697753053 + -256.343694953773 * _temp_1235
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"SPEC"] == u"IPC 6013 CLASS3"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"MIL PRF 55110G"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"MIL P 50884E"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS2"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"IPC 6012 CLASS3"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"IPC 6013 CLASS2"):
            _temp_1236 = 1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS3"):
            _temp_1236 = -1
        elif (indata[u"SPEC"] == u"IPC 6018 CLASS2"):
            _temp_1236 = -1
        else:
            _temp_1236 = np.nan
        _temp_1234 = -234.140697753053 + 256.343694953773 * _temp_1236
    else:
        _temp_1234 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1238 = -86.3201351314959
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1238 = 86.3201351314959
        else:
            _temp_1238 = np.nan
        _temp_1237 = _temp_1238
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"CAM_LAYUP"] == u"CORE"):
            _temp_1239 = 86.3201351314959
        elif (indata[u"CAM_LAYUP"] == u"FOIL"):
            _temp_1239 = -86.3201351314959
        else:
            _temp_1239 = np.nan
        _temp_1237 = _temp_1239
    else:
        _temp_1237 = np.nan
    if (jmp.numeq(SEL_PLT_asCode, 0)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1241 = 90.7217869701312
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1241 = -90.7217869701312
        else:
            _temp_1241 = np.nan
        _temp_1240 = _temp_1241
    elif (jmp.numeq(SEL_PLT_asCode, 1)):
        if (indata[u"ETCHBACK"] == u"NO"):
            _temp_1242 = -90.7217869701312
        elif (indata[u"ETCHBACK"] == u"YES"):
            _temp_1242 = 90.7217869701312
        else:
            _temp_1242 = np.nan
        _temp_1240 = _temp_1242
    else:
        _temp_1240 = np.nan
    outdata[u"Add"] = 68350.8613686025 + -1868.64902840613 * indata[u"Assembly_scrap"] + 416893.079565172 * indata[u"CAM_PNL_SIZE_X"] + 185290.182271974 * indata[u"CAM_PNL_SIZE_Y"] + -147701.015690439 * indata[u"Costing_Lot_Size_Panels"] + -0.335078543271278 * indata[u"DL_PNL_HOLE_QTY"] + 0.0197159846401818 * indata[u"DR_PNL_HOLE_QTY"] + -487207.541051951 * indata[u"FINISH_THK"] + 150419.969703727 * indata[u"NUM_DESIGN_LAYERS"] + -64006.1388751878 * indata[u"NUM_PCBS_PNL"] + -30777.4976990265 * indata[u"PANEL_XY"] + -2095.03228850761 * _temp_15 + 290475.038409582 * _temp_16 + 132954.05892828 * _temp_17 + 0.000291630212890055 * _temp_18 + 0.0275590551181102 * _temp_19 + -0.0252260134149898 * _temp_20 + -0.203412073490814 * _temp_21 + 0.547098279381744 * _temp_22 + -338.761154855643 * _temp_23 + -7.45261009040537 * _temp_24 + -1.78392884222805 * _temp_25 + 0.0880723242927967 * _temp_26 + -0.148002333041703 * _temp_27 + -0.148002333041703 * _temp_28 + -0.912219305920093 * _temp_29 + -0.832020997375328 * _temp_30 + -0.0603674540682415 * _temp_31 + -0.912219305920093 * _temp_32 + -0.00627004957713619 * _temp_33 + 0.547098279381744 * _temp_34 + -0.148002333041703 * _temp_35 + -0.148002333041703 * _temp_36 + -0.0252260134149898 * _temp_37 + 0.0275590551181102 * _temp_38 + -0.832020997375328 * _temp_39 + 0.000291630212890055 * _temp_40 + -0.0603674540682415 * _temp_41 + -0.0603674540682415 * _temp_42 + 0.0275590551181102 * _temp_43 + -0.832020997375328 * _temp_44 + -0.654418197725284 * _temp_45 + 0.544489681571956 * _temp_46 + 1.16743549780104 * _temp_47 + -0.00343033333528944 * _temp_48 + -0.975984400122435 * _temp_49 + -15.5923009623797 * _temp_50 + 0.250364537766113 * _temp_51 + -0.455197256073524 * _temp_52 + 0.547098279381744 * _temp_53 + -13.9201662292213 * _temp_54 + 6.20072808046851 * _temp_55 + -7.45261009040537 * _temp_56 + -0.00627004957713619 * _temp_57 + -338.761154855643 * _temp_58 + -4.94867308253135 * _temp_59 + 4.87712366371235 * _temp_60 + 1.4842662545572 * _temp_61 + -0.904636920384952 * _temp_62 + -1.78392884222805 * _temp_63 + -0.358031069971605 * _temp_64 + -0.18241469816273 * _temp_65 + 0.0111853222828531 * _temp_66 + 0.00410323454391765 * _temp_67 + 0.0680956547098279 * _temp_68 + 0.0137865600230515 * _temp_69 + -0.00772820064158647 * _temp_70 + -0.912219305920093 * _temp_71 + 0.000291630212890055 * _temp_72 + -7.45261009040537 * _temp_73 + -0.832020997375328 * _temp_76 + -0.654418197725284 * _temp_79 + -0.00772820064158647 * _temp_82 + -0.00627004957713619 * _temp_85 + 34057.0480201215 * _temp_88 + -969.389374447748 * _temp_89 + 33916.095975651 * _temp_90 + 11863.9480498138 * _temp_91 + 8372.3446429172 * _temp_92 + 1749808.08206175 * _temp_93 + 9863559.13180922 * _temp_94 + 21799335.4719737 * _temp_95 + 7603.28407197606 * _temp_96 + -498641.191453318 * _temp_97 + 7287702.85511933 * _temp_98 + -8225.03549545286 * _temp_99 + -1309855.02769586 * _temp_100 + -1767742.58421868 * _temp_101 + 2914425.9020865 * _temp_102 + 3823801.41969546 * _temp_103 + 1579.81196402463 * _temp_104 + -163566.405950853 * _temp_105 + -530666.186686745 * _temp_106 + 194779.916323059 * _temp_107 + -0.0603674540682415 * _temp_108 + -0.832020997375328 * _temp_109 + 0.0680956547098279 * _temp_110 + -0.00627004957713619 * _temp_111 + -4.94867308253135 * _temp_112 + -338.761154855643 * _temp_113 + -13.9201662292213 * _temp_114 + 0.547098279381744 * _temp_115 + -0.654418197725284 * _temp_116 + -0.00772820064158647 * _temp_117 + 0.000291630212890055 * _temp_118 + -6166791.3769736 * _temp_119 + -65352.7393929473 * _temp_120 + -12426642.4702442 * _temp_121 + 185670.168759845 * _temp_122 + -23304525.811882 * _temp_123 + -2964662.66791098 * _temp_124 + 0.000291630212890055 * _temp_125 + -0.0603674540682415 * _temp_126 + -0.832020997375328 * _temp_127 + 0.0275590551181102 * _temp_128 + 0.0137865600230515 * _temp_129 + -0.00772820064158647 * _temp_130 + -0.0252260134149898 * _temp_131 + -1.78392884222805 * _temp_132 + 0.0111853222828531 * _temp_133 + -0.18241469816273 * _temp_134 + -13.9201662292213 * _temp_135 + 0.578448527267425 * _temp_136 + 0.0000484562011648029 * _temp_137 + 1.4842662545572 * _temp_138 + -0.00627004957713619 * _temp_139 + -0.904636920384952 * _temp_140 + -7.45261009040537 * _temp_141 + 4.87712366371235 * _temp_142 + -0.358031069971605 * _temp_143 + -338.761154855643 * _temp_144 + -4.0773101573638 * _temp_145 + -0.975984400122435 * _temp_146 + 0.250364537766113 * _temp_147 + -0.00343033333528944 * _temp_148 + 0.0680956547098279 * _temp_149 + 0.544489681571956 * _temp_150 + 0.547098279381744 * _temp_151 + -15.5923009623797 * _temp_152 + -0.654418197725284 * _temp_153 + 6.20072808046851 * _temp_154 + 1.16743549780104 * _temp_155 + 0.449895097321059 * _temp_156 + -0.912219305920093 * _temp_157 + -19385.3722371542 * _temp_158 + 23293.7759763412 * _temp_159 + -1816.13851338347 * _temp_160 + 404.350809447554 * _temp_161 + -46536.5769529553 * _temp_162 + 81283.4376208701 * _temp_163 + -28061.2254952073 * _temp_164 + -0.0603674540682415 * _temp_165 + -0.832020997375328 * _temp_166 + 0.0275590551181102 * _temp_167 + -0.0252260134149898 * _temp_168 + -4.94867308253135 * _temp_169 + -1.78392884222805 * _temp_170 + -0.654418197725284 * _temp_171 + -0.00772820064158647 * _temp_172 + -0.912219305920093 * _temp_173 + 0.000291630212890055 * _temp_174 + -1133.35864238365 * _temp_175 + 4071.83945776281 * _temp_176 + 3159.24056106152 * _temp_177 + -36985.0872297392 * _temp_178 + -14051.0784945611 * _temp_179 + -113.289520556195 * _temp_180 + -696.512152527556 * _temp_181 + -154171.445013649 * _temp_182 + -3072.45425657685 * _temp_183 + -584.498685953914 * _temp_184 + 18969.92493328 * _temp_185 + -0.53286713649728 * indata[u"Assembly_scrap"] * indata[u"Costing_Lot_Size_Panels"] + -0.000530306590843552 * indata[u"Assembly_scrap"] * indata[u"DL_PNL_HOLE_QTY"] + 0.537653254489873 * indata[u"Assembly_scrap"] * indata[u"NUM_DESIGN_LAYERS"] + 0.0273007245317021 * indata[u"Assembly_scrap"] * indata[u"PANEL_XY"] + indata[u"Assembly_scrap"] * _temp_186 + -26186.6864890531 * indata[u"Assembly_scrap"] * _temp_187 + -2904.12577137268 * indata[u"Assembly_scrap"] * _temp_188 + 6410.54996621808 * indata[u"Assembly_scrap"] * _temp_189 + 1591.27002224275 * indata[u"Assembly_scrap"] * _temp_190 + 10826.262502128 * indata[u"Assembly_scrap"] * _temp_191 + -17318.7460846021 * indata[u"Assembly_scrap"] * _temp_192 + 6695.09295998518 * indata[u"Assembly_scrap"] * _temp_193 + -3598.86561831031 * indata[u"Assembly_scrap"] * _temp_194 + -10251.4591691152 * indata[u"Assembly_scrap"] * _temp_195 + -13992.6429839735 * indata[u"Assembly_scrap"] * _temp_196 + indata[u"Assembly_scrap"] * _temp_197 + -237.86081947523 * indata[u"Assembly_scrap"] * _temp_198 + -438.649217656081 * indata[u"Assembly_scrap"] * _temp_199 + -1359.15798787756 * indata[u"Assembly_scrap"] * _temp_200 + -2170.26878986303 * indata[u"Assembly_scrap"] * _temp_201 + indata[u"Assembly_scrap"] * _temp_202 + 364.779816715637 * indata[u"Assembly_scrap"] * _temp_203 + 58.1291048416573 * indata[u"Assembly_scrap"] * _temp_204 + 26.5193051053921 * indata[u"Assembly_scrap"] * _temp_205 + -3.80005898174382 * indata[u"Assembly_scrap"] * _temp_206 + 3.7681348936616 * indata[u"Assembly_scrap"] * _temp_207 + -49.726843028338 * indata[u"Assembly_scrap"] * _temp_208 + 27.0375211284925 * indata[u"Assembly_scrap"] * _temp_209 + 11.9704150303724 * indata[u"Assembly_scrap"] * _temp_210 + -19.180843803472 * indata[u"Assembly_scrap"] * _temp_211 + 2.52400138574555 * indata[u"CAM_PNL_SIZE_X"] * indata[u"Costing_Lot_Size_Panels"] + 65.6465571074736 * indata[u"CAM_PNL_SIZE_X"] * indata[u"FINISH_THK"] + -2020.043380344 * indata[u"CAM_PNL_SIZE_X"] * _temp_212 + -4069.66894554339 * indata[u"CAM_PNL_SIZE_X"] * _temp_213 + indata[u"CAM_PNL_SIZE_X"] * _temp_214 + 77.5500009362205 * indata[u"CAM_PNL_SIZE_X"] * _temp_215 + 40.9061645040778 * indata[u"CAM_PNL_SIZE_X"] * _temp_216 + -135411.572807588 * indata[u"CAM_PNL_SIZE_X"] * _temp_217 + -1189687.700304 * indata[u"CAM_PNL_SIZE_X"] * _temp_218 + -2614786.56357189 * indata[u"CAM_PNL_SIZE_X"] * _temp_219 + 313.719178366264 * indata[u"CAM_PNL_SIZE_X"] * _temp_220 + 28218.0937920174 * indata[u"CAM_PNL_SIZE_X"] * _temp_221 + -712667.778957372 * indata[u"CAM_PNL_SIZE_X"] * _temp_222 + -13235.3753819418 * indata[u"CAM_PNL_SIZE_X"] * _temp_223 + 186033.27586563 * indata[u"CAM_PNL_SIZE_X"] * _temp_224 + -312019.066761519 * indata[u"CAM_PNL_SIZE_X"] * _temp_225 + -440077.499025327 * indata[u"CAM_PNL_SIZE_X"] * _temp_226 + -321.462153573998 * indata[u"CAM_PNL_SIZE_X"] * _temp_227 + -34806.3170638509 * indata[u"CAM_PNL_SIZE_X"] * _temp_228 + -60130.3713186294 * indata[u"CAM_PNL_SIZE_X"] * _temp_229 + 364256.129963167 * indata[u"CAM_PNL_SIZE_X"] * _temp_230 + 956.334569618495 * indata[u"CAM_PNL_SIZE_X"] * _temp_231 + 728656.929687121 * indata[u"CAM_PNL_SIZE_X"] * _temp_232 + -14403.1497269634 * indata[u"CAM_PNL_SIZE_X"] * _temp_233 + 1584862.39808249 * indata[u"CAM_PNL_SIZE_X"] * _temp_234 + indata[u"CAM_PNL_SIZE_X"] * _temp_235 + 750.92182941809 * indata[u"CAM_PNL_SIZE_X"] * _temp_236 + 677.126051435737 * indata[u"CAM_PNL_SIZE_X"] * _temp_237 + -48.9415799190349 * indata[u"CAM_PNL_SIZE_X"] * _temp_238 + 963.174293939769 * indata[u"CAM_PNL_SIZE_X"] * _temp_239 + 485.293194323284 * indata[u"CAM_PNL_SIZE_X"] * _temp_240 + 245.46437957551 * indata[u"CAM_PNL_SIZE_X"] * _temp_241 + 3.55483994609427 * indata[u"CAM_PNL_SIZE_Y"] * indata[u"Costing_Lot_Size_Panels"] + 80.1083586778337 * indata[u"CAM_PNL_SIZE_Y"] * indata[u"FINISH_THK"] + 0.149579919629971 * indata[u"CAM_PNL_SIZE_Y"] * indata[u"NUM_PCBS_PNL"] + -2528.63033140226 * indata[u"CAM_PNL_SIZE_Y"] * _temp_242 + -5124.7856892553 * indata[u"CAM_PNL_SIZE_Y"] * _temp_243 + 77.6383364507217 * indata[u"CAM_PNL_SIZE_Y"] * _temp_244 + 36.8763215493573 * indata[u"CAM_PNL_SIZE_Y"] * _temp_245 + 9613.03071629995 * indata[u"CAM_PNL_SIZE_Y"] * _temp_246 + -428392.817081484 * indata[u"CAM_PNL_SIZE_Y"] * _temp_247 + -866917.637550457 * indata[u"CAM_PNL_SIZE_Y"] * _temp_248 + 26157.5567648789 * indata[u"CAM_PNL_SIZE_Y"] * _temp_249 + -201697.184820782 * indata[u"CAM_PNL_SIZE_Y"] * _temp_250 + -26145.1183423204 * indata[u"CAM_PNL_SIZE_Y"] * _temp_251 + -17261.6594421483 * indata[u"CAM_PNL_SIZE_Y"] * _temp_252 + 35581.071312982 * indata[u"CAM_PNL_SIZE_Y"] * _temp_253 + 935.990531164454 * indata[u"CAM_PNL_SIZE_Y"] * _temp_254 + 71143.3303784089 * indata[u"CAM_PNL_SIZE_Y"] * _temp_255 + 493.512633618198 * indata[u"CAM_PNL_SIZE_Y"] * _temp_256 + 464.207920768555 * indata[u"CAM_PNL_SIZE_Y"] * _temp_257 + 504.286102249025 * indata[u"CAM_PNL_SIZE_Y"] * _temp_258 + -20.9923596852147 * indata[u"CAM_PNL_SIZE_Y"] * _temp_259 + -977.506456642889 * indata[u"CAM_PNL_SIZE_Y"] * _temp_260 + -478.516794220183 * indata[u"CAM_PNL_SIZE_Y"] * _temp_261 + -247.527067482907 * indata[u"CAM_PNL_SIZE_Y"] * _temp_262 + -206.356327339445 * indata[u"CAM_PNL_SIZE_Y"] * _temp_263 + 0.000876111049666086 * indata[u"Costing_Lot_Size_Panels"] * indata[u"DL_PNL_HOLE_QTY"] + -1.01106165744642 * indata[u"Costing_Lot_Size_Panels"] * indata[u"NUM_DESIGN_LAYERS"] + -0.362181627290467 * indata[u"Costing_Lot_Size_Panels"] * indata[u"NUM_PCBS_PNL"] + -10.977572865372 * indata[u"Costing_Lot_Size_Panels"] * _temp_264 + 174.898224001562 * indata[u"Costing_Lot_Size_Panels"] * _temp_265 + 355.874486153881 * indata[u"Costing_Lot_Size_Panels"] * _temp_266 + indata[u"Costing_Lot_Size_Panels"] * _temp_267 + -5.08671122112088 * indata[u"Costing_Lot_Size_Panels"] * _temp_268 + 9816.96727419689 * indata[u"Costing_Lot_Size_Panels"] * _temp_269 + 19699.5896397307 * indata[u"Costing_Lot_Size_Panels"] * _temp_270 + -2257.19756002981 * indata[u"Costing_Lot_Size_Panels"] * _temp_271 + -392301.45566623 * indata[u"Costing_Lot_Size_Panels"] * _temp_272 + 396048.700194892 * indata[u"Costing_Lot_Size_Panels"] * _temp_273 + 200288.62798091 * indata[u"Costing_Lot_Size_Panels"] * _temp_274 + 298202.818656257 * indata[u"Costing_Lot_Size_Panels"] * _temp_275 + indata[u"Costing_Lot_Size_Panels"] * _temp_276 + 43328.9435988495 * indata[u"Costing_Lot_Size_Panels"] * _temp_277 + -23.2608700824372 * indata[u"Costing_Lot_Size_Panels"] * _temp_278 + 86619.0812947026 * indata[u"Costing_Lot_Size_Panels"] * _temp_279 + -4442.61471072194 * indata[u"Costing_Lot_Size_Panels"] * _temp_280 + 168634.370053398 * indata[u"Costing_Lot_Size_Panels"] * _temp_281 + -59.1347165793074 * indata[u"Costing_Lot_Size_Panels"] * _temp_282 + -81.9371506399402 * indata[u"Costing_Lot_Size_Panels"] * _temp_283 + -41.4298605162862 * indata[u"Costing_Lot_Size_Panels"] * _temp_284 + -26.6142986379169 * indata[u"Costing_Lot_Size_Panels"] * _temp_285 + -4.78279471428555 * indata[u"Costing_Lot_Size_Panels"] * _temp_286 + indata[u"Costing_Lot_Size_Panels"] * _temp_287 + 334.916578056573 * indata[u"Costing_Lot_Size_Panels"] * _temp_288 + 166.314359905494 * indata[u"Costing_Lot_Size_Panels"] * _temp_289 + -95.4312509227887 * indata[u"Costing_Lot_Size_Panels"] * _temp_290 + 6.96085627744999 * indata[u"Costing_Lot_Size_Panels"] * _temp_291 + -0.0000002667849018701 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"DR_PNL_HOLE_QTY"] + 0.0102279493599849 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"FINISH_THK"] + 0.00150895268164316 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"NUM_DESIGN_LAYERS"] + 0.0000585495710851996 * indata[u"DL_PNL_HOLE_QTY"] * indata[u"PANEL_XY"] + -0.0548588910516584 * indata[u"DL_PNL_HOLE_QTY"] * _temp_292 + -0.0205169132513658 * indata[u"DL_PNL_HOLE_QTY"] * _temp_293 + 0.00681239672813659 * indata[u"DL_PNL_HOLE_QTY"] * _temp_294 + 0.0104487240658417 * indata[u"DL_PNL_HOLE_QTY"] * _temp_295 + 0.225356272211234 * indata[u"DL_PNL_HOLE_QTY"] * _temp_296 + -0.0104336186022366 * indata[u"DL_PNL_HOLE_QTY"] * _temp_297 + 0.463250913885271 * indata[u"DL_PNL_HOLE_QTY"] * _temp_298 + -0.939232919895658 * indata[u"DL_PNL_HOLE_QTY"] * _temp_299 + -0.0385590371205852 * indata[u"DL_PNL_HOLE_QTY"] * _temp_300 + -0.017849970493114 * indata[u"DL_PNL_HOLE_QTY"] * _temp_301 + -0.00534625749999704 * indata[u"DL_PNL_HOLE_QTY"] * _temp_302 + -0.066639058901572 * indata[u"DL_PNL_HOLE_QTY"] * _temp_303 + 0.0182113769078786 * indata[u"DL_PNL_HOLE_QTY"] * _temp_304 + 0.00383379828869309 * indata[u"DL_PNL_HOLE_QTY"] * _temp_305 + -0.00052601661588528 * indata[u"DR_PNL_HOLE_QTY"] * indata[u"NUM_DESIGN_LAYERS"] + 0.00337992820387456 * indata[u"DR_PNL_HOLE_QTY"] * _temp_306 + -0.00206303777816548 * indata[u"DR_PNL_HOLE_QTY"] * _temp_307 + -0.00170217554403666 * indata[u"DR_PNL_HOLE_QTY"] * _temp_308 + 0.0146753532814241 * indata[u"DR_PNL_HOLE_QTY"] * _temp_309 + 0.0240168088529229 * indata[u"DR_PNL_HOLE_QTY"] * _temp_310 + 0.00922752889878725 * indata[u"DR_PNL_HOLE_QTY"] * _temp_311 + 0.00530746178250386 * indata[u"DR_PNL_HOLE_QTY"] * _temp_312 + -10.6204098572164 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] + -3.35874990507753 * indata[u"FINISH_THK"] * indata[u"PANEL_XY"] + -1.63092286712164 * indata[u"FINISH_THK"] * _temp_313 + -318.422630702967 * indata[u"FINISH_THK"] * _temp_314 + indata[u"FINISH_THK"] * _temp_315 + -0.654418197725284 * indata[u"FINISH_THK"] * _temp_316 + 0.547098279381744 * indata[u"FINISH_THK"] * _temp_317 + -0.832020997375328 * indata[u"FINISH_THK"] * _temp_318 + indata[u"FINISH_THK"] * _temp_319 + -0.00627004957713619 * indata[u"FINISH_THK"] * _temp_320 + -0.00772820064158647 * indata[u"FINISH_THK"] * _temp_321 + 49.899722051315 * indata[u"FINISH_THK"] * _temp_322 + 953157.884286635 * indata[u"FINISH_THK"] * _temp_323 + 55812.0307211945 * indata[u"FINISH_THK"] * _temp_324 + -1039307.73872654 * indata[u"FINISH_THK"] * _temp_325 + 103.313494227132 * indata[u"FINISH_THK"] * _temp_326 + 4945.78776448641 * indata[u"FINISH_THK"] * _temp_327 + 506054.845689987 * indata[u"FINISH_THK"] * _temp_328 + -98698.8650172697 * indata[u"FINISH_THK"] * _temp_329 + -4934.89366689991 * indata[u"FINISH_THK"] * _temp_330 + -1004122.62126978 * indata[u"FINISH_THK"] * _temp_331 + 985177.983158071 * indata[u"FINISH_THK"] * _temp_332 + -361.454723482715 * indata[u"FINISH_THK"] * _temp_333 + 1970566.43447339 * indata[u"FINISH_THK"] * _temp_334 + 70667.7425701009 * indata[u"FINISH_THK"] * _temp_335 + 3850434.26774869 * indata[u"FINISH_THK"] * _temp_336 + -0.00772820064158647 * indata[u"FINISH_THK"] * _temp_337 + indata[u"FINISH_THK"] * _temp_338 + -0.00627004957713619 * indata[u"FINISH_THK"] * _temp_339 + -0.832020997375328 * indata[u"FINISH_THK"] * _temp_340 + 0.547098279381744 * indata[u"FINISH_THK"] * _temp_341 + -0.654418197725284 * indata[u"FINISH_THK"] * _temp_342 + -5907.98826325966 * indata[u"FINISH_THK"] * _temp_343 + 2767.91965561258 * indata[u"FINISH_THK"] * _temp_344 + -515.788987995785 * indata[u"FINISH_THK"] * _temp_345 + -272.377781811261 * indata[u"FINISH_THK"] * _temp_346 + -40334.3460720798 * indata[u"FINISH_THK"] * _temp_347 + 2327.78932761551 * indata[u"FINISH_THK"] * _temp_348 + indata[u"FINISH_THK"] * _temp_349 + 0.638983822956223 * indata[u"NUM_DESIGN_LAYERS"] * indata[u"NUM_PCBS_PNL"] + -0.0635393287866651 * indata[u"NUM_DESIGN_LAYERS"] * indata[u"PANEL_XY"] + 46.3915420679498 * indata[u"NUM_DESIGN_LAYERS"] * _temp_350 + -45.9986076036844 * indata[u"NUM_DESIGN_LAYERS"] * _temp_351 + indata[u"NUM_DESIGN_LAYERS"] * _temp_352 + -0.832020997375328 * indata[u"NUM_DESIGN_LAYERS"] * _temp_353 + indata[u"NUM_DESIGN_LAYERS"] * _temp_354 + -0.654418197725284 * indata[u"NUM_DESIGN_LAYERS"] * _temp_355 + indata[u"NUM_DESIGN_LAYERS"] * _temp_356 + -217206.697764357 * indata[u"NUM_DESIGN_LAYERS"] * _temp_359 + -121894.165272731 * indata[u"NUM_DESIGN_LAYERS"] * _temp_360 + -160946.474751568 * indata[u"NUM_DESIGN_LAYERS"] * _temp_361 + -395.648306632126 * indata[u"NUM_DESIGN_LAYERS"] * _temp_362 + -4933.6108892263 * indata[u"NUM_DESIGN_LAYERS"] * _temp_363 + -172014.833649686 * indata[u"NUM_DESIGN_LAYERS"] * _temp_364 + 134117.188636206 * indata[u"NUM_DESIGN_LAYERS"] * _temp_365 + 391.777754262347 * indata[u"NUM_DESIGN_LAYERS"] * _temp_366 + 4930.27787828984 * indata[u"NUM_DESIGN_LAYERS"] * _temp_367 + 219682.443030391 * indata[u"NUM_DESIGN_LAYERS"] * _temp_368 + -197831.823175 * indata[u"NUM_DESIGN_LAYERS"] * _temp_369 + 2.34120900540394 * indata[u"NUM_DESIGN_LAYERS"] * _temp_370 + -395670.313594717 * indata[u"NUM_DESIGN_LAYERS"] * _temp_371 + 5770.18721111992 * indata[u"NUM_DESIGN_LAYERS"] * _temp_372 + -766697.144598238 * indata[u"NUM_DESIGN_LAYERS"] * _temp_373 + indata[u"NUM_DESIGN_LAYERS"] * _temp_374 + -0.654418197725284 * indata[u"NUM_DESIGN_LAYERS"] * _temp_375 + 0.547098279381744 * indata[u"NUM_DESIGN_LAYERS"] * _temp_376 + -0.832020997375328 * indata[u"NUM_DESIGN_LAYERS"] * _temp_377 + -0.0603674540682415 * indata[u"NUM_DESIGN_LAYERS"] * _temp_378 + 61.3005728461669 * indata[u"NUM_DESIGN_LAYERS"] * _temp_379 + 50.4139993083685 * indata[u"NUM_DESIGN_LAYERS"] * _temp_380 + 9.96970077708679 * indata[u"NUM_DESIGN_LAYERS"] * _temp_381 + -4704.45214696957 * indata[u"NUM_DESIGN_LAYERS"] * _temp_382 + 9.90236092376622 * indata[u"NUM_DESIGN_LAYERS"] * _temp_383 + 323.67692025217 * indata[u"NUM_DESIGN_LAYERS"] * _temp_384 + 156.916261174176 * indata[u"NUM_DESIGN_LAYERS"] * _temp_385 + 92.6669703296345 * indata[u"NUM_DESIGN_LAYERS"] * _temp_386 + -7.61843638177412 * indata[u"NUM_DESIGN_LAYERS"] * _temp_387 + -0.403009383598197 * indata[u"NUM_PCBS_PNL"] * _temp_388 + 10.0437402505266 * indata[u"NUM_PCBS_PNL"] * _temp_389 + 2.78435476399122 * indata[u"NUM_PCBS_PNL"] * _temp_390 + 1.34373836131786 * indata[u"NUM_PCBS_PNL"] * _temp_391 + 3.23756929734346 * indata[u"NUM_PCBS_PNL"] * _temp_392 + 64003.2020399774 * indata[u"NUM_PCBS_PNL"] * _temp_393 + 128005.100653045 * indata[u"NUM_PCBS_PNL"] * _temp_394 + 1138.93632031445 * indata[u"NUM_PCBS_PNL"] * _temp_395 + 258364.71243045 * indata[u"NUM_PCBS_PNL"] * _temp_396 + 3.75378531297469 * indata[u"NUM_PCBS_PNL"] * _temp_397 + 3.48022887294384 * indata[u"NUM_PCBS_PNL"] * _temp_398 + -5.60791190799547 * indata[u"NUM_PCBS_PNL"] * _temp_399 + -2.54682707794278 * indata[u"NUM_PCBS_PNL"] * _temp_400 + -1.01413449633518 * indata[u"NUM_PCBS_PNL"] * _temp_401 + 0.783757429575261 * indata[u"NUM_PCBS_PNL"] * _temp_402 + 0.561310652630559 * indata[u"NUM_PCBS_PNL"] * _temp_403 + -2.28936439064183 * indata[u"NUM_PCBS_PNL"] * _temp_404 + -0.941175061221171 * indata[u"NUM_PCBS_PNL"] * _temp_405 + 126.251755918002 * indata[u"PANEL_XY"] * _temp_406 + 255.106692144283 * indata[u"PANEL_XY"] * _temp_407 + indata[u"PANEL_XY"] * _temp_408 + indata[u"PANEL_XY"] * _temp_409 + -4.10900258015928 * indata[u"PANEL_XY"] * _temp_410 + -1.98192013541888 * indata[u"PANEL_XY"] * _temp_411 + -1694.9461712403 * indata[u"PANEL_XY"] * _temp_412 + 59668.8070599989 * indata[u"PANEL_XY"] * _temp_413 + 121076.292399443 * indata[u"PANEL_XY"] * _temp_414 + -8.16097676731398 * indata[u"PANEL_XY"] * _temp_415 + -1513.04700208052 * indata[u"PANEL_XY"] * _temp_416 + 30678.3796272082 * indata[u"PANEL_XY"] * _temp_417 + 8.39046110825905 * indata[u"PANEL_XY"] * _temp_418 + 1511.89988115085 * indata[u"PANEL_XY"] * _temp_419 + indata[u"PANEL_XY"] * _temp_420 + -53.5118680064545 * indata[u"PANEL_XY"] * _temp_421 + indata[u"PANEL_XY"] * _temp_422 + -32.941869682967 * indata[u"PANEL_XY"] * _temp_423 + -31.6709427154439 * indata[u"PANEL_XY"] * _temp_424 + 1.0269018762703 * indata[u"PANEL_XY"] * _temp_425 + 5.41858813283174 * indata[u"PANEL_XY"] * _temp_426 + _temp_427 * _temp_428 + 1261.16046160172 * _temp_429 * _temp_430 + 640.097449765914 * _temp_431 * _temp_432 + _temp_433 * _temp_434 + -498.608380077648 * _temp_435 * _temp_436 + 974.098639783706 * _temp_437 * _temp_438 + 341.3752432839 * _temp_439 * _temp_440 + _temp_441 * _temp_442 + 1081.52931450658 * _temp_443 * _temp_444 + -255.765019009558 * _temp_445 * _temp_446 + -771.722597431015 * _temp_447 * _temp_448 + -16456.393865119 * _temp_449 * _temp_450 + 7767.98365123076 * _temp_451 * _temp_452 + 16467.5998182984 * _temp_453 * _temp_454 + -8140.85726911936 * _temp_455 * _temp_456 + -248265.566482785 * _temp_457 * _temp_458 + -448170.424397753 * _temp_459 * _temp_460 + -98.0710398246367 * _temp_461 * _temp_462 + -121.153494407487 * _temp_463 * _temp_464 + -47675.5956728113 * _temp_465 * _temp_466 + 96039.657892961 * _temp_467 * _temp_468 + _temp_469 * _temp_470 + _temp_471 * _temp_472 + _temp_473 * _temp_474 + _temp_475 * _temp_476 + _temp_477 * _temp_478 + _temp_479 * _temp_480 + _temp_481 * _temp_482 + _temp_483 * _temp_484 + _temp_485 * _temp_486 + _temp_487 * _temp_488 + _temp_489 * _temp_490 + _temp_491 * _temp_492 + _temp_493 * _temp_494 + _temp_495 * _temp_496 + _temp_497 * _temp_498 + _temp_499 * _temp_500 + _temp_501 * _temp_502 + _temp_503 * _temp_504 + _temp_505 * _temp_506 + _temp_507 * _temp_508 + _temp_509 * _temp_510 + _temp_511 * _temp_512 + _temp_513 * _temp_514 + _temp_515 * _temp_516 + _temp_517 * _temp_518 + -0.654418197725284 * _temp_519 * _temp_520 + -0.832020997375328 * _temp_521 * _temp_522 + -1.78392884222805 * _temp_523 * _temp_524 + -0.00627004957713619 * _temp_525 * _temp_526 + 0.547098279381744 * _temp_527 * _temp_528 + -1.78392884222805 * _temp_529 * _temp_530 + _temp_531 * _temp_532 + -0.832020997375328 * _temp_533 * _temp_534 + 0.547098279381744 * _temp_535 * _temp_536 + _temp_537 * _temp_538 + -7.45261009040537 * _temp_539 * _temp_540 + _temp_541 * _temp_542 + -7.45261009040537 * _temp_543 * _temp_544 + -1.78392884222805 * _temp_545 * _temp_546 + _temp_547 * _temp_548 + -0.654418197725284 * _temp_549 * _temp_550 + 0.547098279381744 * _temp_551 * _temp_552 + _temp_553 * _temp_554 + -1.78392884222805 * _temp_555 * _temp_556 + -0.654418197725284 * _temp_557 * _temp_558 + -0.00627004957713619 * _temp_559 * _temp_560 + -1.78392884222805 * _temp_561 * _temp_562 + _temp_563 * _temp_564 + _temp_565 * _temp_566 + _temp_567 * _temp_568 + _temp_569 * _temp_572 + _temp_573 * _temp_576 + _temp_577 * _temp_580 + _temp_581 * _temp_584 + 6790.87168780169 * _temp_585 * _temp_586 + 3689.98815751532 * _temp_587 * _temp_588 + -1488.70492293799 * _temp_589 * _temp_590 + -33821.5530952129 * _temp_591 * _temp_592 + -160.379118386414 * _temp_593 * _temp_594 + -67402.4116512222 * _temp_595 * _temp_596 + 134817.491836867 * _temp_597 * _temp_598 + _temp_599 * _temp_600 + -709.067475428997 * _temp_601 * _temp_602 + -123.112189191112 * _temp_603 * _temp_604 + -70.51962810337 * _temp_605 * _temp_606 + 94.6477087377064 * _temp_607 * _temp_608 + 58.5250384349522 * _temp_609 * _temp_610 + 834.615400501606 * _temp_611 * _temp_612 + 3269.08846959792 * _temp_613 * _temp_614 + -38444.8585655737 * _temp_615 * _temp_616 + -76971.9381651982 * _temp_617 * _temp_618 + 53.4816736471042 * _temp_619 * _temp_620 + 2940.53578893283 * _temp_621 * _temp_622 + -12218.755278642 * _temp_623 * _temp_624 + -24502.1603062331 * _temp_625 * _temp_626 + 111.041876465723 * _temp_627 * _temp_628 + _temp_629 * _temp_630 + -12588.7452324094 * _temp_631 * _temp_632 + 9955.0963971327 * _temp_633 * _temp_634 + -30297.8855268339 * _temp_635 * _temp_636 + _temp_637 * _temp_638 + -1317.60500441623 * _temp_639 * _temp_640 + -32718.3907048773 * _temp_641 * _temp_642 + 6045.7355690525 * _temp_643 * _temp_644 + _temp_645 * _temp_646 + 10495.8174771773 * _temp_647 * _temp_648 + 3539.12273630593 * _temp_649 * _temp_650 + -5983.83568486421 * _temp_651 * _temp_652 + -26629.7449900591 * _temp_653 * _temp_654 + 2112.12027290347 * _temp_655 * _temp_656 + 1116.00107965574 * _temp_657 * _temp_658 + -2058.17677488508 * _temp_659 * _temp_660 + 3056.96906089643 * _temp_661 * _temp_662 + -32086.7772167854 * _temp_663 * _temp_664 + 355541.077312243 * _temp_665 * _temp_666 + 110838.881996805 * _temp_667 * _temp_668 + -9465.71039143113 * _temp_669 * _temp_670 + -2924.85281651262 * _temp_671 * _temp_672 + 6775.19848603092 * _temp_673 * _temp_674 + 22977.7890866897 * _temp_675 * _temp_676 + 539.62019874626 * _temp_677 * _temp_678 + -65.6380240748858 * _temp_679 * _temp_680 + _temp_681 * _temp_682 + _temp_683 * _temp_684 + _temp_685 * _temp_686 + _temp_687 * _temp_688 + _temp_689 * _temp_690 + _temp_691 * _temp_692 + _temp_693 * _temp_694 + -38917.7891638119 * _temp_695 * _temp_696 + 16931.7306240834 * _temp_697 * _temp_698 + 47922.204659262 * _temp_699 * _temp_700 + 79.0508034732885 * _temp_701 * _temp_702 + 314.262014875069 * _temp_703 * _temp_704 + 101.380950320672 * _temp_705 * _temp_706 + -1.78392884222805 * _temp_707 * _temp_708 + -0.00772820064158647 * _temp_709 * _temp_710 + _temp_711 * _temp_712 + 0.547098279381744 * _temp_713 * _temp_714 + 2114.03343301439 * _temp_715 * _temp_716 + 764.613349727222 * _temp_717 * _temp_718 + 202.09268666785 * _temp_719 * _temp_720 + 60.3953392770418 * _temp_721 * _temp_722 + 4064.8781654563 * _temp_723 * _temp_724 + -125.526658876405 * _temp_725 * _temp_726 + -21631.3867001928 * _temp_727 * _temp_728 + 72882.3936526253 * _temp_729 * _temp_730 + 33650.7340798378 * _temp_731 * _temp_732 + 153896.528263192 * _temp_733 * _temp_734 + 49012.674363247 * _temp_735 * _temp_736 + 16592.7024024447 * _temp_737 * _temp_738 + 101670.470141043 * _temp_739 * _temp_740 + _temp_741 * _temp_742 + -44263.2329499544 * _temp_743 * _temp_744 + -174431.715531716 * _temp_745 * _temp_746 + 636982.76693105 * _temp_747 * _temp_748 + 15808.0320758077 * _temp_749 * _temp_750 + _temp_751 * _temp_752 + -326178.861018323 * _temp_753 * _temp_754 + 151800.251189479 * _temp_755 * _temp_756 + -5933534.78926189 * _temp_757 * _temp_758 + _temp_759 * _temp_760 + _temp_761 * _temp_762 + -1.78392884222805 * _temp_763 * _temp_764 + _temp_765 * _temp_766 + _temp_767 * _temp_768 + -0.00627004957713619 * _temp_769 * _temp_770 + -1.78392884222805 * _temp_771 * _temp_772 + _temp_773 * _temp_774 + -7.45261009040537 * _temp_775 * _temp_776 + -0.654418197725284 * _temp_777 * _temp_778 + 0.547098279381744 * _temp_779 * _temp_780 + -7.45261009040537 * _temp_781 * _temp_782 + -1.78392884222805 * _temp_783 * _temp_784 + _temp_785 * _temp_786 + -0.00627004957713619 * _temp_787 * _temp_788 + -0.654418197725284 * _temp_789 * _temp_790 + -0.832020997375328 * _temp_791 * _temp_792 + _temp_793 * _temp_794 + _temp_795 * _temp_796 + -7.45261009040537 * _temp_797 * _temp_798 + -1.78392884222805 * _temp_799 * _temp_800 + -7.45261009040537 * _temp_801 * _temp_802 + _temp_803 * _temp_804 + -986.20449721006 * _temp_805 * _temp_806 + -76.5592851735108 * _temp_807 * _temp_808 + -25627.2263913519 * _temp_809 * _temp_810 + -52923.6167972407 * _temp_811 * _temp_812 + -814.094903207243 * _temp_813 * _temp_814 + -6948.15908305884 * _temp_815 * _temp_816 + 18162.4800247777 * _temp_817 * _temp_818 + 468.229504148863 * _temp_819 * _temp_820 + 222.791100935866 * _temp_821 * _temp_822 + -722.266421927317 * _temp_823 * _temp_824 + 965.033396424546 * _temp_825 * _temp_826 + -319.272446193581 * _temp_827 * _temp_828 + 5271.66195859881 * _temp_829 * _temp_830 + 378.549351622133 * _temp_831 * _temp_832 + 2791.27047915635 * _temp_833 * _temp_834 + -17191.6412320855 * _temp_835 * _temp_836 + -31269.0472704331 * _temp_837 * _temp_838 + -452.462229781584 * _temp_839 * _temp_840 + 3926.16957150797 * _temp_841 * _temp_842 + -615.249976144706 * _temp_843 * _temp_844 + -382.77311310227 * _temp_845 * _temp_846 + 241.115926694617 * _temp_847 * _temp_848 + -166.938623694145 * _temp_849 * _temp_850 + 128.076198170926 * _temp_851 * _temp_852 + 1137.51315711805 * _temp_853 * _temp_854 + 668.084358242222 * _temp_855 * _temp_856 + 2758.83040102999 * _temp_857 * _temp_858 + 56.5012922035928 * _temp_859 * _temp_860 + -284.000221512521 * _temp_861 * _temp_862 + 47414.5839419625 * _temp_863 * _temp_864 + 94921.5492185153 * _temp_865 * _temp_866 + 1376.61395576683 * _temp_867 * _temp_868 + -254.223167355579 * _temp_869 * _temp_870 + -103.072722140369 * _temp_871 * _temp_872 + 2.04092738023037 * _temp_873 * _temp_874 + 430.443570255391 * _temp_875 * _temp_876 + 274.289715539146 * _temp_877 * _temp_878 + 196625.264673696 * _temp_879 * _temp_880 + 2105.89118907817 * _temp_881 * _temp_882 + 80144.1264808886 * _temp_883 * _temp_884 + -34858.4333936645 * _temp_885 * _temp_886 + -2093.02983097285 * _temp_887 * _temp_888 + 17015.3090221656 * _temp_889 * _temp_890 + -175656.642549023 * _temp_891 * _temp_892 + -351333.595673047 * _temp_893 * _temp_894 + 278.099200400703 * _temp_895 * _temp_896 + -66.5445824384635 * _temp_897 * _temp_898 + 1204.04242587187 * _temp_899 * _temp_900 + 1784.85733260887 * _temp_901 * _temp_902 + 876.858341358662 * _temp_903 * _temp_904 + 624.856548613574 * _temp_905 * _temp_906 + 58125.0061505213 * _temp_907 * _temp_908 + 70.0735571669952 * _temp_909 * _temp_910 + 26052.9265635649 * _temp_911 * _temp_912 + 693.334209877005 * _temp_913 * _temp_914 + 2546.31248249178 * _temp_915 * _temp_916 + -7342.59887337164 * _temp_917 * _temp_918 + _temp_919 * _temp_920 + -285.518325696747 * _temp_921 * _temp_922 + -495.380986714205 * _temp_923 * _temp_924 + _temp_925 * _temp_926 + _temp_927 * _temp_928 + _temp_929 * _temp_930 + _temp_931 * _temp_932 + _temp_933 * _temp_934 + 423.800261490709 * _temp_935 * _temp_936 + 177.661231230887 * _temp_937 * _temp_938 + 216.158715759586 * _temp_939 * _temp_940 + -424.522414624405 * _temp_941 * _temp_942 + -540.014207901399 * _temp_943 * _temp_944 + 777.258909997662 * _temp_945 * _temp_946 + 36493.4341014532 * _temp_947 * _temp_948 + -5160.59380501124 * _temp_949 * _temp_950 + 159224.174075765 * _temp_951 * _temp_952 + 318333.190023895 * _temp_953 * _temp_954 + 146.359160229992 * _temp_955 * _temp_956 + 145.22247302835 * _temp_957 * _temp_958 + -1384.02754545859 * _temp_959 * _temp_960 + 4553.76496608557 * _temp_961 * _temp_962 + 9343.87741527812 * _temp_963 * _temp_964 + -421.895069217338 * _temp_965 * _temp_966 + -18931.4074663607 * _temp_967 * _temp_968 + -38426.4632135763 * _temp_969 * _temp_970 + -109.860304444788 * _temp_971 * _temp_972 + -5.65104256522358 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_973 + 9.93158511335958 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_974 + 14.3071162359912 * indata[u"FINISH_THK"] * indata[u"NUM_DESIGN_LAYERS"] * _temp_975 + 211.035264579626 * indata[u"FINISH_THK"] * _temp_976 * _temp_977 + 288.012536958982 * indata[u"FINISH_THK"] * _temp_978 * _temp_979 + indata[u"FINISH_THK"] * _temp_980 * _temp_981 + indata[u"FINISH_THK"] * _temp_982 * _temp_983 + indata[u"FINISH_THK"] * _temp_984 * _temp_985 + indata[u"FINISH_THK"] * _temp_986 * _temp_987 + indata[u"FINISH_THK"] * _temp_988 * _temp_989 + 559.286736185935 * indata[u"FINISH_THK"] * _temp_990 * _temp_991 + indata[u"FINISH_THK"] * _temp_992 * _temp_993 + -501.858842516128 * indata[u"FINISH_THK"] * _temp_994 * _temp_995 + -368.548105859231 * indata[u"FINISH_THK"] * _temp_996 * _temp_997 + indata[u"FINISH_THK"] * _temp_998 * _temp_999 + indata[u"FINISH_THK"] * _temp_1000 * _temp_1001 + indata[u"FINISH_THK"] * _temp_1002 * _temp_1003 + indata[u"FINISH_THK"] * _temp_1004 * _temp_1005 + 577.869710912249 * indata[u"FINISH_THK"] * _temp_1006 * _temp_1007 + 6185.94746910657 * indata[u"FINISH_THK"] * _temp_1008 * _temp_1009 + -12025.0453344955 * indata[u"FINISH_THK"] * _temp_1010 * _temp_1011 + -341.165614711408 * indata[u"FINISH_THK"] * _temp_1012 * _temp_1013 + -2333.06675173176 * indata[u"FINISH_THK"] * _temp_1014 * _temp_1015 + 39082.4326927789 * indata[u"FINISH_THK"] * _temp_1016 * _temp_1017 + 78144.7061725524 * indata[u"FINISH_THK"] * _temp_1018 * _temp_1019 + -245.65188862363 * indata[u"FINISH_THK"] * _temp_1020 * _temp_1021 + 4295.06382454434 * indata[u"FINISH_THK"] * _temp_1022 * _temp_1023 + -35.1306693002111 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1024 * _temp_1025 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1026 * _temp_1027 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1028 * _temp_1029 + -87.6787685772668 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1030 * _temp_1031 + -103.192290705939 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1032 * _temp_1033 + -44172.3206392918 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1034 * _temp_1035 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1036 * _temp_1037 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1038 * _temp_1039 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1040 * _temp_1041 + indata[u"NUM_DESIGN_LAYERS"] * _temp_1042 * _temp_1043 + -46.3031076813436 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1044 * _temp_1045 + 63.5618819225025 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1046 * _temp_1047 + -120.536478914387 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1048 * _temp_1049 + 4624.3374246634 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1050 * _temp_1051 + 9221.09652467754 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1052 * _temp_1053 + 26.0754880825474 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1054 * _temp_1055 + -29.7615893432948 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1056 * _temp_1057 + 53.2798832869618 * indata[u"NUM_DESIGN_LAYERS"] * _temp_1058 * _temp_1059 + -2306.55312161674 * _temp_1060 * _temp_1061 * _temp_1062 + _temp_1063 * _temp_1064 * _temp_1065 + _temp_1066 * _temp_1067 * _temp_1068 + _temp_1069 * _temp_1070 * _temp_1071 + _temp_1072 * _temp_1073 * _temp_1074 + _temp_1075 * _temp_1076 * _temp_1077 + _temp_1078 * _temp_1079 * _temp_1080 + _temp_1081 * _temp_1082 * _temp_1083 + -407.052184140003 * _temp_1084 * _temp_1085 * _temp_1086 + 928.375456164848 * _temp_1087 * _temp_1088 * _temp_1089 + 2947.0480952867 * _temp_1090 * _temp_1091 * _temp_1092 + _temp_1093 * _temp_1094 * _temp_1095 + _temp_1096 * _temp_1097 * _temp_1098 + 663.472644468468 * _temp_1099 * _temp_1100 * _temp_1101 + 1482.46784891145 * _temp_1102 * _temp_1103 * _temp_1104 + -300.183767615872 * _temp_1105 * _temp_1106 * _temp_1107 + -1064.71234116109 * _temp_1108 * _temp_1109 * _temp_1110 + _temp_1111 + _temp_1112 + _temp_1115 + _temp_1116 + _temp_1119 + _temp_1120 + _temp_1123 + _temp_1126 + _temp_1129 + _temp_1130 + _temp_1133 + _temp_1136 + _temp_1139 + _temp_1142 + _temp_1143 + _temp_1146 + _temp_1147 + _temp_1150 + _temp_1153 + _temp_1156 + _temp_1159 + _temp_1162 + _temp_1163 + _temp_1166 + _temp_1169 + _temp_1172 + _temp_1175 + _temp_1178 + _temp_1181 + _temp_1184 + _temp_1187 + _temp_1190 + _temp_1191 + _temp_1194 + _temp_1195 + _temp_1198 + _temp_1201 + _temp_1204 + _temp_1207 + _temp_1210 + _temp_1213 + _temp_1214 + _temp_1215 + _temp_1216 + _temp_1219 + _temp_1222 + _temp_1223 + _temp_1226 + _temp_1229 + _temp_1232 + _temp_1233 + _temp_1234 + _temp_1237 + _temp_1240

    return outdata[u"Add"]


